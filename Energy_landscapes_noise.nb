(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    726567,      13644]
NotebookOptionsPosition[    721585,      13558]
NotebookOutlinePosition[    722110,      13577]
CellTagsIndexPosition[    722067,      13574]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Stochastic Langevin Dynamics", "Subsection",
 CellChangeTimes->{{3.8350284726751494`*^9, 
  3.8350284777211795`*^9}},ExpressionUUID->"2959adb3-1f03-483b-b5c6-\
3c762b7587ec"],

Cell[CellGroupData[{

Cell["Additive noise", "Subsubsection",
 CellChangeTimes->{{3.8408600744756546`*^9, 
  3.8408600766795025`*^9}},ExpressionUUID->"10887ab3-a272-4641-8058-\
66653892678f"],

Cell["\<\
See Figure 2 in paper Shaping the Epigenetic Landscape: Complexities and \
Consequences\
\>", "Text",
 CellChangeTimes->{{3.8408602168275876`*^9, 
  3.84086024220848*^9}},ExpressionUUID->"d6cf6e07-d299-46fa-bf81-\
8f913c5da593"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "4"}], "/", "4"}], "-", 
    RowBox[{
     RowBox[{"x", "^", "2"}], "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"-", 
    RowBox[{
     RowBox[{"U", "'"}], "[", "x", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"x_", ",", "\[Sigma]_"}], "]"}], ":=", "\[Sigma]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]", "=", "0"}], ";"}], " ", 
  RowBox[{"(*", " ", "ito", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Values\[Sigma]", "=", 
   RowBox[{"{", 
    RowBox[{"0.2", ",", "0.5", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Stepsize", "=", "0.00001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Ps", "[", 
     RowBox[{"x_", ",", "\[Sigma]_", ",", "N_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"N", "/", 
      SuperscriptBox["\[Sigma]", "2"]}], 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "/", 
        SuperscriptBox["\[Sigma]", "2"]}], 
       RowBox[{"U", "[", "x", "]"}]}], "]"}]}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"eq", " ", "9"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Uq", "[", 
     RowBox[{"x_", ",", "\[Sigma]_", ",", "N_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{
       RowBox[{"U", "[", "x", "]"}], "/", 
       SuperscriptBox["\[Sigma]", "2"]}]}], "+", 
     RowBox[{"Log", "[", 
      RowBox[{
       SuperscriptBox["\[Sigma]", "2"], "/", "N"}], "]"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"eq", " ", "10"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Uq2", "[", 
      RowBox[{"x_", ",", "\[Sigma]_", ",", "N_"}], "]"}], ":=", 
     RowBox[{"-", 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"N", "/", 
         SuperscriptBox["\[Sigma]", "2"]}], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], "/", 
           SuperscriptBox["\[Sigma]", "2"]}], 
          RowBox[{"U", "[", "x", "]"}]}], "]"}]}], "]"}]}]}], ";"}], " ", 
   "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "=", 
   RowBox[{"\[Sigma]low", "=", "0.2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrapezoidalRule", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "a"}], ")"}], "*", "0.5", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Ps", "[", 
       RowBox[{"a", ",", "\[Sigma]", ",", "N"}], "]"}], "+", 
      RowBox[{"Ps", "[", 
       RowBox[{"b", ",", "\[Sigma]", ",", "N"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Area1", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"TrapezoidalRule", "[", 
      RowBox[{"i", ",", 
       RowBox[{"i", "+", "Stepsize"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "2"}], ",", "2", ",", "Stepsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nvalue", "=", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{"Area1", "\[Equal]", "1"}], ",", "N"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nlow", "=", 
   RowBox[{"N", "/.", 
    RowBox[{"Nvalue", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "Nlow", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "=", 
   RowBox[{"\[Sigma]mid", "=", "0.5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrapezoidalRule", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "a"}], ")"}], "*", "0.5", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Ps", "[", 
       RowBox[{"a", ",", "\[Sigma]", ",", "N"}], "]"}], "+", 
      RowBox[{"Ps", "[", 
       RowBox[{"b", ",", "\[Sigma]", ",", "N"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Area2", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"TrapezoidalRule", "[", 
      RowBox[{"i", ",", 
       RowBox[{"i", "+", "Stepsize"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "2"}], ",", "2", ",", "Stepsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nvalue", "=", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{"Area2", "\[Equal]", "1"}], ",", "N"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nmid", "=", 
   RowBox[{"N", "/.", 
    RowBox[{"Nvalue", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "Nmid", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "=", 
   RowBox[{"\[Sigma]high", "=", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrapezoidalRule", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "a"}], ")"}], "*", "0.5", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Ps", "[", 
       RowBox[{"a", ",", "\[Sigma]", ",", "N"}], "]"}], "+", 
      RowBox[{"Ps", "[", 
       RowBox[{"b", ",", "\[Sigma]", ",", "N"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Area3", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"TrapezoidalRule", "[", 
      RowBox[{"i", ",", 
       RowBox[{"i", "+", "Stepsize"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "2"}], ",", "2", ",", "Stepsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nvalue", "=", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{"Area3", "\[Equal]", "1"}], ",", "N"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nhigh", "=", 
   RowBox[{"N", "/.", 
    RowBox[{"Nvalue", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "Nhigh", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Ps", "[", 
       RowBox[{"x", ",", "\[Sigma]low", ",", "Nlow"}], "]"}], "]"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Ps", "[", 
       RowBox[{"x", ",", "\[Sigma]mid", ",", "Nmid"}], "]"}], "]"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Ps", "[", 
       RowBox[{"x", ",", "\[Sigma]high", ",", "Nhigh"}], "]"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x\>\"", ",", "\"\<\!\(\*SubscriptBox[\(P\), \(s\)]\)(x)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Sigma]=0.2\>\"", ",", "\"\<\[Sigma]=0.5\>\"", ",", 
      "\"\<\[Sigma]=1\>\""}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Uq", "[", 
        RowBox[{"x", ",", "\[Sigma]low", ",", "Nlow"}], "]"}], "]"}], ",", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Uq", "[", 
        RowBox[{"x", ",", "\[Sigma]mid", ",", "Nmid"}], "]"}], "]"}], ",", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Uq", "[", 
        RowBox[{"x", ",", "\[Sigma]high", ",", "Nhigh"}], "]"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "30"}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<x\>\"", ",", "\"\<\!\(\*SubscriptBox[\(U\), \(q\)]\)(x)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Sigma]=0.2\>\"", ",", "\"\<\[Sigma]=0.5\>\"", ",", 
       "\"\<\[Sigma]=1\>\""}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Uq2", "[", 
         RowBox[{"x", ",", "\[Sigma]low", ",", "Nlow"}], "]"}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Uq2", "[", 
         RowBox[{"x", ",", "\[Sigma]mid", ",", "Nmid"}], "]"}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Uq2", "[", 
         RowBox[{"x", ",", "\[Sigma]high", ",", "Nhigh"}], "]"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "30"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<x\>\"", ",", "\"\<\!\(\*SubscriptBox[\(U\), \(q\)]\)(x)\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Sigma]=0.2\>\"", ",", "\"\<\[Sigma]=0.5\>\"", ",", 
        "\"\<\[Sigma]=1\>\""}], "}"}]}]}], "]"}], " ", 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8406968087149096`*^9, 3.8406968492859287`*^9}, {
   3.8406970505337424`*^9, 3.840697067187955*^9}, {3.8406977318043013`*^9, 
   3.840697735731063*^9}, 3.840697986880844*^9, {3.8406980361889524`*^9, 
   3.840698038801011*^9}, 3.840698177462577*^9, {3.8406982940916114`*^9, 
   3.8406983007466955`*^9}, {3.84069836058142*^9, 3.8406983650229206`*^9}, {
   3.8406984036248083`*^9, 3.8406984540486155`*^9}, {3.8406985040098176`*^9, 
   3.840698510331915*^9}, {3.8406985892481213`*^9, 3.8406986067363386`*^9}, {
   3.8406987807103157`*^9, 3.8406987858232775`*^9}, {3.8406988562795277`*^9, 
   3.840698924366763*^9}, {3.840699302313339*^9, 3.8406993303168387`*^9}, {
   3.8406994357442384`*^9, 3.840699457132042*^9}, 3.8407008867901754`*^9, {
   3.84070098112724*^9, 3.84070100827989*^9}, {3.840701096682168*^9, 
   3.8407011695751514`*^9}, 3.840701229749111*^9, {3.840701279596554*^9, 
   3.8407012852157235`*^9}, {3.840701323131052*^9, 3.8407013389676447`*^9}, {
   3.8407013778370676`*^9, 3.8407014253474174`*^9}, {3.840701458838807*^9, 
   3.840701555967039*^9}, {3.840701600524969*^9, 3.8407016124870443`*^9}, {
   3.8407016430727944`*^9, 3.8407016869867*^9}, {3.8407017290455604`*^9, 
   3.8407018091295595`*^9}, {3.8407018658547907`*^9, 
   3.8407019236565385`*^9}, {3.8407021479396887`*^9, 
   3.8407022168286963`*^9}, {3.840702275269452*^9, 3.840702286635394*^9}, {
   3.840702322517462*^9, 3.8407023368661566`*^9}, {3.8407023905474377`*^9, 
   3.8407024028709936`*^9}, {3.8407024384659996`*^9, 3.840702471868064*^9}, {
   3.840702539132374*^9, 3.840702585425595*^9}, {3.840702714463168*^9, 
   3.840702785248047*^9}, {3.8407028501499453`*^9, 3.840702901372095*^9}, {
   3.8407030385191975`*^9, 3.8407032646370754`*^9}, {3.8407033705016413`*^9, 
   3.840703382429397*^9}, {3.840861143246108*^9, 3.8408611589052534`*^9}, {
   3.8408614575885887`*^9, 3.8408614677763357`*^9}, {3.8408617045417056`*^9, 
   3.840861720398676*^9}, {3.840861760377119*^9, 3.8408617956187334`*^9}, {
   3.840861835980441*^9, 3.840861876085074*^9}, {3.8408622258044233`*^9, 
   3.8408622641908865`*^9}, {3.8408627707220836`*^9, 
   3.8408627802063637`*^9}, {3.840862951169039*^9, 3.8408630059133077`*^9}, {
   3.840863128356778*^9, 3.840863142771858*^9}, 3.84086320042351*^9, {
   3.840863354309842*^9, 3.8408633652079835`*^9}, 3.8408634027853565`*^9, {
   3.8408635409636374`*^9, 3.8408635508288713`*^9}, 3.8408636194903927`*^9, 
   3.840863702953343*^9, 3.840863973617943*^9, {3.8410594645862236`*^9, 
   3.841059520899914*^9}, {3.841059582729154*^9, 3.8410595884670715`*^9}, {
   3.841059645611573*^9, 3.84105989461872*^9}, {3.841059943423438*^9, 
   3.8410599618719225`*^9}, {3.841060028380286*^9, 3.841060109950308*^9}, {
   3.8410602116715946`*^9, 3.841060238388465*^9}, {3.8410602792429295`*^9, 
   3.841060321862896*^9}, {3.8410603970107713`*^9, 3.8410604272980537`*^9}, {
   3.84106051955087*^9, 3.841060559953292*^9}, {3.841202077253341*^9, 
   3.8412021083849144`*^9}, {3.8412021438146524`*^9, 
   3.8412021647356377`*^9}, {3.8412022076592145`*^9, 
   3.8412022296336627`*^9}, {3.8412022657699533`*^9, 
   3.8412023088682847`*^9}, {3.8412023412300406`*^9, 
   3.8412023580400605`*^9}, {3.8412052596044865`*^9, 3.841205282738083*^9}, {
   3.8412053269700055`*^9, 3.841205343790017*^9}, {3.8412054153858786`*^9, 
   3.841205489907757*^9}, {3.8412055539833746`*^9, 3.8412056763763804`*^9}, {
   3.8412057196108284`*^9, 3.8412058292045293`*^9}, {3.8412059090526567`*^9, 
   3.8412060827405267`*^9}, {3.841206161577173*^9, 3.8412062791178603`*^9}, {
   3.841206336534136*^9, 3.8412064104853034`*^9}, {3.8412065010360365`*^9, 
   3.8412065250383673`*^9}, {3.841206594457271*^9, 3.841206601759766*^9}, {
   3.8412067005110197`*^9, 3.841206713288909*^9}, {3.8412070686575785`*^9, 
   3.841207124526615*^9}, {3.8412074344378166`*^9, 3.841207472239688*^9}, {
   3.8412075225258923`*^9, 3.84120757210735*^9}, {3.841207699771965*^9, 
   3.841207762649688*^9}, {3.8412115258918047`*^9, 3.8412115260909996`*^9}, {
   3.841376762115212*^9, 3.841376779033372*^9}, {3.8413769877452183`*^9, 
   3.841376988022679*^9}, {3.8413770724012833`*^9, 3.8413771204881544`*^9}, {
   3.8413771875925927`*^9, 3.8413771997465096`*^9}, {3.8414569909081607`*^9, 
   3.841457008667076*^9}},ExpressionUUID->"f18a3429-f261-430e-b634-\
c8f5715b46db"],

Cell[CellGroupData[{

Cell[BoxData["2.924844577391063`*^-7"], "Print",
 CellChangeTimes->{3.841203197742676*^9, 3.84120332949284*^9, 
  3.8412036416370897`*^9, 3.841203752040598*^9, 3.8412037912599745`*^9, 
  3.8412040652695713`*^9, 3.8412041120382757`*^9, 3.841204510482253*^9, 
  3.8412047084964066`*^9, 3.8412048300671945`*^9, 3.84120494715631*^9, 
  3.841205052530702*^9, 3.8412051716319304`*^9, 3.841205299688471*^9, 
  3.84120534996166*^9, 3.8412058354733534`*^9, 3.8412064245202494`*^9, 
  3.8412065299937687`*^9, 3.841206611369732*^9, 3.8412067228912053`*^9, 
  3.8412071313500056`*^9, 3.8412077716425023`*^9, 3.841211536562619*^9, 
  3.841376787983881*^9, 3.841376995677405*^9, 3.841377128010745*^9, 
  3.841377240263605*^9},
 CellLabel->
  "During evaluation of \
In[963]:=",ExpressionUUID->"f942b74e-0fe4-4b82-833a-a5c5f2734ab9"],

Cell[BoxData["0.02398006112429934`"], "Print",
 CellChangeTimes->{3.841203197742676*^9, 3.84120332949284*^9, 
  3.8412036416370897`*^9, 3.841203752040598*^9, 3.8412037912599745`*^9, 
  3.8412040652695713`*^9, 3.8412041120382757`*^9, 3.841204510482253*^9, 
  3.8412047084964066`*^9, 3.8412048300671945`*^9, 3.84120494715631*^9, 
  3.841205052530702*^9, 3.8412051716319304`*^9, 3.841205299688471*^9, 
  3.84120534996166*^9, 3.8412058354733534`*^9, 3.8412064245202494`*^9, 
  3.8412065299937687`*^9, 3.841206611369732*^9, 3.8412067228912053`*^9, 
  3.8412071313500056`*^9, 3.8412077716425023`*^9, 3.841211536562619*^9, 
  3.841376787983881*^9, 3.841376995677405*^9, 3.841377128010745*^9, 
  3.84137725080832*^9},
 CellLabel->
  "During evaluation of \
In[963]:=",ExpressionUUID->"6afa4036-e324-480e-bca4-e423ac7cd25d"],

Cell[BoxData["0.24020855766179733`"], "Print",
 CellChangeTimes->{3.841203197742676*^9, 3.84120332949284*^9, 
  3.8412036416370897`*^9, 3.841203752040598*^9, 3.8412037912599745`*^9, 
  3.8412040652695713`*^9, 3.8412041120382757`*^9, 3.841204510482253*^9, 
  3.8412047084964066`*^9, 3.8412048300671945`*^9, 3.84120494715631*^9, 
  3.841205052530702*^9, 3.8412051716319304`*^9, 3.841205299688471*^9, 
  3.84120534996166*^9, 3.8412058354733534`*^9, 3.8412064245202494`*^9, 
  3.8412065299937687`*^9, 3.841206611369732*^9, 3.8412067228912053`*^9, 
  3.8412071313500056`*^9, 3.8412077716425023`*^9, 3.841211536562619*^9, 
  3.841376787983881*^9, 3.841376995677405*^9, 3.841377128010745*^9, 
  3.8413772607224884`*^9},
 CellLabel->
  "During evaluation of \
In[963]:=",ExpressionUUID->"639911ee-97ea-46d0-83bd-cd3b06a24514"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/+/Z/w9TqNqS
          "]]}, Annotation[#, "Charting`Private`Tag$16015#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
qJw/Qbr2PQ78HtodTr1Ly7dJ59ftBBzcOcG/fUUZj/7i+ETTE3EwFhXc8BTw
SOiNtMNQCg4y1a7mssvjkf5jjviiNBw4sKxHZEvT4ulOrj7MwMHFumw3RTGa
3nF7E+YycbD7pZHhuDAelWU7/7iWjYPWiwevPxfAo1aB8UdOn3EQvdZ49vBJ
PDoZW9HilkPLJ9+TvYAbjwhalnu1cnEgZC2xpnwIjwRij91l+IIDvABucJYd
j96lrhUH03DJeDzyZsGj7JElh7807Bt/N/0YAx61DE8kHs+j+ePzniN2lGX0
3cfd5iwNi/A5TaasLKNJ+iu7WGm4/N1w7u8/y0hvw+dVDW29GtuNZ+yjy4hJ
015Uk4YnvPOuK/Yso363NZ4SGh+nDa79zxuXUa1418tNGl8GW5+h/PJlxJLj
93ofDcdMzqfPfl1Gdc7aD7dp+Qrf03Y8lrmMDjvfguos2nltFZc1EpbRvlH+
O8Y0fdSuCe15FbGMwgVNS3+l0877Gd5bHriMzDdlywRo+jqdIyWueCyjKL5w
7zs0/RlSH1qfdVxG+r70V1STaecdbZcxslhGv6mDp4Vo9SqjT25rVl9Gucan
FR7T6qvmzhK3c2MZdd93mGyPoe2/5PRQ5tIy6nvS8ZKd5g+GoRukZMFlpKuo
F3EilLbf3fz6fp5lpDym+XQpiOan+qMRezmWkfTJDfH/+0+14J/QM9ISYvou
edqb5teYwAidu51LSMydHYt3oMWTSXwBdUvohUGtlpItzW+OjxZKS5ZQr98m
T/djHIw/kPU7k7aEmpbUvnkY/d+vowWUZ7R4npPtUsr/9+dNTyn7JfROqEWq
XfH/fixQsnq4hAylLl29AThwZPEb61NdQpLSd+700Pq5dPzs3lx+WvwlRc3H
x3DgeZnuS/zRJSQR+HLW5jCtv98Pqr5hX0K7ZCakdPbjoEozKMyCtIiaJFeG
+3fjoLH+H+epnkVEd3H1fsLcLPTl5HHH+CwirQ8O2Sb5sxCz51Wpv9siuvx9
crAlcxbumRsbPLVbRKp9GgrHk2dh6ATHR/X7i0jp60ScR/gsTEY48rFJLKKX
8Q+yBRxmYclNWsh7YgHZx3A81/9vFgr69jbZ9y8gtkOpi2b8s+AoMWtp2LaA
cPKD5+5xz8La/LvP8sULSOWZHYmemXZfGm6eWw9bQL+aa9ldJmn3uWKptDUs
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
          "]]}, Annotation[#, "Charting`Private`Tag$16015#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$16015#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(s\\)]\\)(x)\"", TraditionalForm]},
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.999999918367347, 1.999999918367347}, {0, 2}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\[Sigma]=0.2\"", "\"\[Sigma]=0.5\"", "\"\[Sigma]=1\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8412031928377624`*^9, 3.8412033412778587`*^9, 
  3.841203651038216*^9, 3.8412037628917437`*^9, 3.841203875166252*^9, 
  3.841204075526128*^9, 3.8412041242423315`*^9, 3.841204520270838*^9, 
  3.8412047190988116`*^9, 3.8412048419464436`*^9, 3.841204958607432*^9, 
  3.8412050638613358`*^9, 3.841205182462884*^9, 3.8412052942985344`*^9, 
  3.841205344301816*^9, 3.8412058296686215`*^9, 3.841206419902752*^9, 
  3.8412065254112844`*^9, 3.841206606789748*^9, 3.8412067181538982`*^9, 
  3.8412071269217777`*^9, 3.841207783115355*^9, 3.8412115486310263`*^9, 
  3.841376802244649*^9, 3.841377008301712*^9, 3.841377140434904*^9, 
  3.8413772610202894`*^9},
 CellLabel->
  "Out[988]=",ExpressionUUID->"515b3dc8-ee50-4d74-bb86-9c83deb944c0"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$16106#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Wx1ZJVQsXsuZXSNIhuf9Y8nDOVTMEP1W2biRDPL2Nt5iH4l6GXX68GbCr7FU
1yqeilOmV+t2ixF+h3Zx33tMxaIp4c13JAi//OjfJWFUbHnXOPaIDOGnxHoz
fZ0YP7Iz9bY84Zd42l3Om4q7upWj5fYQfqI/NF3cCH21l+26mmQo5kho/G5J
xQEv91RnHiL0A9fFrhpQibw+DFlvQuhP+ZzW3E/FQbdzmlqJfHB2GLASdlJx
dKrr6XRXQs8iq5q8lYqX2k6U53sQeaoWfcwrSPhJkf4qE/kzyx7fFcCawrq2
9bVOEcT4sMe2Fr+msIzhLpfEr8T4JZbk3aoprGgx+3Chgsib95mJosIpTAt/
yfz6iwy9zlp3ZJOmsPFjauHZsf/ltTt7OWAKM76aPw+ToRD5NAxSvzSFUzZo
GvBoUIg8ZhtdOD2FNQQE0+iHKeC97k5Pq9kUbnu/k/yPuM9FvXK8GdJTeDSd
J/RKOgWCdNk/xYlOYcnKb/a1JcT9ftluFsE/hc9MW7Iu/aRAuXXkIzfWJE5a
c06/YJoCtdXjQlItk/j8+43b5aENWtMztzy/NYkDCoCi+bcNnnPfKwr1n8Re
Rm1f4pfbwP7sCacrFyexjEHaTyvhdujYLvja8hhRP0NzST7UDv2PvSXXq07i
gtyjlqPv22HKX2NXSN8EVuzOXP/YuwOyW3nrLpEnMFvxSt3nBx3grTp8/njj
BDZew2G9LaUDGGPP0vYVTOBc2eRLDb0dsHh8Xmn20QS2nDe5eNuaeJ7rF2m4
wwQWNC4pEjTogh2C6JDNm3FsvN33hYtzD0Sp9F9zfzKOLSXO0hi3e4BpeftL
SPg4nhBudGtN7YHGx1Uyn3zGcautL/dFZg/4bvxv7RqjcbwUE521ENsLNZus
G/OpY1j3n1pjzJU+cN92xk7s4Bg+k/7TMaijHz4rhLsPDI7i7WH95WZswyDR
fLJwd/so/vzVKDNz6zA88NfhvvpzFDf2UJtlNYfhbNVY8trCUSxZorHO2X0Y
RF3M+hWjRvEDloDDnz/DcOOxkIO/9ihesXcs6soeAWNmvAHvw7844+FAAq/f
KPRW50ju3TuCa/y1ahLUJ2BY8Zka/jqIB94kRv/8TYcNN1P3KrP349ZznPO5
S7OguJeqmDzThWVIjtQD5QtwR3+yqTCAgmveG4tHXFuGCuMJC43TFDxWsnJW
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
          "]]}, Annotation[#, "Charting`Private`Tag$16106#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$16106#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(U\\), \\(q\\)]\\)(x)\"", TraditionalForm]},
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.999999918367347, 1.999999918367347}, {-1, 30}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\[Sigma]=0.2\"", "\"\[Sigma]=0.5\"", "\"\[Sigma]=1\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8412031928377624`*^9, 3.8412033412778587`*^9, 
  3.841203651038216*^9, 3.8412037628917437`*^9, 3.841203875166252*^9, 
  3.841204075526128*^9, 3.8412041242423315`*^9, 3.841204520270838*^9, 
  3.8412047190988116`*^9, 3.8412048419464436`*^9, 3.841204958607432*^9, 
  3.8412050638613358`*^9, 3.841205182462884*^9, 3.8412052942985344`*^9, 
  3.841205344301816*^9, 3.8412058296686215`*^9, 3.841206419902752*^9, 
  3.8412065254112844`*^9, 3.841206606789748*^9, 3.8412067181538982`*^9, 
  3.8412071269217777`*^9, 3.841207783115355*^9, 3.8412115486310263`*^9, 
  3.841376802244649*^9, 3.841377008301712*^9, 3.841377140434904*^9, 
  3.841377261295369*^9},
 CellLabel->
  "Out[989]=",ExpressionUUID->"70a51a45-8b5c-4916-bd80-86bea749beb0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multiplicative noise", "Subsubsection",
 CellChangeTimes->{{3.8412031757940817`*^9, 3.8412031785899177`*^9}, {
  3.841203240621299*^9, 
  3.8412032429693365`*^9}},ExpressionUUID->"5c6d62d7-40cc-4808-8827-\
da4105899e72"],

Cell["\<\
Example 1: Shifting the fixed points
See Figure 3 in paper\
\>", "Text",
 CellChangeTimes->{{3.841203227508231*^9, 3.8412032557336874`*^9}, 
   3.8412132439328423`*^9},ExpressionUUID->"a58ff05d-bb46-49e5-993a-\
3d814a9fed3d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "4"}], "/", "4"}], "-", 
    RowBox[{
     RowBox[{"x", "^", "2"}], "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"-", 
    RowBox[{
     RowBox[{"U", "'"}], "[", "x", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"x_", ",", "\[Sigma]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"\[Sigma]", "/", "4"}], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", "4"], "-", 
      RowBox[{"4", 
       SuperscriptBox["x", "2"]}], "+", "8"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]", "=", "0"}], ";"}], " ", 
  RowBox[{"(*", " ", "ito", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Values\[Sigma]", "=", 
   RowBox[{"{", 
    RowBox[{"0.2", ",", "0.5", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Stepsize", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IntegrationConstant", "[", "\[Sigma]_", "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       SuperscriptBox["\[Sigma]", "2"]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ArcTan", "[", "1", "]"}], "+", 
        RowBox[{"3", "/", "2"}]}], ")"}]}], "+", 
     RowBox[{"2", " ", "\[Alpha]", " ", 
      RowBox[{"Log", "[", "8", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"IntegrationConstant", "[", "\[Sigma]_", "]"}], "=", "1"}], 
    ";"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrapezoidalRulePs", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "a"}], ")"}], "*", "0.5", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Ps", "[", 
       RowBox[{"a", ",", "\[Sigma]", ",", "N"}], "]"}], "+", 
      RowBox[{"Ps", "[", 
       RowBox[{"b", ",", "\[Sigma]", ",", "N"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Ps", "[", 
     RowBox[{"x_", ",", "\[Sigma]_", ",", "N_"}], "]"}], ":=", 
    RowBox[{"16", " ", 
     RowBox[{"N", "/", 
      SuperscriptBox["\[Sigma]", "2"]}], 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "-", "1"}], ")"}], 
        RowBox[{"Log", "[", 
         RowBox[{
          SuperscriptBox["x", "4"], "-", 
          RowBox[{"4", 
           SuperscriptBox["x", "2"]}], "+", "8"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"1", "/", 
         SuperscriptBox["\[Sigma]", "2"]}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ArcTan", "[", 
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["x", "2"], "/", "2"}]}], "]"}], "-", 
          RowBox[{"2", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["x", "2"], "-", "6"}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["x", "4"], "-", 
              RowBox[{"4", 
               SuperscriptBox["x", "2"]}], "+", "8"}], ")"}]}]}], "+", 
          RowBox[{"IntegrationConstant", "[", "\[Sigma]", "]"}]}], ")"}]}]}], 
      "]"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"eq", " ", "11"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Uq", "[", 
      RowBox[{"x_", ",", "\[Sigma]_", ",", "N_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Sigma]", "2"], "/", 
         RowBox[{"(", 
          RowBox[{"16", " ", "N"}], ")"}]}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["x", "4"], "-", 
           SuperscriptBox["x", "2"], "+", "8"}], ")"}], 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Alpha]"}], ")"}]}]]}], "]"}], "-", 
      RowBox[{
       RowBox[{"1", "/", 
        SuperscriptBox["\[Sigma]", "2"]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ArcTan", "[", 
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox["x", "2"], "/", "2"}]}], "]"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["x", "2"], "-", "6"}], ")"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["x", "4"], "-", 
            SuperscriptBox["x", "2"], "+", "8"}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{"IntegrationConstant", "[", "\[Sigma]", "]"}]}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"eq", " ", "12"}], " ", "*)"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Uq", "[", 
     RowBox[{"x_", ",", "\[Sigma]_", ",", "N_"}], "]"}], ":=", 
    RowBox[{"-", 
     RowBox[{"Log", "[", 
      RowBox[{"16", " ", 
       RowBox[{"N", "/", 
        SuperscriptBox["\[Sigma]", "2"]}], 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "-", "1"}], ")"}], 
          RowBox[{"Log", "[", 
           RowBox[{
            SuperscriptBox["x", "4"], "-", 
            RowBox[{"4", 
             SuperscriptBox["x", "2"]}], "+", "8"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"1", "/", 
           SuperscriptBox["\[Sigma]", "2"]}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ArcTan", "[", 
             RowBox[{"1", "-", 
              RowBox[{
               SuperscriptBox["x", "2"], "/", "2"}]}], "]"}], "-", 
            RowBox[{"2", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["x", "2"], "-", "6"}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["x", "4"], "-", 
                RowBox[{"4", 
                 SuperscriptBox["x", "2"]}], "+", "8"}], ")"}]}]}], "+", 
            RowBox[{"IntegrationConstant", "[", "\[Sigma]", "]"}]}], 
           ")"}]}]}], "]"}]}], "]"}]}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "=", 
   RowBox[{"\[Sigma]low", "=", "0.2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrapezoidalRulePs", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "a"}], ")"}], "*", "0.5", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Ps", "[", 
       RowBox[{"a", ",", "\[Sigma]", ",", "N"}], "]"}], "+", 
      RowBox[{"Ps", "[", 
       RowBox[{"b", ",", "\[Sigma]", ",", "N"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Area1", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"TrapezoidalRulePs", "[", 
      RowBox[{"i", ",", 
       RowBox[{"i", "+", "Stepsize"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "2"}], ",", "2", ",", "Stepsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nvalue", "=", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{"Area1", "\[Equal]", "1"}], ",", "N"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nlow", "=", 
   RowBox[{"N", "/.", 
    RowBox[{"Nvalue", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "Nlow", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Uq", "[", 
    RowBox[{"1", ",", "\[Sigma]low", ",", "Nlow"}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "=", 
   RowBox[{"\[Sigma]mid", "=", "0.5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrapezoidalRulePs", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "a"}], ")"}], "*", "0.5", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Ps", "[", 
       RowBox[{"a", ",", "\[Sigma]", ",", "N"}], "]"}], "+", 
      RowBox[{"Ps", "[", 
       RowBox[{"b", ",", "\[Sigma]", ",", "N"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Area2", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"TrapezoidalRulePs", "[", 
      RowBox[{"i", ",", 
       RowBox[{"i", "+", "Stepsize"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "2"}], ",", "2", ",", "Stepsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nvalue", "=", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{"Area2", "\[Equal]", "1"}], ",", "N"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nmid", "=", 
   RowBox[{"N", "/.", 
    RowBox[{"Nvalue", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "Nmid", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "=", 
   RowBox[{"\[Sigma]high", "=", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrapezoidalRulePs", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "a"}], ")"}], "*", "0.5", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Ps", "[", 
       RowBox[{"a", ",", "\[Sigma]", ",", "N"}], "]"}], "+", 
      RowBox[{"Ps", "[", 
       RowBox[{"b", ",", "\[Sigma]", ",", "N"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Area3", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"TrapezoidalRulePs", "[", 
      RowBox[{"i", ",", 
       RowBox[{"i", "+", "Stepsize"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "2"}], ",", "2", ",", "Stepsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nvalue", "=", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{"Area3", "\[Equal]", "1"}], ",", "N"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nhigh", "=", 
   RowBox[{"N", "/.", 
    RowBox[{"Nvalue", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "Nhigh", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Ps", "[", 
       RowBox[{"x", ",", "\[Sigma]low", ",", "Nlow"}], "]"}], "]"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Ps", "[", 
       RowBox[{"x", ",", "\[Sigma]mid", ",", "Nmid"}], "]"}], "]"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Ps", "[", 
       RowBox[{"x", ",", "\[Sigma]high", ",", "Nhigh"}], "]"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x\>\"", ",", "\"\<\!\(\*SubscriptBox[\(P\), \(s\)]\)(x)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Sigma]=0.2\>\"", ",", "\"\<\[Sigma]=0.5\>\"", ",", 
      "\"\<\[Sigma]=1\>\""}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Uq", "[", 
       RowBox[{"x", ",", "\[Sigma]low", ",", "Nlow"}], "]"}], "]"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Uq", "[", 
       RowBox[{"x", ",", "\[Sigma]mid", ",", "Nmid"}], "]"}], "]"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Uq", "[", 
       RowBox[{"x", ",", "\[Sigma]high", ",", "Nhigh"}], "]"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "20"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x\>\"", ",", "\"\<\!\(\*SubscriptBox[\(U\), \(q\)]\)(x)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Sigma]=0.2\>\"", ",", "\"\<\[Sigma]=0.5\>\"", ",", 
      "\"\<\[Sigma]=1\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8412082541727943`*^9, 3.8412083376467104`*^9}, {
   3.8412083901349726`*^9, 3.841208586224292*^9}, {3.8412086448711443`*^9, 
   3.841208789713374*^9}, {3.8412088330093412`*^9, 3.841208871528138*^9}, {
   3.841208917709203*^9, 3.8412090516176844`*^9}, {3.8412095419932647`*^9, 
   3.8412095421916275`*^9}, {3.8412111542278333`*^9, 
   3.8412111609419284`*^9}, {3.8412114718361483`*^9, 
   3.8412114727766376`*^9}, {3.84121190011701*^9, 3.8412119002890787`*^9}, {
   3.8412119524995346`*^9, 3.8412119527255297`*^9}, {3.841212433137598*^9, 
   3.8412124349127145`*^9}, {3.841212507126537*^9, 3.84121251912916*^9}, {
   3.8412128853370557`*^9, 3.841212900460493*^9}, 3.8412154387686777`*^9, 
   3.8412154877886467`*^9, 3.841215540320857*^9, {3.8412156560495186`*^9, 
   3.841215665704928*^9}, 3.8412159957058477`*^9, {3.8412162369344807`*^9, 
   3.8412164298606815`*^9}, {3.841216678906212*^9, 3.841216756459233*^9}, {
   3.841217017409148*^9, 3.841217041802147*^9}, {3.8412171884727163`*^9, 
   3.8412172120362873`*^9}, {3.8412186246968427`*^9, 
   3.8412186438877296`*^9}, {3.8412195836915293`*^9, 3.841219587897685*^9}, 
   3.841219650040713*^9, {3.841221400340564*^9, 3.841221625994498*^9}, {
   3.8412217131226215`*^9, 3.841221719893279*^9}, {3.8412218184519305`*^9, 
   3.8412218675847225`*^9}, {3.8412219917898026`*^9, 
   3.8412219919449816`*^9}, {3.8412251801874113`*^9, 3.84122529880427*^9}, {
   3.841225335705423*^9, 3.841225381317753*^9}, {3.841225469905749*^9, 
   3.8412254727666345`*^9}, {3.8412255690306096`*^9, 
   3.8412255704948244`*^9}, {3.841225854997161*^9, 3.8412258789041224`*^9}, {
   3.841226199596938*^9, 3.8412262245100727`*^9}, {3.8412262569547234`*^9, 
   3.8412262598677216`*^9}, 3.8412263157984924`*^9, {3.8412264613312407`*^9, 
   3.8412264917988157`*^9}, {3.8412266185648737`*^9, 
   3.8412266561987476`*^9}, {3.8412267796775184`*^9, 3.841226783802825*^9}, 
   3.841226952888726*^9, {3.8412269875269833`*^9, 3.841226994550045*^9}, {
   3.8413065692453604`*^9, 3.841306674930872*^9}, {3.8413067208642855`*^9, 
   3.8413067302483244`*^9}, {3.841306868631569*^9, 3.841306954448354*^9}, {
   3.841307868672732*^9, 3.841307876749342*^9}, {3.84130792840836*^9, 
   3.8413080090597205`*^9}, {3.8413082155148945`*^9, 3.841308416234559*^9}, {
   3.841308512675242*^9, 3.841308522589449*^9}, {3.8413092697451935`*^9, 
   3.841309274454914*^9}, {3.841309397149762*^9, 3.841309397495743*^9}, {
   3.841309451775214*^9, 3.8413094757828226`*^9}, {3.8413096284576015`*^9, 
   3.84130963826082*^9}, {3.841309698897298*^9, 3.8413097138795166`*^9}, {
   3.841311334586727*^9, 3.8413113734072094`*^9}, 3.8413114741244354`*^9, {
   3.841311613914273*^9, 3.84131162972232*^9}, {3.8413768014625683`*^9, 
   3.8413768113821783`*^9}, {3.8413769769147177`*^9, 
   3.8413769774337482`*^9}, {3.841457081416193*^9, 3.8414571406426315`*^9}, {
   3.8448622192931128`*^9, 3.84486222767225*^9}, {3.844862332401355*^9, 
   3.8448623328614817`*^9}, {3.8448783536365485`*^9, 3.844878369001483*^9}, {
   3.844878402921462*^9, 3.8448784131579485`*^9}, {3.8448785331003294`*^9, 
   3.8448785660165434`*^9}, {3.844878608610947*^9, 3.8448786439395885`*^9}, {
   3.844878692043337*^9, 3.8448787215659857`*^9}, {3.8448792993042393`*^9, 
   3.8448793063901644`*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"f8e937b5-f3a1-4d7d-a15a-f5a4b7729300"],

Cell[CellGroupData[{

Cell[BoxData["2.657504560264448`*^-53"], "Print",
 CellChangeTimes->{
  3.841227006736722*^9, 3.841306966899796*^9, 3.841307887841905*^9, 
   3.84130844240714*^9, 3.841308535501178*^9, 3.8413094871347184`*^9, 
   3.8413096505649643`*^9, 3.8413097251992226`*^9, 3.841311385943075*^9, 
   3.841311487311119*^9, 3.8413116412023444`*^9, 3.841376827198043*^9, 
   3.8413772820758924`*^9, 3.8448622579072084`*^9, 3.8448623344326982`*^9, 
   3.844878374917347*^9, 3.8448784139711075`*^9, 3.844878566997033*^9, 
   3.8448786114337225`*^9, 3.844878644836672*^9, {3.8448787093650713`*^9, 
   3.8448787222204223`*^9}, 3.844879307667117*^9},
 CellLabel->
  "During evaluation of \
In[218]:=",ExpressionUUID->"8faf153d-6d69-4f82-85b8-76cd0ec34e44"],

Cell[BoxData[
 RowBox[{"-", "0.43911065074209815`"}]], "Print",
 CellChangeTimes->{
  3.841227006736722*^9, 3.841306966899796*^9, 3.841307887841905*^9, 
   3.84130844240714*^9, 3.841308535501178*^9, 3.8413094871347184`*^9, 
   3.8413096505649643`*^9, 3.8413097251992226`*^9, 3.841311385943075*^9, 
   3.841311487311119*^9, 3.8413116412023444`*^9, 3.841376827198043*^9, 
   3.8413772820758924`*^9, 3.8448622579072084`*^9, 3.8448623344326982`*^9, 
   3.844878374917347*^9, 3.8448784139711075`*^9, 3.844878566997033*^9, 
   3.8448786114337225`*^9, 3.844878644836672*^9, {3.8448787093650713`*^9, 
   3.8448787222204223`*^9}, 3.844879307706154*^9},
 CellLabel->
  "During evaluation of \
In[218]:=",ExpressionUUID->"119a4f7f-1cde-4dcd-abfd-cba971ddb726"],

Cell[BoxData["1.4142743027478316`*^-9"], "Print",
 CellChangeTimes->{
  3.841227006736722*^9, 3.841306966899796*^9, 3.841307887841905*^9, 
   3.84130844240714*^9, 3.841308535501178*^9, 3.8413094871347184`*^9, 
   3.8413096505649643`*^9, 3.8413097251992226`*^9, 3.841311385943075*^9, 
   3.841311487311119*^9, 3.8413116412023444`*^9, 3.841376827198043*^9, 
   3.8413772820758924`*^9, 3.8448622579072084`*^9, 3.8448623344326982`*^9, 
   3.844878374917347*^9, 3.8448784139711075`*^9, 3.844878566997033*^9, 
   3.8448786114337225`*^9, 3.844878644836672*^9, {3.8448787093650713`*^9, 
   3.8448787222204223`*^9}, 3.844879307730144*^9},
 CellLabel->
  "During evaluation of \
In[218]:=",ExpressionUUID->"3bfb4dbc-5194-408b-b25e-7e52a626284f"],

Cell[BoxData["0.00569356489644269`"], "Print",
 CellChangeTimes->{
  3.841227006736722*^9, 3.841306966899796*^9, 3.841307887841905*^9, 
   3.84130844240714*^9, 3.841308535501178*^9, 3.8413094871347184`*^9, 
   3.8413096505649643`*^9, 3.8413097251992226`*^9, 3.841311385943075*^9, 
   3.841311487311119*^9, 3.8413116412023444`*^9, 3.841376827198043*^9, 
   3.8413772820758924`*^9, 3.8448622579072084`*^9, 3.8448623344326982`*^9, 
   3.844878374917347*^9, 3.8448784139711075`*^9, 3.844878566997033*^9, 
   3.8448786114337225`*^9, 3.844878644836672*^9, {3.8448787093650713`*^9, 
   3.8448787222204223`*^9}, 3.8448793077788477`*^9},
 CellLabel->
  "During evaluation of \
In[218]:=",ExpressionUUID->"acb476d0-b07a-4437-9234-21a42f40ab96"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
qdx3x0aKmHBD6oLYYOgC/h+d6vZi
          "]], 
         LineBox[CompressedData["
1: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
          "]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$5353#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
U1Bgf8H2Q3DP89OFgktMHMkxzq4cPgT7G/M7iwKY+E73iYRtmjU8ctudUOHJ
xMQhWRHccBhcis2FmuyYuI6ykc9G7Sis4QiebznMxKsj0a37so7CsyM97a8t
mbgzacCOV9gWpJac4jqMmcjpicuUIG2hx9hXcFh12YfG24zrS3YQnrrn3MhO
JvJcnG19FGYPqlOM1k/yTIx2CKduWO0AN+Kv3ZjayETS6ljEyZ2OYDqQIbDA
x8RhHjm+jmQn+K1E8aBxSWza5dgmqOsMOVcU3pEkie+0VdNsx5yBJVceu+IP
iVk+83fcDVyg5vzrVetHSTQ0cTOz3EWBv+R8NAsGSfx4oUz+7xVu0PB+w99G
VBL7Y+Iq/P3coNnofPX5dyQu2tWLhjiehPb1Yu6tT0lcGuSplLdyB+vXjbco
JSQ2MONkHHvdoTf4TMNSAYmFx2K8+Z1Ow4eJetEdWSQGVvf6q108A+NVlOao
WBL1f7dVbvnPA055Cv7YGEXiUOCW7oJwT/gqU7Wh4gqJbTyXZ84qnoPZGH7f
MT8SaZZHRuejvWDRsXSLwQkSy26X5esEekPwWkcLqj2Jq/i6f3sY+ADZzHPx
3BESwxPN1ctX+wLPLrvOu/tInPOx073i5AdrWGTIwm4S3SVfffqlEACJFfkF
8btIrDha8FAqJwBEzthQ5XeQGJVTP2ohEwiS3Q+Vj24mMVnJY1xG7h+Qyz04
VMpH4o0Tq15dPhwEj+zmePdxGfjx/KNm/skg2CGYtXuEwUA1/4HjeqGXYFfA
r9g1vxjYqjT94ENdMOiY39HxGGZgvvdGtrPrFainw0lOPwNX9qX2OoiFwt7S
bwnp3QxU7IoKym8PBWMpo8lXrxgY53U2LfVgOFjOfEmRK2Pgi8Kefp2mSOjK
SmyqK2SgoKLGYveuKDhyVG/WJo+BfVzlmIWMKLBviDMJu8fA54eF4jdHRoNb
gubv4WgGfjK8Ttp5X4OQ6pTYrjAGai90fF81fQ3SR+ZlWoIZuJm/x+6Iewy0
q9ZaFPowcL7T6Mpn91jQ7tqbF+TMwMyW5vQTsTfAZvG+vpc9A+X29T3UlboJ
nlvYPX8fYeC+0pvqokU3IcsbWeb7GShVrDJKDsYBv7C5g7gWA/9qMlyv4JII
crqPf/CrMbCnVT4ibNUtMHDlv0ruXOZ56fBif+Ut8CtrLZ/YssyzPm5KUygJ
hm2sBSsEGfgo7U2kXkwylNx2eH5ogo4p4uu8cDAN3tbV2RqP0DE6QlQ9ziod
Jj5t/KY9SEee0gfD8S3pIKXxn6R0Fx3VYtRkHarvQEQvxfdbPR3D3/90Z9Tc
g0x686rRKjr+Wcid8zbMgGo5+azeMjp+ju72obzJgBm/yda6fDrmZdpYjI5l
gq3oOfnYJDpS+u3WmWs+gAv67fWX4+lo2vlTOafzAVw/qXLYO5aOPjutCpu9
suH5059X7ELpKFyz3j60PAd22AZ8kPeko/N5jaRfag+BnnLlBgIddXTfsB0U
8mFapmV2/146Np8pFxVLzYeBAn7r7j10lD4/ltXK+xiqGpJFR5XpGHkitsD4
+2Pw+fwkkxSnY8Ll238E+p+Ay4WfrChhOjYmaahY2haC1ZIWRVCQjm15X0rr
+wtBaU3T9o0cGib0yOdqjRbBF833JTozNJzfqihqIlQC1MZN6198piHfUEhy
QlYJNO+j+JuP0vAXP/uxtkYpZDvN6hyj0pBCkfcudi2D41E86PechscGT9v7
XqiA7l7VvuIkGq63EPe9tr0KnjsHaGvH07BYJYLfJrIKiifr0htiaDg9ZO7p
O1YFN+imzm0hNHTlmN1/mV0NZnJOX6ZO07BfftF8enct1PvGLG7Tp6Hp2uKY
0fRn8ITR7likTcO4etqYpGAD3Lkq0qChTsOzpkTIq7AGCLx7Pxy201ASmkKu
nm8EdXwq8Pc6GtqCm3vN8ReQJzy26d7EEm768L354ItmSDkBAvojSyhmWRAX
vqIFogtzF4YHlpCQ69f33t8Cp0zde6Q7lzBCNm7VRWoLyAfNXMupXcJJ98Sf
yvMv4ZZA0djg4yXUeR7Vnj3yCv4HmWgh5w==
          "]], 
         LineBox[CompressedData["
1:eJw1mnk8Vd/3/xVFCmWKEpJMSaa3DLGQJplDSoYSlUoqijKTlJIhU+YxyTxE
kn3N8zzP4z1Uupx7EQrf83k8fr9/7n08H3ftfdZe67XW3vtxz+EbD4xst9PR
0Z0mPv73vcfRhHIzZgU9rnl2yOdhDSRmMdYV/7eCDjAWLvglN0Hw2u1CU+kV
pMETo9/2rwm8zjYl/pFYQWpDj7K+XG4G64k3z5UEV1D50MMyC7YWEOBkl/nO
vILS/DKnu1+0Qvxzvtia8WUkzHHWvO9sB8RqyzzqfrWMOu4kNbi7dYPwbu2m
Dr9lNLJgfxbP7obPzTeE2jyXkWUYy85X491QpvO+q8F5GQkMCFwRPN0Dg3p/
ZCuuL6NQv/mdzbt7gfvSd1qG0jL658rJ/zupD96ZX3D2+LGEgnnjWXv6B4Gb
70br85klJLE4laiyewjiR54ddR1fQvc5pVJi1IYgxyKr93HvEuKP/n4M0oag
xYpN4U7lEhK+w1ny6+EwMN3sXbkUvYSUfvDtjGQcBZ97113ELywhlrv75IRZ
JmAsyDK27PQS2iFjJ7ElMgHK+eaki2pL6HSVgvE39QmgLpswOcgtobqsms3u
xxNw3VM7quDQEgryOWTuODAB6qFypSpUGgr7rRD36cMkxBZJj7TM01DR58eB
ygWTsNp3nM5yloYomqPpiY2TkHdQ7LzXCA3VpA6X/vgzCQJpfAM1dTTEn/NE
wsJoCjZLdqzqxtCQpeesl8bmFFwd2s43Hk5DUcYlHUPs0/Dl3xY4BtMQz+bl
aRCdBgeN9ZehL2jo0PUli7v60zDaRNnf/4CG7tiv5yrHTUP5aP9Jay0aCoqx
17SQmgEeul5zXI2GHCVZiz1gBpyEujx9lGjoqGZ4gK3BDEjeaqlPlaIhTSsB
MZ+HMxC7SLr8g4eGmOq4uxbyZuA5febTR7+pSIanyPSuMBkcoi13Ws9Rkf4h
34NkaTLcOMERrjtNRU8f9S2LqZJB29ytQGyQihwdrkWympCBp1Dv91gNFY0v
1ZL0fciw5wK9WwuiIhXPfGOet2TYGithLiujottWx4IzI8mAMR8WC8+jIvLm
/MKxLDIU3aDduBhLRc8nSu2Su8iQsfoRV4ykIu07/KdKh8kQE3TNSySUil6G
CXdHzpDBp6w2blsAFX1Zt3ctWiaDIXvUQMljKtJ0sHpmy4WBVobOrTQHKjL6
ayDUzIeBotq2ldA7VCRozyv89wgGgvb2HA5WVJS/ZZJaJoMBpfKUnvBFKtrJ
70r/TRuDqcv4yL6zVMS+Yjn4xACD3t9pd7fUqch0lyjnpgkG5bxsr4YUqGhr
7bLFA2sM8nKr9zfIUJGylnjVFVsMUs+4pBdLUtGlpkTFvfYYBD6crA4WoqKT
4ow8U48w8GCMMPI4REUSLDbTG08weBSnPXmXh4oU5WVfYM8wsJPbenCFg4p2
OCvKxnpgcLWxcPMsKxWpvYsWFPDBQM/q9lv5XVTEG9718sELDDSW+fiEGAj7
S4WJbwMwEDvsr7SxhqODYoc75YIw4CtRbvi5hCNn+jzr8mAM2HQXTAcWcLQx
MxLCEYbB9ukUcu1PHA3yFKQohWOw4mLmVEjG0dq/m31SkRj8ZGWhT5rAkelt
/bu0KAxGUytDgoZxlMj+I/XlBww6lJ8IuvXhKH1bZd2vGAxqOiRy73TiKHzl
CZdgHAalduOql1twJDZV1Cccj8Hnf2EtWvWEf9fEDNcJjg89by5bhSNBAbeW
xAQMQsU2fgh8xxFHoGEITyIG/hX5LiylOLI+rvzjOsHPjO0Y/xbgKE8vn9+d
YIefByLmsnFk94rL3Z7g617twn0ZOOK1TTaQINh0MEFtNAVHAtsT3RAxv7as
o9lMPI62X7nzVJxgCFR/9CsaR6o9+wNvE/7Iz+x9Q32Po5IB1+3uhP/iqpNp
a+9wlH2ERfxWLAb8EfmILhBHNrJr2qLEejkWvAcZ/XGUkb+r+Hs0BkznjWis
3jjas5pRJEHEayNRiIXbDUdFAUORDhEYUNeoIoee4sgi6b/sV+8xwIyq1YUf
4Uiyc/y0WygGw5/Drh67j6P4mJefzxL56mC46SR7m/j9qJX8j7dEfC3kg5Rs
cIT/4j5xMxCDHLbeynNXcDQeoIFmCD2k3E4b1jPG0TN5y9WfhF6iKp2XTfRx
tPkq9WeTJwbej7nFb57B0ZKOy1leVwyetGCad9VxFDrbYxrgjIH90ZJrj1Rw
ZJ+1cL/rIQbG/ZeDvWRw1GL9YdvaHQwuSItlvpTEUbWyt2gfoXe1V6vVQaKE
fUpT+rvrhP5Uov/EHsKRlvjmzmgzDP7GD1l+3YUjfY7WXNYzGCz+yXQhMeCo
9Nwo3QBgMGPwPLR+axEp6/Cbeylj0Ladr653eRExjja8eHACg2Q7i+PUyUVE
2UaT6dyPwXmpib8SZYtoLdr61+8pMqi+zOOSLV5Eo5YyXh1Ev5Cd8DqhlLeI
Ap+avY7sIcPB0MM259KJ8f4hl3tqyUBZvtFkE7qIGG4Eq7B/JEP4d3JUrP0i
+rvuUPbjJhksXT54nLRdRL3XrtS5m5NBTE7/ZpfVIsqybf78x5AMZRmlJ5hM
FpGsF/+neDUyjIUF1j0Gwt+gyNEabjKI2sssaXMuIvtUS96Wqhl4dHw9nvp8
AYmNDjxz2TMDZeNie7KEKIh0Q7G6xnUKjuxV1zSO/4Xm21RHVbrHIEh68pl9
2C/0emVbzo2vY7Bq4FPoFfALKcguW4UnjEFLSI1w9qNfSF/XT1Pg3hg4cVxg
3HnuF/rsva++accY1HEbtZQs/EQC9LWln1VGwf7QTdODGj+RqYP9vvKCYSiQ
CLCfmp5DUg1rdR97BkCg0/rrscE5lD+5WK+HBuDNUyUm57Y59PimiyxT5gDY
1vxMY/w6h64cf3yjwHMAeCx1JyWD5tDvX4M/Zo4NgHsIu9lTxTn0WsFNoP5l
P5xfjT2z5+0sSmNKYwrR7YPieOf3Jj6z6Buie/dGuQ+EzuhNxz+dRTee6Xz7
INoHf0O2vGRuzCLfe+qrlG19kHPsRrnpyVmEyVyMfFLSC5xWonJJkxhKbzgE
m0d7Ybw2X1BBAUMnFL4XVe3tAbdLa1qKkhgyKHdUE9vWAzyT6neUhTC01XXq
fBzeDQb/2vPVWDFEPyH/vbirG0iyFM1zGBmNmCfqJYR3Q2KChK1ZBBn5nQ3v
0OXvhhuuKZ+ercygVYMAjiHlLtjc+avVbX4GNSvuphM43gUf3stSPaZm0N/3
YrqPBLqgK7dS2bdtBunsYJw8zdAFp7Hx5sD0GZQbk90d0tYJwpf4KLGmM8i0
6DrWbtsJZMlwWfRlGqXrbIoGxneAhEcaZe7zNOorsHP2C+kAh/biTPakaXT9
5hb/W78OWH3YJ2QXOI2GcnX0W+w7gLlkPweL9TRysgpOoFPsAGmND7Sru6YR
zdwv/U5mOzw3SShaMZ9CZGPF+z3ybUBKz3UUNJxCWz9i1G/ztwHDKpLUPjuF
JK+fM9nP1AZBHyZS46SnUBmVubduuBUSxw+Ha+2YQtEXymRv+7VC3Z1U59Cc
SaSb1Z8fO9QC+zw+KUhtI3hNamnfh2bw/yLWsPfPBNKVbaEKBjTDOuXjFdr8
BCr5kt+q9aQZpqzS3UoHJtA7gYDaJqNmKNBIqdLMm0CogurWuqcZjHbE6V22
mkDJhvKKsX5NIMp7uJXu+TiyZQp53u3TCHtfCyzW2o0jHy9ZxsuPG2F1/RBH
oNE4ct1xbGXephEaRg5c4ZIYR/fWzxfqn2mE24mcZPHBMcSgwZxMYWqETFGm
DaOTY+hl+7vzPmENIKmwIJlGG0EBjT50fsX1YCfl6fl1dAQlv7RI5/xYDwki
bF2t9SPIPsjmQmlUPbDvP/F0JWYECU8Myyq61cOfPw6V57RGkJaVvA6PVj1U
faWY/Hw/jGbf5GSf668DM1WKxwmFIbTn0sG6AeY6CP3Po/O04BD6fm6dP3mz
FpqPswqbMQ+hY5qq292otaDGL9XoNTaIekTbBa4P1cKRrfscXf6DaL3xajUl
sxYopN8fnfoHUIp+7RUm/Vrw1frd8dWlH50dSh6vSK6BqvPz+vI2/Whfbfbu
jKgaoNP91Zaj24/+dFwWTQiqATeTHy0pQv3I/dQv2pdnNfDEjtzwtqUPrZUf
uBR4qQZuB4ySrgv2oZse/dQyxhrQaWnN29XQg9i+C//rd62G1x0tJ/wKetC3
CJO0mw+roaGnOWcztgcVHVWI2LhdDWdGG7NoD3vQeAzOb2xWDWqU2ozRgz2o
+1q+Z+jJapDeW5GY/6AbxXTUX9JerQIu45zgK/u7kM2E+wsznyooEAksO0Pf
heIL+tg7nleBwdqtGZmFTkSxW+Q3dK6C1/GHFZnrO5Gf74WwB7erYHPu/XjZ
k07UXfqI9ZB+FWDuz6X4+jrQOW+FF3L8VeCgHxL1XbwdSSmahR+oroSMJe35
8G3tyOeerF7h90qYimZQdxhsQ74qjjHGpZVgOvN0lv9VG7oiWz+Ql10J4Gqp
4DXXivKOHhRvj6qEvSnHejQ/tqCxQxnhcY6VULBSy9Yg3ITCZr86XxaphKDM
5Cq1tUak59pXHXW4Eu5aejoXtzYiLrXP56b5KkG4TnE4+UkjEqZL7g3jqISI
8M/p7g0NqFsGGd7YVgnP5ENU5e7VoylNklTuGAlM5+4vflKvR2WdCW1eQySQ
i9VOEeSqR0xnJtXM+0gwT8+wi7WiDrnf3+4q0UYCy+4nPXNsdShmeiRfpoIE
mo+u3Y0vrEEuN4cNxhJIwC+ixM8VUIOmLbz1lWNJ8HeQqzPwWg0KuCZXFx9F
giKNdgXXHTXIZp8Fo3cICUT2aW43vlyNbjBN62T6koA5TzR6199K9ObLy+zA
OyTAbBh0vNor0fja4el7diSo3j+5uZJSid65dWiZ2pDAzfPDzRmdStQnxfZc
w4IEFD0WaRRPQqr2oqdcDUmQNkx++8OvAgnER3vaq5BgyI07IU6uAvHxp5Wu
KpKAlf9cnuHUd3RTuXDwrQIJnlhndH2F7yh3YXdDiwwJzpLt979e/4acuOl2
xImRYI6ykCjh+BUlMd6N8NtPAr5gwYIx/q9IhcV5y5OLBAYyhtWhraXIYlHq
qA8HCUofF5DXJUrR6G6GuA9sJHi16iTRTP6CNP3V/x1kIoHE9vXCu+ZFiH90
jen7EgLLFIlaAeYiJPTutt4rHEGolnlfd2khsjuuWn+DgmDdv3xVhbsQkW/3
nladQ9C821N1T2c++rPr6bbgEQR02bl6JM98dLLE7FntIAJ5vQkrJ6l8dH9X
xS6mfgSxwRo+I4F5yDuj27KoE8GABFPQlbc5yPPxj4BP9QjU79/Jq/yZjZhy
Fa6dq0WQkdvUJX4+G1WrihynViFwlX+7f317Flr/8KncoQLBATX2pA8unxBr
0fRZ+i8IfLweV2/vy0AOw0++MRUh+FXVQ7aXy0B+Typ5DhYgKD8XKaFCSUf3
amT97HIQWBjyFQ3bpKK/y78mIj8imKctKznXpKBDY/sl9qQjcItoR6xHU5Df
/WPNb1IJ/4d9mjWwJJSmwM9amIRA0uOa4fDZJLSv7nOWWSKCb4IK/U4fE1Fw
snsscwKCouauWv3OeNSx88edsFgEPXv9O31C45BxV4qWfQwCmonSaPGlWBR8
n2yv+wER57mEpYN90Sjjwuh7xSgEhkcv0elHRiHdh6IR6pEIHO137vExi0T0
soJjxhEIcpfuHZkbeo/4kqdUk98jaFMSPHEwNgxNxBRcGg5DQPHoVtazCEXP
SapZggSz1Pif9eYPQbqzmWcfhSIwY3dKvY3eocRjJ4Q6QhBExg59a9N4iwLn
WdSUCe4T0eiWr3mNepqiovOCEXDmf/z54WwAqsg4IS9H8CUV1u3bGl+gho/q
LFXvCL3UOvHeuuiL1sTOC1sQ3KE/LN3a6oWUmjtcGAjmL/INtiOuJrP2j5lL
gxDENBgg2bSnaM/h/oGnBPOMHqJsfnqEeE/nT58m+Nh0r1KExV00fL1Wgo9g
kT2OkVK3rqOqC+RsOoK9esR6DlbrIto2/B7+lsgH26j9juPykNLSd4tCcB/u
k7B31Qz8RMLi/xC8qC9KffDIDsTqpfexEOOfh51tuivvCJ8TG5AUwZserjEJ
J5zBfMI789r/5rfPutct8QxUKCGdEQTTm46rMop4wnmHU/+NElwt+Opl3F4f
YFDv7j1BrM8vQsjxZJAffPL8UhhE8Nk95Wadu1+Ckr9x+xrBjD4mGndfvQLK
T3Hxh0T8Gv5QxHcwvgEu38rKJYJf3w9gT/ALgmGbomg/Iv7peLA7n3cwPJ/6
lC9I5OvWLQm7L5uhEH7ZO9WdyOd5oadXfVXfA/eZNS81Iv9io9V6Bm7h8JeU
kLg7HMFPI4uTP9cigdtII7uJ0EsTS+axEsVo4H2vFVtO6Olzw4qA39MP8LfS
v6uM0Ns9tWAm/uVY4PV25h0h9Ki7NvLvp1w8hGfGSm4RepUqEsdLHiUA59Kf
QKk4BKvvJ+fFVhOBvmhUvoDQ+1fm571VzinQrvD2im4agsTjXN25QqnA0TgX
tUTUk79Bbkdseyq0V9lbZ2YgMI6Ybn4ing7rrKYhGllEfg7rVEmMZsDsgcuV
/ET99mthaP/rTyB+bfalMlHfFbe8vjOczISh+aBfN0sRBGYXlY4Ff4YyCm8E
uZzQh9Kh3FCtHFD20uyIqEOw51pJlieeAysxR/pFG4l68zDMvBefCzkMXOH1
zQisp6qMjrjlAVJK15Ij+pGU2B/djd582HxoO/KN6GeNhVZa+a+KwHgx0it8
BcGpWslq0Yki4Ep+0cuxjiCvb00jXqEYHtJVCSdtIIhYC4PA6WJg/zRzw2k7
CW5Cg7KtagkEcO824GYmwVaTtAwv/hW87loW1x4gwaORjdx358qA/fVrygYf
sd/8bpLaGV8G4+GzHaoCJGjZaytJ0/4GjEuZcT1HSPDBNFq0NbUcFvcs5lke
J8F/U9v4vc0IXf4Zy5nVIIFU2WVc+hOhu5hzAfe1iP0tNLtmYg2BzGlu1fWz
JNidlPVfoi4JrL+onBHTIcE/A7ORLQoJTq2OiPabkmA0L1ccyVSBCvzH6Xuf
2K9ir3Lsv1oFtSokURdHEvQF7NhwIM4xgX9/XnR6TII2a/MO/u4qUCPH9Xi7
kqBiL+NTD6dqkMoY0qO+IEGCo2WNaglx7hpZVJNMJEHstV054eM1kKWUdvh9
CgmizhdF/masBeen/4zoP5IgWJD5bpxZLeRxGRb8ySaBV0fxvo21WrDoqh1S
LCfBdWkWq/JT9XBbfitTkDgvHFn8tqZc1QhSU3Z/0w9Wglvrab+l341Qtah0
xkqwEvoym1lzeJugLNi5X/BoJby2HT5y+GETmCUmLiKpSlgcWtdlFGwGMTep
rw6alVBRq5Tc7d4C3IF/59/frYSrMSXa95TagSnVQlSpthKKXKD3qG075Fe8
HxFrrgRW03qr8eB2QCEfO4U6K6Fyb7+T0Vw7PB2B+P9GK4Hz9HP92IsdQOfX
UNq/XAnPSz+4+qx3gGPK9DSXeBVcSBls1TPrgpvzdZTyyCpYfJFjV3u/C9gs
Tr6eia+CqNu+Wyq+XRC/JCuzP70K5o4flxHP6YLinelNcUVVEFDq9Z6eoRuu
qLDoynRVQUOrqHlpbjfEf1rvesZWDedWnecOM/bC5qq3Czm0GihD2t5RfL2w
XRZ74xtTDRHfBQ6wyfZCo/cuTqnUasB8Gi/+u9YL/ct7szKKq8Gf5VBuX0Ev
vEkmXf9vsBrqhGqcAy37QOeCM1epUA2c0WWnXy7uB8139awkVANB13fha439
kDEp8My4sQYGnOnGN0eJe/LAkvRyVw3Yx1PKmHYOwDf/XfnmGGG/0PSIz3QA
ZC/80K1gqYWBEN+p0ysDoNLqWztjWQv2fUuVoQpDcOFTsPLe3XVQ+PNXbqT2
EHztnnY+y10H/zan4mIth+D3yxMfXh+ugyDRTtd0/yFo4QzpPaVI2Ltky5T1
DcEbOYVkbTvC/oBd0uSTYYjrH+Pnqa2Dd1b9XtIlI/D5pNS9qbf14D9/CrCW
EcgWjRBnia0HD9fkjZipEbggZvhUO7MeHMLuP2NkHYVtMYVcG3X1oFdP7zR2
cxQeKMwnam1rANYT0rfesI9BzXDLpQeuDRC0GaA7d38clvP4dzS7NIJ/IGV3
vO848Di5Kjx81QgePMZNl6LH4YYvQ5Hkh0ZwkBU4h2rGIbHgKD79rRFEC68K
NrNMQONc005TuiZgnF3kTb45AYf3v/W2eNsE9XqHWAzYJ0FaDImklTYDp9Qk
9yO+Sbj77uLu/qZmsGZJE3wvMgkm5x9L8o8S99VmSfkB5UmQNVlzmd/WApIX
Tplb20yC4e6YN4E6LRB82vyTYxExPuDgZYzcAlcVo8+EmE5Bcc/XknTxNkjf
b6FfaD0FyoH0G5/U2oC2Inil136K2Nd+K9ZeaoM3xRn3eD2nYCL0EeW0Rxsg
2dKwpI9TQLv3oO5mTxsIH++fzF+dgvFdxZRzL9rh92Euj64P0xA9auvH694B
is+THlamTkPSxuptWkAH+PQct83LmQbXq5nHh953APfLszpBVdPweJjLpy2r
A9Tmnx7Q/jkNc6zgfWm0A959GfpSqTQDv7fkBAbUO0HmYuJC3sAMrBi27eRi
7wK3VMnphKkZqFNTupgg0AV1G6V9QfMz4F6R8+3k8S64mtf5/R4dGRhHD5wP
O98FPlz0b8TEyKD3YktgxbMLusdtxRKfkuFCb63YY7wLnJ2OXX/HjcGI+vr5
1+PdwM28UG56GAOf+eNjKovdUJpQwMMvicGz1y8eb9H1wL8mpY4sDQyYZGRq
y4V6wOfweWi6h0Hsa13mfbd6IKjt5qEd1RhQTZTqRWk9kC4WP/jswSy0hkTs
1uTtg/6RvUZ2DXMg/HdzjCl+ALQDbQecuuZg01fsxJ/8AShXKrP0HZkDBv/R
8uXaAUiMsLmbuDgHXJ0lT45QBuC2wRe/IZ4fsJ35ZrQ6DMJ6tXmJ3p0fkMdx
iPPZzCDwfU7nO8n8E9oPLTFEKw+DteupWUadXxCidF/Efd8YVB87+bp6BwXe
CMXO5BO6sDxhnIKzUeDZPu77bDZTsCr7sFzgAAWi6Hn233kwBZLKnynPpShQ
Iu60yhYwBe/PC1ySv0yBe12ffx/9OgV2tox8aRkUkDR/la5+YBqYEvqz/S8u
wO+JBTbfvmlITl6qKzJZgFcNUgn45DScSt83MWW1AIFv7N2Mf0+DY/ZFdnBa
gApLQboV+hkY/Iae/IldAMOYdLFE6RnIHPgItykLcDqljFf/5QyI7CqfSz2/
CKNnvtr/FiUDtV7KPll3EeLLGTkPy5Chwj/pV4LRIjiuB5NBmQymDC8pH64t
AndXdImqDhlebBkuBTsuggbDBp3MAzLMLM9uuUUtQnlWoktWHhnyiq56P4tb
hAh5Uau7pWRwe9y63SV5EcY/rwrvJZGBEy/Y8ThrERLkJmm72slwet599x3S
IpgEOBws/kWG5CmO/SZzixA7cHZvnAAGDkn+UUa/F+GNeQ5jyFEMlK3XeA2o
xHyXJ+xsj2HQNTrGd/HfIpgl2G1kK2CwbfCTkMZeHEgZfbSiixi0RPKlqnER
/NwoNNkAgyjTd0dPHcBh2UZt5L4JBtI9TmInhXF4EJLAHWuJgXU7SB1XxKGN
cixH9wEGkkEFuRKqODhxNJ8QeIzBqs5RGTFNHL7f/JfZ/ASDd03M8kd0cEDR
aspF7hhcfeVeLGiIg+YL5bQFLwxEzi8q8JvikJiaUcLghxH7a68SrzUOryNb
/cpeYfDa7/w3blsccnz9o6++wcD09LdTnPY4ZMiSdnUHYSC0Xapi3wMcSo7G
+h4JwYBCSgQ2JxysSKXFF8MwKPPkqNzjioNlooL+xXAM/NX8NZk9cAimr9g6
HImB0cZqNaMvDisKfk/bozA4VH73zI4AHJQ4DG9d+oABJ+/6usNbHIrcnKYa
YjDY8yQgbyCU4J4LpD1xGDB0c9tpRuFgW3Y8nj8eg38n0g5mxeGwffbWgU2C
l97IdXKl4GBSIteTmYDBrx+V/p4ZOPjVNNwVTsRg6qzBqR/ZOLS8svH53/81
QyljuFEhDvq8emVuBHfR3f9YXorD6Mjcl6sEN1r8vSZSgYOcTSEfA8Gkslfs
wdU4nFU0CXEh5i/dz9Ow1oCDVmP6txLi+XlO6e42bTgkGJWdriT8/dgpL9fa
Tdj3zXS9j8UgXqp6TmEQh8mD9RyyxPoiAg3jE8dwuFBqWhAVjUHQ3Pgl5hkc
WPhmzRuIeL0447DL6QcOtI+yiETE0y35X8UoBYd/dTZvvIl4O229djq3hIMG
C78zM5GPe9d4JfLXcGC7+lLSnMiXzdeP4we2cFD7Z3DrcSAR/8c12pRdVLAL
L9NYI/Kv3WFEZ8ZGBVppg5GdNwYaxyeLKzmpcGbgaFM0oR/p2Q3BcAEqHLtn
OWnkjIGY1pu+TWEqgMtDugFHDASSDry5LUGF0WljPyGib7Kan/yj8h8V0JJG
684bGOwsrc1KU6ZCzbcHgonXMNjgNL7Bpk4FI4GGpQ1TDObbHFuntKlgpshx
aSdRHzPHtnx0DKigz6TwPE8Lg+GAt4pfTKjw35lla341DJo0M1NeWVNhjZvu
q5Y0BlUJildotlRQUksa+ieGwdd/dawWd6lweU8MjwvR9zO+TLtKP6GChAXn
9ZJ9GLyUOGTQH0iF5d7EXyYLZPB4+XmHRggVXCw7Ph7ByPBkRulbZgQVLvod
yS4cIYNdvKmIRxIVfBaumR1oJIMWe/A/4RIqRAXiR7clkOHUA/6CoHIqOP8N
YZ0II4NcS9at1UoqHCjJZvUOIIOQf2NXcwsVDM5HP9j1kAx069s/PZqigjrV
i+k/IIP19CDNc5YKY84trTvlyEBqyVN7O0+FkOA97CkiZPBKsOz5uEKFPQFk
ZxUWMmxplW2NMNPA4BD5O6V/BjbfPTQ9J0cDDvo6K0+bGbB0PZ9krEgDnwyW
QSbjGai4ITB/XZUGNg9mLllpzYDHf63ebudoUA8G6k7CM7AxJJadb06DsIOd
3GempuHf0Ql6Pj8a7Kk2D642noZrbCV64q9o8MpryUZNcxrKV99GKwTRwJN+
gz3wxDS4NaucMIyigeVsY2DMrmn46xh51T+LBpeh9EjqtylY/6aXv9hDg5K5
d5LF+6fgj+F3y9qjSyD0mVffsHACfAZzR9WOLcEtZt6B1egJYL2efK1UegnK
+AceuHtNgIjjy6ufVZaAU6Nl52HdCTAOMjQNMVyCBgmPps7GcchrIutauC+B
dBjbZSf+MbhzmlV1uWcJ/lwoKtbLHIKlJrpyh6ElyHAw5NR8NAReRjTlufEl
sB78RRVTHoKo6wOKwz+XQOHtNdJA4yDUeSbLV9ItQ/JO+efLcwMgVK4g+VZy
GR6w//tUL9oPw/JWB4/6LQPmIuIfWtQNdmv/sb14tQzL3R+sfTy7YfH7Hnpy
0DIEP5g9E6fdDQznyn6mRi+D34DdkauTXSB1hatMOHcZ3rbva+LZ1wVe7s1m
wkPL4KMRnjv2rAOYNZN1/MaX4fpjzWTRCx0QvtNVfWZmGVKSPCXy93dA5jsR
sdSFZQjbtFfnutsO3Unef47sWIEl0nza/FwriNSdjDgivQI8+UlvJemaIe81
62vf/1bAi33Csy2tCZT1ye7Tyivgcfjy8X06TaA/EGqbcmYFrv/aNe5BnHdd
fv6WP2K+AgmlOOkINEAza2q3kP8KMDYzGH7KqIX/934Q/P/3g/4PucgCaA==

          "]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$5353#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]], 
         LineBox[CompressedData["
1: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
Z8an
          "]], 
         LineBox[CompressedData["
1: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
5HS9872uaGhAfI0gCAwtNcqejIvG/wG3bEuE
          "]]}, Annotation[#, "Charting`Private`Tag$5353#3"]& ], {}}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(s\\)]\\)(x)\"", TraditionalForm]},
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.999999918367347, 1.999999918367347}, {0, 2}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\[Sigma]=0.2\"", "\"\[Sigma]=0.5\"", "\"\[Sigma]=1\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.841227032434187*^9, 3.841306994682527*^9, 3.841307913357794*^9, 
   3.841308469352275*^9, 3.8413085630073576`*^9, 3.841309512699292*^9, 
   3.8413096766869817`*^9, 3.8413097494106264`*^9, 3.841311412111553*^9, 
   3.8413115126595063`*^9, 3.8413116649595203`*^9, 3.841376851521693*^9, 
   3.841377321600373*^9, 3.844862280044877*^9, 3.8448623352736588`*^9, 
   3.844878376074518*^9, 3.8448784149529953`*^9, 3.8448785679859653`*^9, 
   3.844878612486533*^9, 3.844878645765011*^9, {3.844878710307822*^9, 
   3.844878723287755*^9}, 3.844879308646887*^9},
 CellLabel->
  "Out[247]=",ExpressionUUID->"87a64955-48d3-407c-82eb-a114c8736f71"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAAUKdbwDdj+L8AAAAAAAA0QPiSe4i/
P/i/Y5Qfi+MkM0DnHMHqRjr4v53iAod2BDNA1qYGTc40+L/8p7v/IeQyQLO6
kRHdKfi/w9q17MKjMkBu4qea+hP4v0zNfkQwJDJA4zHUrDXo979XNZc+1Ckx
QM7QLNGrkPe/mn+bfhGSLkC8WnIzM4v3v0JS7+zJVy5Aq+S3lbqF979zNXBB
uh0uQIj4QlrJeve/gHqtR0OqLUBDIFnj5mT3v0y3N0j7xSxAuG+F9SE597+K
EWh/JAgrQKMO3hmY4fa/eawQqT24J0CSWz8HOdz2v1nhW2okhidAgqig9NnW
9r/v1WW/RFQnQGJCY88bzPa/niaHZzLxJkAiduiEn7b2v+RB2FvDLSZAjgep
3tel9r9Bs/fNppclQBNlnks=
          "]], 
         LineBox[CompressedData["
1:eJw1mnk0lV/Uxw2VShnujSiphFBISak4R6FCQpIfEiqVUBlLQoYyJ5kqkShC
UcmUbPOUeR7ujYoy3vvce83je9+13vef56zPWnud55y993effdY6O21uGV3l
4uDg2MH+/O+44fZ52pWX0/BNzvSe7lEp/DqTp+rrwWk4p+byOHBoJ46Yu/7F
ZN80aF53ouUU7sQ+2nWvZ+Sm4ayux8etETux1UDofdUd07DpyIJU3NGdePsm
ktL39dPgzndEWy96B064LxZf0T8FjMjnjQdSxXG8jpJTW9AUiD5CWb+mRbEk
r05ds/8U+ObRdzjkiOKMHzYSjd5TkKuxSczcSRQX6kW11rhOgbL1qy2WdBHc
oz+zv9h6CuRq6rgWJzZj4XPfWWmqU1DPu87DeUkIPzE/7eo1Mgk69z5mbLxC
wsJiNg33BydBwPiGf7Q8CSdQPKTu9U/C4bsCy/dmBPHHi5kdzh2TsMaDh34h
VBDXX+JXuVE6CRKLQtesCwXw2isd0+eeT0KukaL4uD4f9rW3vit7ehJm7nOZ
tD1ei3+GW8YXnpiEuCZyTKvsWnzkk3mJrvokcPlkl8bV82Dm1Pm1jgcmIXvv
Cq/7Jh5s7a0T93nbJCxuIZ5e+7Aa48gD+UeZLGAEM9e6c3Pj+Jx9lPpxFoxP
3yQ9+cSFZzvlOSz/sSBmnnrHxooLZ2+VOeVDYcH0biOVwyWcePtbse6KKhbI
tgi0BAdy4OW81bNnXrKAbIfktdwWkVkvl1h/NAv0XjxvlBtZQLmLK+h2BAu0
nHp+OF5cQI4a848jA1iQXbUvg1dnHlHraJu7brFgVt0+xuHALCqidh2y0mSB
DvHshqvWJBLh6DBnqLPg8Ie/Zx41sJCLRKu3ryoLSnQpiRQTFtp7rb46RYEF
IVM7Tp5zYKJ4ouTCiAh7fSnxucfeE+g+d7q70wQTXpX362vkjSLH55ZrrIaZ
EORuRetdGEE2iuToM3+Y4CC5Rd3n+AjSMff8LNPDhOzgiJI/Hf+QyBf9iZ8V
TCB4m2SrNw2hHBuWjW48E7wS1vNF/OpHabOpjMOxTAiI3fq5+/1P9DLcwkc6
kgmpeZ+r/rlSkW9h5SvOQCYER3GqaIn2IUNSXHeeMxMm75xHd0I7Ea30mL6k
LhP2Zwdl3sD16PcFBkVQmwmOf59tEdeqQx0Tb2+uYCaEnIpvLjGoQUWi/EG9
KkzgFMrhSfesQCF3fpVHSDBhLUfKt2ndQuTFE2PktY0JdKV5vV1lucjplc6v
myJMiLnRqfFU6wsyq/2yrM3HBNfyQIHaf2lIZucj1aU5BvjVBy23u9qAWN6R
mtFJBlilmmc6Z4YB/xm6STedAanCBeeE9ryE6bumLl+GGOAscF6XJ/E9VDTL
Zd1oYcDj1vN2ZzXzwdqnSbIzjQGeRzO9sl2rwKQnUZ2azID9wUnhtYnVoLP/
tulgAgN6E1KUzStqQHlQIJQZxQCY0zi2fqkO1p4yYvE9ZEBLaHeyn3wTLL2W
2CjsyYCTWw4sSQs3A3OOKb3NnQGt6ytFRiOboS/jmdkeBwZwH2LmvPBvgY/8
HaUn/2OA7/djrSKn2yD5+ts+fWMGWFK6/w18aYO4Utep82cZkBYgXbxbrB0e
OgvLXtFiQKnhcpvGUDsYd12I8FFiwEhMPGuzWSec3ieT/ngvA7bv/emq/akT
1INmy8N3M2A2cHcmeU0XyBx9PhO/jQGRsRfHnqd1wUJCr2XBOgaUr0obKWvp
BmIm/W7JKgaQ9xiZGQv3wKDB/cjqFQJizueGJ5v2QCOXWFXHFAErJtUBwZ09
UG4+3k8hCJho+jUgS+qF/JyiuT9jBFSFhO2L0e2FN7YX5Zm/CJgPlMwdzOuF
WJA/OUch4AN517XG0V4IFVm24ugmYGFTJ1fU1j5wrUuI4mskgOvyYHWpWx/Y
7br1UaiWgL3jZfpKSX1g6YlqxCoIcE/+735IbR+cUhhYkCskIMKOcoFvEwXU
HmcL7f9KQMimiJPqKhTYP+CjqJpNwABfkMU1EwpIqxqexhkE0PIuyIe5UGBr
5M7LJ98RkNfdpPclggICYwxP/SQCvtbx6FDTKbBKsyzmfDwBD6svZPOVU2Au
PjLbIpYAh/3/8ej2UIA2ZVN3OZIAKe6/rdETFPijf2DQLoyAjadEnjFXKNCd
yr18J5AAldTTFVcEqNDA0b75nh8Bq+dJ/XRxKpT9l6Lk40VA94KuaeweKuR9
dtF9fI+AsrW8SZYqVMjk1boa7kJAya8U6dOICq+vCHlH3yKgKzbTyEybCtHf
h+Li7QhIucYKjtalguXdF16HrhIg9FxhZv9ZKsgcOHul9RIBacJWDlkGVGBM
cOs4mBGQ7RZ6kJ/NhWn5imvPE9BB9Ys0OUMFv8sOQslnCdiv/7s06BQV9MQl
FtR0CKDuFFjM1KCCUE/nQLcme/9xx10qDlPh57OQKmfEjp+Tp2m7PBVS9XEm
3xECjD6EtwzsoMLtdVNP3ysT8OS0KDdNkAqqFe/dNRUJeHcilJeDkwpc3pYX
+2UJiPOQWbWVRoEfquQTHpLs+Ws4OE+w/Rs1WS0jtJ2ANXsXBDzLKLDbTmlS
ZxMBahpCoUpPKEBI/u0Z4iPAmmfvwlcnChT0vwCfdQRU/z0fYG5Mgdj0tcIO
S3SIVpAqFCVRQG6H0683TDpIx0eiI7Q+KIruy+z+R4eUhHfRITV9MODz8YRm
Kx1mrYl9ze594DS9md+jmg6Jp6d3/9Drg1X2D3uziujwTeTkuTU7+kD2gvGd
ral0aCdZOumV9oKT/HwC8z4dJiJs/vnQe2BV8mU7mTt0qH/nXPA3twdiRBoO
WtrSgXfe4lm6Zw98435dX2tAB8K5cdiMm23fqzX/WooOccfEasuWuiDmbFZl
5xY6dA3wZT7IZ+u3UuTpBgE6DDU9lP1ypwvOZI/tvjtPg2O2cv0v+zsh5tHT
82ebaOCg3fy04n0HyCzO7wiooMH49TfVOaYdUHjnynhhAQ2OLl2hH1nTAf0W
h/ykU2hQitWuCF9sZ+cLNXvpLg3c1pC4bedbobBfZkOmBA1yBmDKabwJPI9x
fnghQoMOaVNrCrveqT3vORPER4PVfYszux0aocQo+Int/AQYqt6wvjdUD9WV
Y6SdrRPgmcFbHPa9FtozPorGPJwA0W1L4+n85UBzV97tMzAOxq1GllK3kiC7
fUONY+c4mMbvjj+46SXcURq6frF+HOy2Xz9QqPYMJkej04/kj8NgTa7ja6ub
sHBxRn7qyTjwEBJ516ri0VrNQmU7NA5xBu3h5LY8tEsAHzdOGIP/+PZc/ePT
gML3/fKwezYGG5uVVoqKGtGsge8Xn8Ax+OJcq94314Tqn1ZIfnAaY9epdtXR
oy3IhXyaZ83JMfCcLjTbWdqGqoSN6vPooxA3euhE3t9uZLftislWjVEIqk4+
crHmF/osF2j3+88wrF1bYmKxPI76Kz/tUFH5C0mp/TrGU3NoaG/0fsj9A3bT
85uqj3BhQa/3Kgqcv+Blc3jd4EMevFeFvvctiwK9OY2mPP282FbB27uASoHv
oeNL0QQvTpTmb22opsBpYfNoEa4NmLRZ0X36JQVaV7wfzUluwDMzjqUnNdl1
jaY/KGu3AZcV0M6PRvWBqsq3M5i5AZuq0bwUVXqhYej8Pcm5jdhPc6K54G4X
8GocVZwa4Mdlp8bPKl/ughojNTsxOj/mODPW+PFMF9wJOLrz0BI/9jw/Up8s
0QWZ8n89kzcIYDfboZqw+k7YePLl+usyAvh6ILXEekcnWNOXV5dbCmC9+obs
dTXtoEpWelRQJYCDm+sV/T+3w2Gzip9cDQK4pv3Hx+X4dui7oNip1SaAtai1
maw77RDYeDshv18Aq9Mq06hb24HjgYu34awA3idQ/PrTrTbg6/P5fVZGEAsZ
f4z4b3Mr+MpJJHv4CeLP0iGFWtytoHB2JSAuUBAbzF0bVKK3wNObw7XZYYI4
OGHn4fXVLXCPpuncHCuIl4ej+gvdWqBv+IRGfYYg/vvgvoJYZzP0d9S6f20V
xI5nn8Z9l22CVtbdZV0xEk6b1BmP5myCkC9fzn/dQcK/n6/Cjj2NsHt3Greo
FAmbDLr/Ew9qBHfHUpsmdj+N7lmq+Aw3QMWbVbtn1UlYIHlP+/HUetAbd45W
tSLhz9OV/DWSdbDib/XOI4GEw9PflKnP1cLy6j+zD96Q8E1Lb9evDbVQVfYg
3uMdCUtWHe5741YLM8qanZc+knBMdMa7BzU1wNV8nL/3Owl7KD9VO2BfDeum
LJzD+tjrGXYg3uNqeNn5tVyqn4QPxOsk7xCqBp6GDzZ5v0l4nHvVOr7iKhDl
mgupGiFhyza39mH+KkjziA2MmiHh404WNxO+VMAqB35BuiAZi0urigsFVoDw
fISamBAZL/QItYRYVIDpymzucREyztFoUrm3ugIOy0pG3BcnY2nB41zGF8ph
HUd8T7wcGa/P3v183UIpqAvcyX+lQcZv+4bCRvyLwWlRQjXOjox7PYUTXx0o
BtnohkvV9mTMJ34y2/D3d5iaK/5AOJKxm1VaawH6Dg8Om4GSMxlrD9ltDp7/
BlYa3/Id7pPxMI3+Wu52AWwLFVmpDyZjsYgdn3+KF0DLzwuxCaFkbKBkWB7Z
kA/asQEmduFknO/8eWheLh9ijONPE0/JOGjWRe7HUC4cJxlw5caRsRzX/Jeb
5jnQWcj7TeYtGVsmy1VuX58DZzwTSuLfkXGkpnlnW/4XaEumj69PI+P5R0Wz
R4W/wHv5yoKOdDL+weuttqHlE7hGrZeUyiZjjg9Z+iXen8BE9eIlu09krKw/
cMlF4ROkv7Uqff+ZjOMjNHwpIdnAjHCZE/5Kxt1ya8P/C/sI7wuyVDMKyBg7
3MguHf0AkyLX0ksLyTgtq65V9tQH2OpcpdH6jYzvKYdtnufKBK2Oe4O/vpPx
FnVS0ou774FTL3GusJSMfX2cy7k60+D1Zt/EN2VkPFbWPmR3IA2Conns/cvJ
uOhkrNxR2jtwaZq9q1JJxhcNxXL6LqcAx+EbNsY1ZDzOmlJ1rUiG7KtO6etq
ydgzpgn4pJLBtsHkXAGb4/t8f2j8TYKXDtnVPD/IeK+XhWGfdhJc0JR69o7N
33aodLmkvoZfES6A6tn58qO18mxLAtjMJR2xbiDjdoFHLb6Rr2C4wztohM2s
86rUr+fiYTbtkKp9IxnvH0ic3Nr5HGS6lb9ZNZGxodQ5jrOxccDJ5xHWyubb
dms2+JrGwquJuBL1ZjLOmrTfNdwbBaFul0+vaSHjRtUdilvjn8EuXv5EazbT
vNqO6F+MhEvbo87nsXljxSPth+JPwTeTac/TSsamJJeU6/AETD7IDRmyOTa+
91ujRhhEbDtWHMPmTmmNNuWKYGiak57tYPOmT6mjL7QDQRaNRfK3kfG5o3xc
nLUB0DsWGH6CzZGVLqLXdP3g3PLK6B02N5/t29fQ4AMvXQ3SXrBZPMcvwva1
J/QaeFR9Z/PLGgPY/9Ydip480Opjswh1G235vRP8VDKTYrF5z58O1ZiLN0Hh
kIDt6na23jbcjlW4Zg2hiYk8JDb7tMu0by0/AzN2a9eLsnkvP9Vutbwyevhc
x2ELmzsZvokCs6Zo8x5bJWE2E2d3M2852aLM7eYmG9h8/5l23U3l28jRXZay
yP7fste9l4mKrkhhf0vZPzb72GXat8l5IDUDo/UNbOY26VfjkfZGCS2ZnzPZ
XL4j6PErAV/Uljvw7RGb/WMkbh8K90c2HDQpczZrbygybeF9jIyz2glZNvP4
nte4GRSEYiqixFhsf9bM0GRX84QimeMK73PZHOwQSEr0D0cSckkxLmx+x4h4
IPYwApV4TwzuZfO1a3K2ucuRaNGPlBLKjucpCXczP7Uo5Ko2tkmZzTLUcn0D
z2hk5vHqbwc7P0aNLh4anYtFpOTwzLVsrtuYvifv8HMU9bbh9XN2PmXUTG/3
d3+BJP77OyXJZnv1iLXiU/HoksjbMjl2Pp6ZoyyOHkhADD3dI2/Z+aqQI8vI
c0pE8/4/SFvYPBv1a1xm9jWKdzb7y2Tnf8H6+x1lrsmIXz93szVbL6/lhdqy
JFJQlba9QiJbX48Msprjm1JQdZBtamc1GRvH/PnhJvsOiZ2SLVGqYsdnp16Z
HDUNvRFjhcax9dul+Rc2B79Ha9I7vyax9V18zef7qkPpyESFSyOlhIxDPuTk
/4zIQKe5lL2ii9n5obotK1LzI+J9KhIlw64fGyzyMr0ZH9HksGHTYj5bb16G
6fYJWajtaK99XR4ZW/0uM9rlmY0OvaQ0GrLrkYLMzJmljk8o6VyjgiC7ntV+
uaT5KSgH5T8evGSUQsbHKveW7x7IQd1bGkqK3pBxduecRoLKV/R1TMJ/RxIZ
x8w9QyF/vqIc+s797a/I+AqqOXJVLQ9pmFTvGY8h45W6fUqijAL09daa5z8f
k7ETZSnryclC5PrRRaI/gIz/TtQprEkoRKNckXw9fmRcL3B1L0vnG9ojw+Ar
8CbjFybPdzekFKHDM0S2rDsZH/zNKf7QFFCsrbZPwxX2+gsvMPa9B7S/5/T7
MBu2PyI/VAzMAXrrLCRwyoqMeZMyD74+U4IaZaVjM8zJeNHAlLJCK0FySrtC
5Y3ImJqdJQtKZUh2RmzLNnX2eRVvRt5sVobyTwlIPjzK1lPg6iVH3zL0ZuyW
ff9hdr2xMm8WbytDT/6k5gcfYMdHgMfdy6Uc2cvcxfEyZJx427JCLa8CRfwq
2JLBPl/jLdZ9jO6vQGvnNEhf+Mg47lRO7ARPJSrW3Xf6Ky8ZR+xYf/OVaSXq
PRPqmraarb/mr4JLc5XoVoNz3ek5Erbet/FS0bFq9Glox9277PN+F/Ft7khZ
LTKlucU+SiVhz4YT/pMTtUgr9YzO42QS7kz/wfdRtA5Fgil6mEjCwVf7du28
U4cUFusIq1gSJnrnz/Ds+IG8Jp+4NT0i4eJK1TdtD+rRMffgYzeukLDZyzwd
e9Um1HbT9erTLSSccxd1SF1tQmF5C02FQiTMZ1J9qT+iCY1EdPtTBUi4VKDL
xWi4CTnzMhv5eEh404n7Z+N1m1GwnRdtB0sQ389/cc93vhk5nV+VxV0niE8n
9zTom7ai3MlfilVOgpgI+Ghb6dCKdLlSsLKDII677rdy1K8Vdazx/vfymiAe
lpdXkv3YihY+vJu7YCGIA/N9orhXtaGNTerIT0sQ1zTsNs/PakOZbsmt74QF
8clZ1+GdPB2IUmOTLp3D7j/PkLinvnYh2TtNp+zz+XG49TrGXG0X0jgonCWU
wY+7XTn6l6ldKDZjs27OK35sl0ArXLumG5V0Ouxt8WXb0+ucxEy6kYZUamOQ
Htv+qd/vE9PdKCtJ3n2WyoftOidLI1V6UYfaYmff7Eb85FKXz748ClpRWr/J
hH8DrtbfttGA9Aud5PaK0rXhwRM7hbxaX/xB2dmPuAqdubCryx7rJ8J/0dPS
Btk5z3nURREwsq0ZRlIqnWX9QxNIJ+Rqt0vrMPqnJok3P51ARaqFln6UYeSX
bk65fGwCvY65fPM1MYw2qn+LU382jq4b5Pr3iowg741919cdH0Pz5eZ5+jdG
0Cr95013UoaRWMY7sUPrR9GCYXLAB58/KPy/hTdam0ZRhK6v2zvFP4hjrYGs
sfgostD+nFr98zcavDJ38M7+UfTvs5RbgNpv9EFc72yG2SiamrmVzbk0gNQj
GQ+3Z4yiG42rwxXXUZHVvWP/ePTG0LdjTZtT3NqQ3JWaDprJGJJ6MHvpd3sr
YukbV3RYj6Fbccyh3AOt6JGkfVKy+xhyic1Zs4fVjDKbXpqj5DGkl6nbNMWs
R3NSC01u82NosPmCM9ItR5GtBflDaeOo6oMeccP7IbL4rpVa/2UcPR3+I3Ra
XwhJpbVEfykeR/E2uXqSfA8h/8GI08P2cVSjXyy+Nfo5/JQRld/GMYF0xRwQ
1ecDyHnfTTK+MIE2VQjiie/FMHljVcRRmwkkY2nRXXC+BL4bR3hJOEygP/OX
6q7qlIKBXJo54TuBDuL4Ndby5eDW0SUU+nECRSU6Cp7oqYLyPYeCy1fT0IX9
7W2B5Q1gqWiczOCnIbK6rKVqYCPM7r9TtH0LDelsb9au0GmCvUcyaPcVaGhq
4dzF9CvNEHVq+znlCzSk5rE95V9HCyjoHbO3saah7q6addaKrVBz9r+AiJs0
lPy+rerz41ZYMnmWN+5NQzV9/6LaldvA9iqP2Ns0Gpp5b9Vc6cO+Z92QPNj2
mYb+dNqa5Ta3wwt7DX3O7zS04EV1vbG9Axqd7/tcbKGhO8+RyoaCDjjkSx8U
mqchR3pI7ySlE1oDNiyfWEVHoyGWazPY90T7INnNTnx0xJDaxbfxWhe8jrh8
ulGCjq5xXlyoGeuCtYldHx7p0pFiouBMw2A3vHkzWZVzno4MS0gvIrb3wLF3
ggO/L9FRyH2ey/9Me+D2B10ScqEj89frT2hV98D6T9f3OHjR0fXYs+raiz2Q
khOg+TKQjpzPMnY3KfZCzzdwm4mno3OaLBv7yF5wAcoTqVQ6srXPuOtR2gt8
5XNp5z7RUauH/epV9F44XnegL6uSjvqT3wx4avUBpcFgktpER1cfmLRddewD
txaHjRt66WjQLizge3QfpHenous0OvrplqSZ2d8HWpQK05hZOkLqtzqOcVGA
oBOHbTgJJOSTIK+4i32Pv+OtdW8NgbRVuFf7HKdAMGujUQQvgcDMin+vFQUu
uMZbpgoQ6MYb20VFTwpIzsjdLBYikI7iF/fAGAoUz5/0H99OIHe63BfZKgqE
eHZGcEsR6J++ZO7NPgqYLl95tUWOQFsUl+snaRSQ8mG9V1Ik0LTWn/BSDiow
OX1zTykT6MiNwfBGASqAn0D5JVUCxRXOmItsp0Lo6sQmN3UCKXfO+LzcQ4X/
HstTwk4QiEs82d9YhQrS64qGU06x17v8YgQh9nzVCnZvzhCo7k4qz1FtKhQ/
ShpLNCLQ9tVeZc66VAjW2uTw6gKBIqW/V/zVp4LJqse0FxYEknup/DXCgAoS
5XO34qwJJCw5pOLIZtpDe0a0LYFm9nKM3GfbF+J+p2c32f54/c82V4cKASuG
kxG3CWRbLH9qixYVDIorXMNdCeSwHLUjRY0KYg8OzYR4EOgkr4CPgTIVho+m
3w3yJtC+ilLmVlkq5MyLzT/yJ5C+6RIHtxgVfAqe3PcPItBRO21Fro1U0LvL
tfQwnEDlpw2XhRYpIHLI1cv7GYEWTnCPHRmhwODUvxXPOLZ/Rp0cHdopkJ1j
9tDjFYG8AoaX3n+ngKdzA9fdNwSySPq5fiKFAqf2Y3/XVAJp3OPiPhBMgU2M
z6udMwlEyVc2uOtAgYEsqce3P7HjsTXYtECfApmOcWsdc9nz79HzYspT4MT4
A94bJQTqp56OU//bB3wZRKhtJYFyP8mo60Af9N64zHeljkDL74quoJg+cPp3
SvBSO4FCJ787dKn1gfq7b5EWPQT6xfPqjxNfH6y/qrDJ7CeB5A03c45QeuHN
b/Lm88MEMu6z32fi3AuOSY/ijCYIFN79OU/raC8csZoTNWAS6G+ffQsHZy+0
Un+K6S6y/xe6yqsuoAcS4g0TTnEykE2tx/UWzR6wM6/Yrr2GgfrFXkRFcfYA
Z897CQ0BBjI5qHcYu3RDfaxYiroQA+X1D47skOuGOJMnUse2MFDXxkOGH6ld
sK/dReaQJAP1CUMoqHWBVRNSkD/MQOFRwUt6vzpgb/jnLDk1Brrk01Ik6d8B
s3pSSjLHGYhDk2kXJNkBT+rWK+/SY6DpjOWbIxfbobiyQ1XUioEuXPeRjPzc
CsH+p74JX2Wg4ZrxmEsarWBy4tuxTXYM9DB3Vu95QwvQSl4jfhcGcm7aOI5/
NsO2optaqwMZSEu6SrwbGmCT6Py8YxgDjTzbpXM2vh42uAVmd0cyUJNfO7Z1
+gGLim+3Zr5ioBtJSttO8dZCb/JPhtEXBsrVVHJ6TyuHVg6H1KJ8Bkp5uUd0
IqYMai8uWEgXM9CzfKmiu4dLIX+zSM1cDQOJuoU1ujUWQUyIYcLrnwx086C8
2I3BbAgf7j+3fpCBHizIH54Py4AALcd1LiMMtHZbm1avyltwWQl2OTnJ3l/I
gXMithFg5FyhQ1vHRKcfWLjWKyYjPvNDM0cPMlGt6lzxt9/laE1+ZebbI0zE
qXVYae5fJVraZGzDj5koKWTdda6pajTeeLvhtw4TfcVlQanS9ajueHpykBUT
GXwWHKxwaUWP5bYZdIUwUZQLxUZosQ95Pc5YrfGUiWLuPLHrR1TkNqj6LT2G
ia5t+3Cb/vgnsk0wkfZKYqILXvvGPSMHkCYpYlEyj4moT2qjP51m9xPzXO+d
fjPRveYbus67RpDVnx6W9z8mMlGz4C3oG0El9dnqYeNM1CgQ9nd1zCjySbRs
T51mIqVss5VigXG0olm4QlnPQn6fdfCUOB0tP7ljcvIACwncLLh+rpmJLO+d
SjI+zEJXbnlc0FZjoWKb7ePW7NE21njFIIOFvA42PPQ8yUJbDvIFfA6eREu9
Mh8+mbNQRciLzFqTabQoNcAt5s9Cgp+46dZS88iCP09fNoiFsirCzl9LmUdF
s2HPVcJZKPLN38A4yQXk+eOoomEcC3H/OWbgJ7OIFm7Hmj3KZCGG6NL2V+rL
aP6b/ieinYWmGlhc94048Yzhd8tKqUmkvbkYWSqtwb49WVT1PZOobrPA1aaQ
NZjP+o1F/r5JtKaK6yTPvzVY+vZjs4yjk0g6at2exkQebBxuaPLUcBIZyOtl
1m9Zh7Prhs5cfDCJqtwUbfYc2oBvnOBTm2qfRBrvrq0SeSyIJ+s4ihx7J9H+
gjnWtVJB7GPEOjLcz54v9zkhtcjur627D/eNTiJPC5LahBMJV3m/US7lmELt
HLvkP10lY4kilb1he6fQsQfzUnpWQrhP+dJWKf8p9KLg0P0nGaLYdu4gf0DQ
FFqW+7SniSmKie8buIfCp9BKAfumemQLXnWycDTl+RQS01Pcd/jHFqzwn1Ch
ZNYU2i+RGsjJ3Ip9HvwwleydQkym1Fax8+JYuupQzK5906hcosVfvGAnzg7m
C/Y7OI2G9ZLmp//sxEfODj34c2QaGQs/H1jHL4HPdkdeTdaaRsK8Huv7r0rg
u6MTyrvMp5F4wC2Bk8K78A++lDaJR9MoSbkwaqOvJP6/9x7o/997/A9f/p4O

          "]], 
         LineBox[{{1.4154890725771767`, 10.796194492804377`}, {
          1.4311915759313554`, 11.943378060538429`}, {1.433639725868217, 
          12.127917251758376`}, {1.4385360257419404`, 12.501562972333549`}, {
          1.448328625489387, 13.267002832813995`}, {1.4679138249842802`, 
          14.86928736119696}, {1.507084223974067, 18.346421835498123`}, {
          1.508411489885658, 18.47027296651147}, {1.5097387557972488`, 
          18.59450142314319}, {1.5123932876204305`, 18.844082767240693`}, {
          1.5177023512667942`, 19.347689219214672`}, {1.5244627723985633`, 
          20.}}]}, Annotation[#, "Charting`Private`Tag$5444#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAALj8W6v///783f2sB2MAoQG/5I4j5
+v+/YP5y38i2KECwszEm8/X/vwnafwG1rChAMihNYubr/78HueERf5goQDcR
hNrM1/+/ACwXZ9pvKEBA4/HKma//vw7fVBmuHShAUofNqzNf/790h4QdzXUn
QHfPhG1nvv6/lMguryUYJkDU1AvqwWH9v6Iv4Z+g5yJAHcBvFDcc/L87s/QC
324fQLVrxAUP3fq/cvp73xwPGUBgjDHw2YL5v1Q2OQNYbhJAerSShs19+b+2
OmCWyVYSQJXc8xzBePm/032jSUY/EkDKLLZJqG75vycwRnRhEBJAM806o3Za
+b92BWqPIbMRQAYORFYTMvm/yFJ4ON76EECsj1a8TOH4v1cajjzdJw9A+JJ7
iL8/+L/PQrc0WOIJQOccwepGOvi/2xJQedS2CUDWpgZNzjT4v0+Mrkt3iwlA
s7qREd0p+L/UQsY9MTUJQG7ip5r6E/i/eEzzt3qKCEDjMdSsNej3vweR5WKF
PAdAztAs0auQ97/dEjh8ab8EQLxacjMzi/e/9KrAUv2YBECr5LeVuoX3v9Dc
v9y7cgRAiPhCWsl6978JVk1suSYEQEMgWePmZPe/nSlxA7mQA0C4b4X1ITn3
v7YhvZfcbAJAow7eGZjh9r8+JykFLUYAQJJbPwc53Pa/Vmohf9UlAECCqKD0
2db2v9DGsA+pBQBAYkJjzxvM9r+nLJ0eo4v/PyJ26ISftva/l8q9UFGQ/j+O
B6ne16X2v1Iva3DMz/0/kpQngA==
          "]], 
         LineBox[CompressedData["
1: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
H/mz/voS/L/39/D/39//H3qsWVo=
          "]], 
         LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAjgep3tel9j9SL2twzM/9P1X5TiMp
5vY/AaEx1s1hAEA6m401MPD2P+EE5QvmngBABd8KWj4E9z9iebyG1xoBQJpm
BaNaLPc/N3A2QrcZAkDEdfo0k3z3P/wIGx8aMwRAGZTkWAQd+D/s54vzrtAI
QDiDHxZ0Ivg/yyWzPh37CEBWclrT4yf4PyBwMkiyJQlAklDQTcMy+D96tNb6
T3sJQAwNvEKCSPg/OMX3g1UoCkD+hZMsAHT4P+h+48BkiQtA5HdCAPzK+D/E
QWnGWGYOQK5boKfzePk/Oc+SeDFAEkBXPX9IyL36P1HW39LlcBhAsV5tIjr8
+z/YEirzVcseQPgKQwO5Vf0/v31PNjPKIkBS0Ts2HZj+P8ZaCqE6wiVACjsL
wbyd/j/dp8rB6M4lQMGk2ktco/4/JCpOapHbJUAweHlhm67+P5+tlkLS9CVA
Dh+3jBnF/j+Eo2ekEScmQMlsMuMV8v4/uqFGEISKJkBACCmQDkz/PynsiZAi
TSdA+HH4Gq5R/z9jpKNWG1knQK/bx6VNV/8/dI7OSA5lJ0Aer2a7jGL/P6Fd
iqrifCdA/FWk5gp5/z+KMoY3RawnQLejHz0Hpv8/X0e7SvAJKEBuDe/Hpqv/
PyLtsiaLFShAJne+Ukax/z86taIaICEoQJRKXWiFvP8/TWJxRzg4KEBy8ZqT
A9P/PwoyEKMhZihAKltqHqPY/z/9c6gsjXEoQOHEOalC3v8/wzCxyfJ8KEBQ
mNi+gen/P3/p0jyskyhACAKoSSHv/z8CMWwSAJ8oQL9rd9TA9P8/Z0l2+k2q
KEB21UZfYPr/P26q0fSVtShALj8W6v///z83f2sB2MAoQN/IKbQ=
          "]]}, Annotation[#, "Charting`Private`Tag$5444#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwBAQP+/CFib1JlAgAAAC8AAAACAAAALj8W6v///7+RcIeNBjgSQG/5I4j5
+v+/14cXfzovEkCwszEm8/X/v3Sxp6tsJhJAMihNYubr/7/kneC7yxQSQDcR
hNrM1/+/JAyS5HTxEUBA4/HKma//v8vtLsh0qhFAUofNqzNf/7+llYWSNxsR
QHfPhG1nvv6/e5wI2obwD0DU1AvqwWH9v6f0Gwyb5gpAHcBvFDcc/L/Yo625
7S8GQLVrxAUP3fq/zBS6OJjBAUA4IG4xptf6vzWgDakfrwFAutQXXT3S+r84
7eQbr5wBQMA9a7Rrx/q/dx+cWOZ3AUDKDxJjyLH6v9rxNVq4LgFA4LNfwIGG
+r/6nqvU+50AQAr8+nr0L/q/zLfbjRQH/z9gjDHw2YL5vx8P1cHi3fo/erSS
hs19+b8ti752QMD6P5Xc8xzBePm/aQApR7Si+j/KLLZJqG75v0ycAqbeZ/o/
M806o3Za+b9wXMhDQfP5PwYORFYTMvm/sUFCulQO+T+sj1a8TOH4v5q95Xlh
Vvc/xre3UkDc+L/WeN6Vszv3P+HfGOkz1/i/e3W41h4h9z8WMNsVG834v3VL
pxtB7PY/f9Bfb+m4+L8+Ivv2toP2P1IRaSKGkPi/q01EZnm39T/4knuIvz/4
v8YJOTvZMvQ/5xzB6kY6+L9f6de8gBn0P9amBk3ONPi/QRcuZUgA9D+zupER
3Sn4v2VE33A4zvM/buKnmvoT+L99C8RRnWvzP+Mx1Kw16Pe/QnGRCois8j/O
0CzRq5D3v0LLrPk9R/E/vFpyMzOL97/eo2BBBjLxP6vkt5W6hfe/4H/LQPAc
8T+I+EJayXr3v1bYyIEp8/A/QyBZ4+Zk97+9CA+2MaHwP7hvhfUhOfe/H7QX
E50D8D+jDt4ZmOH2v66xUgTew+0/kls/Bznc9r/F/aech6LtP4KooPTZ1va/
L+Oyk3KB7T9iQmPPG8z2v+m6XH8MQO0/InbohJ+29r9GU8lVT8DsP44Hqd7X
pfa/g3974mBf7D//x6Ag
          "]], 
         LineBox[CompressedData["
1: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
          "]], 
         LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAjgep3tel9j+Df3viYF/sP1X5TiMp
5vY/19vyFmng7T86m401MPD2P+nO4YO8H+4/Bd8KWj4E9z9iJ8PeD6HuP5pm
BaNaLPc/fK06r2qu7z/Edfo0k3z3PyzAy0z0+fA/tsYZvpaB9z8dAtMGEg3x
P6kXOUeahvc/sS6yG0wg8T+OuXdZoZD3P6QJhkEVR/E/Wf30fa+k9z9DcLLg
+pXxP+6E78bLzPc/IWMNuQ058j8ZlORYBB34P3gSx18XlPM/OIMfFnQi+D8w
SLn/mqzzP1ZyWtPjJ/g/PE+EqD7F8z+SUNBNwzL4P2Ft2tLl9vM/DA28QoJI
+D8CpcersVv0P/6FkywAdPg/zpNiai8r9T/kd0IA/Mr4Pzp5jH4y4fY/rlug
p/N4+T+q/n+r26P6PzTXI/oGfvk/Kr8+OpHB+j+7UqdMGoP5P1Zu9R9d3/o/
yEmu8UCN+T9nXx2CNxv7P+M3vDuOofk/AuPSlfOT+z8YFNjPKMr5P33k9Cdw
ifw/gswP+F0b+j9js66irYP+P1c9f0jIvfo/YZLI7jxXAUCxXm0iOvz7P49X
s0MfuwVA+ApDA7lV/T/JZY1tv7kKQFLROzYdmP4/uqy2O2xkD0AKOwvBvJ3+
P6nY8PYHeQ9AwaTaS1yj/j9ifFTcoI0PQDB4eWGbrv4/Rdr8AMq2D0AOH7eM
GcX+P3YSYlt8BBBAyWwy4xXy/j/mTVIkYFYQQEAIKZAOTP8/+KuOK+D4EED4
cfgarlH/P4teYKj4AhFAr9vHpU1X/z8IH5o9Dw0RQB6vZruMYv8/1r6GpDYh
EUD8VaTmCnn/P3ktRA1uSRFAt6MfPQem/z/kTAazfJkRQG4N78emq/8/fsqy
THWjEUAmd75SRrH/P8maS9BrrRFAlEpdaIW8/z/D3POKUsERQHLxmpMD0/8/
LyT+hwbpEUAqW2oeo9j/P+K8qiru8hFA4cQ5qULe/z8Wj5Sj0/wRQFCY2L6B
6f8/stryDpgQEkAIAqhJIe//P9K35vx2GhJAv2t31MD0/z/1dha4UyQSQHbV
Rl9g+v8/t2pXPi4uEkAuPxbq////P5Fwh40GOBJABYWX9A==
          "]]}, Annotation[#, "Charting`Private`Tag$5444#3"]& ], {}}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(U\\), \\(q\\)]\\)(x)\"", TraditionalForm]},
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.999999918367347, 1.999999918367347}, {-1, 20}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\[Sigma]=0.2\"", "\"\[Sigma]=0.5\"", "\"\[Sigma]=1\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.841227032434187*^9, 3.841306994682527*^9, 3.841307913357794*^9, 
   3.841308469352275*^9, 3.8413085630073576`*^9, 3.841309512699292*^9, 
   3.8413096766869817`*^9, 3.8413097494106264`*^9, 3.841311412111553*^9, 
   3.8413115126595063`*^9, 3.8413116649595203`*^9, 3.841376851521693*^9, 
   3.841377321600373*^9, 3.844862280044877*^9, 3.8448623352736588`*^9, 
   3.844878376074518*^9, 3.8448784149529953`*^9, 3.8448785679859653`*^9, 
   3.844878612486533*^9, 3.844878645765011*^9, {3.844878710307822*^9, 
   3.844878723287755*^9}, 3.8448793094517746`*^9},
 CellLabel->
  "Out[248]=",ExpressionUUID->"c270a902-13da-43fb-ab1b-484d4b99e9c3"]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.8413119404615793`*^9},
 CellLabel->
  "In[1020]:=",ExpressionUUID->"69b25ab0-aa07-4d91-81ba-02da8a0dc148"],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.841209752633317*^9},
 CellLabel->
  "In[1021]:=",ExpressionUUID->"30bbaf6e-cdb9-43bf-8dd5-b0aad86dbbea"],

Cell["\<\
Example 2: Creation and destruction of fixed points
See Figure 4 in paper\
\>", "Text",
 CellChangeTimes->{{3.8412132719066453`*^9, 
  3.8412133174775834`*^9}},ExpressionUUID->"a2c4ed5c-f327-4a32-be62-\
73dfc9cc03c6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", "x_", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "4"}], "/", "4"}], "-", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "/", "2"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"-", 
    RowBox[{
     RowBox[{"U", "'"}], "[", "x", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"x_", ",", "\[Sigma]_"}], "]"}], ":=", 
   RowBox[{"\[Sigma]", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["x", "2"]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]", "=", "0"}], ";"}], " ", 
  RowBox[{"(*", " ", "ito", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Values\[Sigma]", "=", 
   RowBox[{"{", 
    RowBox[{"0.2", ",", "0.5", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Stepsize", "=", "0.00001"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IntegrationConstant", "[", "\[Sigma]_", "]"}], ":=", "2"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Ps", "[", 
     RowBox[{"x_", ",", "\[Sigma]_", ",", "N_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"N", "/", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Sigma]", "2"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}], "2"]}], ")"}]}], 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"1", "/", 
        SuperscriptBox["\[Sigma]", "2"]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Alpha]", " ", 
             SuperscriptBox["\[Sigma]", "2"]}], "-", "1"}], ")"}], 
          RowBox[{"Log", "[", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], "]"}]}], "-", 
         RowBox[{"2", "/", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}]}], "+", 
         RowBox[{"IntegrationConstant", "[", "\[Sigma]", "]"}]}], ")"}]}], 
      "]"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"eq", " ", "13"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Uq", "[", 
     RowBox[{"x_", ",", "\[Sigma]_", ",", "N_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{
       SuperscriptBox["\[Sigma]", "2"], " ", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}], "2"], "/", "N"}]}], "]"}], "-", 
     RowBox[{
      RowBox[{"1", "/", 
       SuperscriptBox["\[Sigma]", "2"]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Alpha]", " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "-", "1"}], ")"}], " ", 
         RowBox[{"Log", "[", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], "]"}]}], "-", 
        RowBox[{"2", "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}]}], "+", 
        RowBox[{"IntegrationConstant", "[", "\[Sigma]", "]"}]}], ")"}]}]}]}], 
   ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"eq", " ", "14"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "=", 
   RowBox[{"\[Sigma]low", "=", "0.2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrapezoidalRule", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "a"}], ")"}], "*", "0.5", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Ps", "[", 
       RowBox[{"a", ",", "\[Sigma]", ",", "N"}], "]"}], "+", 
      RowBox[{"Ps", "[", 
       RowBox[{"b", ",", "\[Sigma]", ",", "N"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Area1", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"TrapezoidalRule", "[", 
      RowBox[{"i", ",", 
       RowBox[{"i", "+", "Stepsize"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "2"}], ",", "2", ",", "Stepsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nvalue", "=", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{"Area1", "\[Equal]", "1"}], ",", "N"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nlow", "=", 
   RowBox[{"N", "/.", 
    RowBox[{"Nvalue", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "Nlow", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "=", 
   RowBox[{"\[Sigma]mid", "=", "0.5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrapezoidalRule", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "a"}], ")"}], "*", "0.5", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Ps", "[", 
       RowBox[{"a", ",", "\[Sigma]", ",", "N"}], "]"}], "+", 
      RowBox[{"Ps", "[", 
       RowBox[{"b", ",", "\[Sigma]", ",", "N"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Area2", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"TrapezoidalRule", "[", 
      RowBox[{"i", ",", 
       RowBox[{"i", "+", "Stepsize"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "2"}], ",", "2", ",", "Stepsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nvalue", "=", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{"Area2", "\[Equal]", "1"}], ",", "N"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nmid", "=", 
   RowBox[{"N", "/.", 
    RowBox[{"Nvalue", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "Nmid", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "=", 
   RowBox[{"\[Sigma]high", "=", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrapezoidalRule", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "a"}], ")"}], "*", "0.5", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Ps", "[", 
       RowBox[{"a", ",", "\[Sigma]", ",", "N"}], "]"}], "+", 
      RowBox[{"Ps", "[", 
       RowBox[{"b", ",", "\[Sigma]", ",", "N"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Area3", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"TrapezoidalRule", "[", 
      RowBox[{"i", ",", 
       RowBox[{"i", "+", "Stepsize"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "2"}], ",", "2", ",", "Stepsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nvalue", "=", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{"Area3", "\[Equal]", "1"}], ",", "N"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nhigh", "=", 
   RowBox[{"N", "/.", 
    RowBox[{"Nvalue", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "Nhigh", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Ps", "[", 
       RowBox[{"x", ",", "\[Sigma]low", ",", "Nlow"}], "]"}], "]"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Ps", "[", 
       RowBox[{"x", ",", "\[Sigma]mid", ",", "Nmid"}], "]"}], "]"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Ps", "[", 
       RowBox[{"x", ",", "\[Sigma]high", ",", "Nhigh"}], "]"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.1"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x\>\"", ",", "\"\<\!\(\*SubscriptBox[\(P\), \(s\)]\)(x)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Sigma]=0.2\>\"", ",", "\"\<\[Sigma]=0.5\>\"", ",", 
      "\"\<\[Sigma]=1\>\""}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Uq", "[", 
       RowBox[{"x", ",", "\[Sigma]low", ",", "Nlow"}], "]"}], "]"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Uq", "[", 
       RowBox[{"x", ",", "\[Sigma]mid", ",", "Nmid"}], "]"}], "]"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Uq", "[", 
       RowBox[{"x", ",", "\[Sigma]high", ",", "Nhigh"}], "]"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "8"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x\>\"", ",", "\"\<\!\(\*SubscriptBox[\(U\), \(q\)]\)(x)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Sigma]=0.2\>\"", ",", "\"\<\[Sigma]=0.5\>\"", ",", 
      "\"\<\[Sigma]=1\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8406968087149096`*^9, 3.8406968492859287`*^9}, {
   3.8406970505337424`*^9, 3.840697067187955*^9}, {3.8406977318043013`*^9, 
   3.840697735731063*^9}, 3.840697986880844*^9, {3.8406980361889524`*^9, 
   3.840698038801011*^9}, 3.840698177462577*^9, {3.8406982940916114`*^9, 
   3.8406983007466955`*^9}, {3.84069836058142*^9, 3.8406983650229206`*^9}, {
   3.8406984036248083`*^9, 3.8406984540486155`*^9}, {3.8406985040098176`*^9, 
   3.840698510331915*^9}, {3.8406985892481213`*^9, 3.8406986067363386`*^9}, {
   3.8406987807103157`*^9, 3.8406987858232775`*^9}, {3.8406988562795277`*^9, 
   3.840698924366763*^9}, {3.840699302313339*^9, 3.8406993303168387`*^9}, {
   3.8406994357442384`*^9, 3.840699457132042*^9}, 3.8407008867901754`*^9, {
   3.84070098112724*^9, 3.84070100827989*^9}, {3.840701096682168*^9, 
   3.8407011695751514`*^9}, 3.840701229749111*^9, {3.840701279596554*^9, 
   3.8407012852157235`*^9}, {3.840701323131052*^9, 3.8407013389676447`*^9}, {
   3.8407013778370676`*^9, 3.8407014253474174`*^9}, {3.840701458838807*^9, 
   3.840701555967039*^9}, {3.840701600524969*^9, 3.8407016124870443`*^9}, {
   3.8407016430727944`*^9, 3.8407016869867*^9}, {3.8407017290455604`*^9, 
   3.8407018091295595`*^9}, {3.8407018658547907`*^9, 
   3.8407019236565385`*^9}, {3.8407021479396887`*^9, 
   3.8407022168286963`*^9}, {3.840702275269452*^9, 3.840702286635394*^9}, {
   3.840702322517462*^9, 3.8407023368661566`*^9}, {3.8407023905474377`*^9, 
   3.8407024028709936`*^9}, {3.8407024384659996`*^9, 3.840702471868064*^9}, {
   3.840702539132374*^9, 3.840702585425595*^9}, {3.840702714463168*^9, 
   3.840702785248047*^9}, {3.8407028501499453`*^9, 3.840702901372095*^9}, {
   3.8407030385191975`*^9, 3.8407032646370754`*^9}, {3.8407033705016413`*^9, 
   3.840703382429397*^9}, {3.840861143246108*^9, 3.8408611589052534`*^9}, {
   3.8408614575885887`*^9, 3.8408614677763357`*^9}, {3.8408617045417056`*^9, 
   3.840861720398676*^9}, {3.840861760377119*^9, 3.8408617956187334`*^9}, {
   3.840861835980441*^9, 3.840861876085074*^9}, {3.8408622258044233`*^9, 
   3.8408622641908865`*^9}, {3.8408627707220836`*^9, 
   3.8408627802063637`*^9}, {3.840862951169039*^9, 3.8408630059133077`*^9}, {
   3.840863128356778*^9, 3.840863142771858*^9}, 3.84086320042351*^9, {
   3.840863354309842*^9, 3.8408633652079835`*^9}, 3.8408634027853565`*^9, {
   3.8408635409636374`*^9, 3.8408635508288713`*^9}, 3.8408636194903927`*^9, 
   3.840863702953343*^9, 3.840863973617943*^9, {3.8410594645862236`*^9, 
   3.841059520899914*^9}, {3.841059582729154*^9, 3.8410595884670715`*^9}, {
   3.841059645611573*^9, 3.84105989461872*^9}, {3.841059943423438*^9, 
   3.8410599618719225`*^9}, {3.841060028380286*^9, 3.841060109950308*^9}, {
   3.8410602116715946`*^9, 3.841060238388465*^9}, {3.8410602792429295`*^9, 
   3.841060321862896*^9}, {3.8410603970107713`*^9, 3.8410604272980537`*^9}, {
   3.84106051955087*^9, 3.841060559953292*^9}, {3.841202077253341*^9, 
   3.8412021083849144`*^9}, {3.8412021438146524`*^9, 
   3.8412021647356377`*^9}, {3.8412022076592145`*^9, 
   3.8412022296336627`*^9}, {3.8412022657699533`*^9, 
   3.8412023088682847`*^9}, {3.8412023412300406`*^9, 
   3.8412023580400605`*^9}, {3.8412052596044865`*^9, 3.841205282738083*^9}, {
   3.8412053269700055`*^9, 3.841205343790017*^9}, {3.8412054153858786`*^9, 
   3.841205489907757*^9}, {3.8412055539833746`*^9, 3.8412056763763804`*^9}, {
   3.8412057196108284`*^9, 3.8412058292045293`*^9}, {3.8412059090526567`*^9, 
   3.8412060827405267`*^9}, {3.841206161577173*^9, 3.8412062791178603`*^9}, {
   3.841206336534136*^9, 3.8412064104853034`*^9}, {3.8412065010360365`*^9, 
   3.8412065250383673`*^9}, {3.841206594457271*^9, 3.841206601759766*^9}, {
   3.8412067005110197`*^9, 3.841206713288909*^9}, {3.8412070686575785`*^9, 
   3.841207124526615*^9}, {3.8412074344378166`*^9, 3.841207472239688*^9}, {
   3.8412075225258923`*^9, 3.84120757210735*^9}, {3.841207699771965*^9, 
   3.841207762649688*^9}, {3.8412115258918047`*^9, 3.8412115260909996`*^9}, {
   3.841213380421114*^9, 3.8412134682344165`*^9}, {3.8412135059759245`*^9, 
   3.8412135496057816`*^9}, {3.841213585672487*^9, 3.841213601942816*^9}, {
   3.8412136586260676`*^9, 3.8412137658314967`*^9}, {3.8412138025376163`*^9, 
   3.8412139657374125`*^9}, {3.8412140219074497`*^9, 3.841214022808622*^9}, {
   3.841214276863784*^9, 3.8412142834340887`*^9}, {3.8412143804166837`*^9, 
   3.8412143830814915`*^9}, {3.841214440298247*^9, 3.841214472789728*^9}, {
   3.841457434024309*^9, 3.8414574435432086`*^9}, {3.8437108473196144`*^9, 
   3.843710863963272*^9}, 3.843710921400146*^9, {3.843711112250903*^9, 
   3.843711132713025*^9}, {3.8437111785488367`*^9, 3.8437111968227615`*^9}, {
   3.8437112587563295`*^9, 3.8437112750542355`*^9}, {3.8437114489015827`*^9, 
   3.8437115005512004`*^9}, {3.8437116526628823`*^9, 3.843711670905763*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"16b777a9-91b4-449e-9167-1359f3d07a33"],

Cell[CellGroupData[{

Cell[BoxData["0.00006919926316262433`"], "Print",
 CellChangeTimes->{3.8412140322604933`*^9, 3.84121429050863*^9, 
  3.8412143904198246`*^9, 3.841214480571196*^9, 3.8413773377869787`*^9, 
  3.843711013842537*^9, 3.843711157333067*^9, 3.843711246392461*^9, 
  3.8437113081767807`*^9, 3.8437115293657117`*^9, 3.8437197838975735`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"e840ed69-fe37-471e-85ad-420d94e805fa"],

Cell[BoxData["0.08646269327788379`"], "Print",
 CellChangeTimes->{3.8412140322604933`*^9, 3.84121429050863*^9, 
  3.8412143904198246`*^9, 3.841214480571196*^9, 3.8413773377869787`*^9, 
  3.843711013842537*^9, 3.843711157333067*^9, 3.843711246392461*^9, 
  3.8437113081767807`*^9, 3.8437115293657117`*^9, 3.843719799206625*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"e8715099-4996-4715-a6dd-f505e924a6d2"],

Cell[BoxData["0.5736641629233977`"], "Print",
 CellChangeTimes->{3.8412140322604933`*^9, 3.84121429050863*^9, 
  3.8412143904198246`*^9, 3.841214480571196*^9, 3.8413773377869787`*^9, 
  3.843711013842537*^9, 3.843711157333067*^9, 3.843711246392461*^9, 
  3.8437113081767807`*^9, 3.8437115293657117`*^9, 3.8437198108175726`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"fba4df88-78c7-4e54-9018-046f4799529a"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
TNo=
          "]]}, Annotation[#, "Charting`Private`Tag$4037#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
jRve8loCm84vN3f1NcD98xzqy31LUHbgbF5haT0QlKwFxAOW4aX+cLjUMQR3
15Q5Xwctw3sNck7ybgTz3/bsGA9bhtoMu36Z6TrYqVsznRW/DO6/LttFFdSB
/E2+GrHiZajRWY4NO14Hvl7tZmJDy/BElot8/Ow3kPihGntUYQVE30q0zjh8
hSc3uLhFiSswbhzVZc9aBXZ5xxPEySvQq5UkHjdXCSZrl48em1gBhnXreyP4
Sjid+E5ZYX4FntyXC/+YVwnMI2zmGjtXIfUQ8y2Zi5WQcJc501x2FUYnSouJ
UV+g6QVdKcpzFTzZcSOlJz/Dlx+H6mJfrUKG72vpq0Kf4eMBNd2EN6vQ2DYi
ybj7M4RVu95Mj1iFmhVx7sThCri5ueRVnLUKtCoPj0/BFTAbMPejvWMVZKHJ
9fxEORyKHjPbeZgGJj9UXf/kl8Ep/yP7nUVpQHQ1zJWLLQPTZ+a9VEkaaJ0n
wZtXZRB59bdhoyINHlu/eOZsVgZ79tZq+enR4ODvqevnWctg63WULIMzDVJH
aN9S7pXCmKsWw0YbDWYvvdr9R60EmBy8vj34TYOG3IaFFMkSEDat8iD0Y+9r
cfdy4CuBW0ryyzWjNPiunRhqQykG3PyhafcVGlxZsz+sca0Yft5f6F0VWYOm
uWK2tjNFUGSRlvvPbQ2C7B01rCQLQQl/lM7ivQa+pe+5bu0uhK/GuZf4/deg
Q5fvovtMAbTqFy2ce7cGR1FP8u6SAqCq1p4JS18Dj5S8M29PF8BB3oEuqbY1
uCLt4EK5ng9+HZy0WwJ0uOx8iedlSh7s0osyeCpMB8sW+qF1/zwIb9yfHCBO
B7k7njUx9/MgqeawVsFxOqj7kB/xK+dBZZ5MKO08HVauXFe17syF/wJ0haMe
0mF5PkCtkSkXbqj76LV+o8PmKbfFW77ZQFye4GxooMNsvbqu5/1ssCu6jP/a
QgeRPvYPpcbZ8PCI0N3ibjowex4ctBHPBj/Gb/6x43SYMbjX0NWeBUXN9Dr7
vevw8pi8+LBgFuy87KLMeGsdhMNW9qp2ZUAwy/AG3XYdBF7n2HF+zQBOdKFp
6e46zNXNXdnIyQB+Bb5rU0/W4Yxuaf4+nww4zlPxpCtgHR493rRWUcgAc9xC
QXLhOsSO3x8/E5sOpVaPRE9vrIPW203ntidpYPd5/nAa4wbcYSyMjryVBrx7
nA+xsG6AbZTB9ScGaeBS7cHVw70BCYG2lg/F0uA0b+DWfckNSOHQudNalgoN
PzOG4o034HXdDV/fsBToUxqIXMvbgKe347/K2yfB6xCLMOuiDUg8f2dXv1YS
qFCGg5rLNyB/7yvbdJEkiAsf931ftwFSAi4JBSOJcGt60elY3wZYmBOHXt1K
hInUvRdvbm/A6rpM/D6bBKCxnd9RbbIJUVxv4ht84oBnliO6wXwTGFm0ojvt
40Cme0isw3oTIvSt45b148DqwzOdkfubwKU2rJfEGweNRzOCmL03wW3hr5hm
wQcIO8vIZZyzCbVO38e7SLEg7oQEZ1Y24cOpLWm4EQMaRiGfltY3gTnwx2QF
xICZ0g2NLYYt+Cmy44y2VAwE02etudm3IGP66dnitWiYfyOUqXpkCz7IqPaX
J0dDbarXsQDdLTilPLlqMx0Fxt1nVA7HbYGoHYtRUkwksJ1hr69N3gJXEx+u
Mu9IqM8aumiZuQUe92p7qA6RoODmbptYtAUb9QGkhNORwHGkMvRQ8xZkXfJ5
fY38Hn4+VKTyLW5BOX7OuPfkezi361gEx6VtqNKYOeQ4EA60pzT+IqNtMGYu
O3S4NByKCS3Zhje2YSCjxY0hOByEiu9+DbXbhtqvpk9unA2HDZOsCTb3bRCd
uMdzLjMMKjOPqLPmbIO/RsbVdvd34LR3riWnYBsUC7/Q7pu8AwnXOmOd0m2I
myMGKp94B9EGt+69rt2Gt0OhIcZ/QuHZQkLUjt5t6GfSvJxiEQrSFo5CmQPb
cOPV/vspp0KB3KT2UWt4G4ayxH785AuFq3EDda/+bMMvjhNu6b9DYBdTnr7I
3DasGVjdNSwKAfTAte/70jbc+iby82hoCLj061jb0LcBLSQ/EnMMgf/7fg/+
//u9/wEefaZt
          "]]}, Annotation[#, "Charting`Private`Tag$4037#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RMP/3a/C/9+v/g+QQxpJ
          "]]}, Annotation[#, "Charting`Private`Tag$4037#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(s\\)]\\)(x)\"", TraditionalForm]},
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.999999918367347, 1.999999918367347}, {0, 1.1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\[Sigma]=0.2\"", "\"\[Sigma]=0.5\"", "\"\[Sigma]=1\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8437112219591064`*^9, 3.8437112862743716`*^9, 
  3.8437115067311134`*^9, 3.8437198117361555`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"5ec11fa0-9d09-4404-8fe7-aae9f4d9f6f2"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$4281#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
wPW838vg7Kcj5XU8RJU6ASGdrGSFH3RkltLSth/zd9m/1ua1dOT0at2jfDUC
hHzXbg74QkdlVt0CepgtGkTbM/Pp6HiFnAldFetHdHdk22s6Eolm6EdjHrii
bfQ3kY4EtrcMn8K8ExnzSkfR0axVsoIM5ouCtpUmD+jIq3xkNR/m9+fcAn38
6Cj8vLT3vwMETOX7a6VepyOdz19dOfF11VWP57874fWixV8bMd8yTy6ctcb3
q+Er18RclpFzTcKUjvaEc627hnnVPFI8ZkBHG0RGSz5gNjRsGb1xkI4cSmI/
r8Hrj0igpr1QoiPhdV3c7pjbWKR9zS46qqXbRo1i3qTNKTa5lY7UVcpOXsX5
sIkQ6t4qSEeLct4Ubpy/lAHJWH0unC8+wvg95iElZVO3RRpK2m993QHnWz5I
jz9+goYSN/xLVsD1cfthVvdtkIbMdjGaVmgRULDzwj1WNw31D/BME5jnPW/o
bmymIWbxf5w0XF+tmrv/dCppaEbMkz2C6199Kc0zKpuGXrWuU9+lS8Caz4X7
SlNpSCsk7LY11tOJtVXjQ/H4eWGcHi+x3rqzhxw17tJQYFGrvo0BAeIcs5IX
vGnIRsCRpxXr9bwpd3/4FRrK4HD8zxzreWxa2oJqSUNOxX+lw42wvg6rCfMZ
09Ai/U+6Du4Hz7gjTfv1aKjwoqonB+6XJfWLBg8UacjIek1b3kmsD/83qns4
aejRrgPb660JuP9RtlZwjoreuMdDC+7HRfbr09NjVJQ1sMqWYUcA3S7Dr6iL
iiLOXr6k5EBAvm5quV4uFbn/3XvP4QoB0r5Sp3ZlUNEKHblzrVexvvJfDvEk
UlFINS/9mDsBQTtSeBsfUNFs75W0CzcJMON6cdzSjop+XtsyJB+E86UtStUw
pyJHga2v/gQToOn1/Lrof1R0e5ma3oXnk9TIsxiaKhVtSFIz/fSIgOnauJ7L
AlT0bstoP1cCATJbJBs5bg0gmQWb9r5CPF8fbiernAaQ+8HQna5FuF6LYuvD
zAbQKlNrkruUgNq+rac3yg+g7RLeVbYVWN8pG4bkuvtRH6xgxbYRkCXD+89M
rR8Z0cTXiUwToKg6oZg+3YcopvoKCweZ4LQnIKD4Vx8adVJLO6zLhGTpdW2N
NX2o4SWn1wsDJghv2ntz9nkf+jW99MPNlAlzc27fjuj3oUUJ50NxzkwoL2ab
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
          "]]}, Annotation[#, "Charting`Private`Tag$4281#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
vl1H7S+tsODEAdkbXUDC/u88BP7/POR/AIXO8uU=
          "]]}, Annotation[#, "Charting`Private`Tag$4281#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(U\\), \\(q\\)]\\)(x)\"", TraditionalForm]},
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.999999918367347, 1.999999918367347}, {-1, 8}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\[Sigma]=0.2\"", "\"\[Sigma]=0.5\"", "\"\[Sigma]=1\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8437112219591064`*^9, 3.8437112862743716`*^9, 
  3.8437115067311134`*^9, 3.843719812052371*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"41bb748d-1471-4de7-8c31-fd5888bfabf7"]
}, Open  ]],

Cell["Figure 5 in paper", "Text",
 CellChangeTimes->{{3.841465462099229*^9, 
  3.8414654660536757`*^9}},ExpressionUUID->"88a15dcc-84ee-4968-8f27-\
d253345b0113"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "4"}], "/", "4"}], "-", 
    RowBox[{
     RowBox[{"x", "^", "2"}], "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"-", 
    RowBox[{
     RowBox[{"U", "'"}], "[", "x", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "=", "0.7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"x_", ",", "\[Sigma]_"}], "]"}], ":=", 
   RowBox[{"\[Sigma]", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["x", "2"]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Values\[Sigma]", "=", 
   RowBox[{"{", 
    RowBox[{"0.2", ",", "0.5", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Stepsize", "=", "0.00001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IntegrationConstant", "[", "\[Sigma]_", "]"}], ":=", "2"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Ps", "[", 
     RowBox[{"x_", ",", "\[Sigma]_", ",", "\[Alpha]_", ",", "N_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"N", "/", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Sigma]", "2"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}], "2"]}], ")"}]}], 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"1", "/", 
        SuperscriptBox["\[Sigma]", "2"]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Alpha]", " ", 
             SuperscriptBox["\[Sigma]", "2"]}], "-", "1"}], ")"}], 
          RowBox[{"Log", "[", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], "]"}]}], "-", 
         RowBox[{"2", "/", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["x", "2"]}], ")"}]}], "+", 
         RowBox[{"IntegrationConstant", "[", "\[Sigma]", "]"}]}], ")"}]}], 
      "]"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"eq", " ", "13"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Uq", "[", 
     RowBox[{"x_", ",", "\[Sigma]_", ",", "\[Alpha]_", ",", "N_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{
       SuperscriptBox["\[Sigma]", "2"], " ", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}], "2"], "/", "N"}]}], "]"}], "-", 
     RowBox[{
      RowBox[{"1", "/", 
       SuperscriptBox["\[Sigma]", "2"]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "\[Alpha]", " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "-", "1"}], ")"}], " ", 
         RowBox[{"Log", "[", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], "]"}]}], "-", 
        RowBox[{"2", "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}]}], "+", 
        RowBox[{"IntegrationConstant", "[", "\[Sigma]", "]"}]}], ")"}]}]}]}], 
   ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"eq", " ", "14"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]", "=", 
    RowBox[{"\[Alpha]ito", "=", "0"}]}], ";"}], " ", 
  RowBox[{"(*", " ", "ito", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrapezoidalRule", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "a"}], ")"}], "*", "0.5", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Ps", "[", 
       RowBox[{"a", ",", "\[Sigma]", ",", "\[Alpha]ito", ",", "N"}], "]"}], 
      "+", 
      RowBox[{"Ps", "[", 
       RowBox[{"b", ",", "\[Sigma]", ",", "\[Alpha]ito", ",", "N"}], "]"}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Area1", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"TrapezoidalRule", "[", 
      RowBox[{"i", ",", 
       RowBox[{"i", "+", "Stepsize"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "2"}], ",", "2", ",", "Stepsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nvalue", "=", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{"Area1", "\[Equal]", "1"}], ",", "N"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nito", "=", 
   RowBox[{"N", "/.", 
    RowBox[{"Nvalue", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "Nito", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]", "=", 
    RowBox[{"\[Alpha]stra", "=", "0.5"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrapezoidalRule", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "a"}], ")"}], "*", "0.5", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Ps", "[", 
       RowBox[{"a", ",", "\[Sigma]", ",", "\[Alpha]stra", ",", "N"}], "]"}], 
      "+", 
      RowBox[{"Ps", "[", 
       RowBox[{"b", ",", "\[Sigma]", ",", "\[Alpha]stra", ",", "N"}], "]"}]}],
      ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Area1", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"TrapezoidalRule", "[", 
      RowBox[{"i", ",", 
       RowBox[{"i", "+", "Stepsize"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "2"}], ",", "2", ",", "Stepsize"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nvalue", "=", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{"Area1", "\[Equal]", "1"}], ",", "N"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nstra", "=", 
   RowBox[{"N", "/.", 
    RowBox[{"Nvalue", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "Nstra", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Ps", "[", 
       RowBox[{"x", ",", "\[Sigma]", ",", "\[Alpha]ito", ",", "Nito"}], "]"}],
       "]"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Ps", "[", 
       RowBox[{"x", ",", "\[Alpha]stra", ",", "Nc"}], "]"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.5"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x\>\"", ",", "\"\<\!\(\*SubscriptBox[\(P\), \(s\)]\)(x)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Alpha]=0\>\"", ",", "\"\<\[Alpha]=0.5\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Uq", "[", 
       RowBox[{"x", ",", "\[Sigma]", ",", "\[Alpha]ito", ",", "Nstra"}], 
       "]"}], "]"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"Uq", "[", 
       RowBox[{"x", ",", "\[Alpha]stra", ",", "Nc"}], "]"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "4"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x\>\"", ",", "\"\<\!\(\*SubscriptBox[\(U\), \(q\)]\)(x)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Alpha]=0\>\"", ",", "\"\<\[Alpha]=0.5\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.841457822068494*^9, 3.8414579563690987`*^9}, {
  3.8414580185566225`*^9, 3.8414580325973377`*^9}, {3.8414581009851007`*^9, 
  3.8414581317877913`*^9}, {3.841458195383998*^9, 3.8414584005769787`*^9}, {
  3.841458509352919*^9, 3.841458510384315*^9}, {3.8414587981466007`*^9, 
  3.841458832107698*^9}, {3.841458913714204*^9, 3.8414589286721764`*^9}, {
  3.841459004919753*^9, 3.8414591171327257`*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"2cbd6224-de2b-4b41-9c96-dfd00e2a728d"],

Cell[CellGroupData[{

Cell[BoxData["0.23861969480682632`"], "Print",
 CellChangeTimes->{
  3.8414579929954042`*^9, 3.841458043154343*^9, 3.8414581410920057`*^9, 
   3.8414584086738353`*^9, 3.841458520720903*^9, 3.841458810302623*^9, 
   3.8414588420959034`*^9, 3.841458940334631*^9, {3.841459111242749*^9, 
   3.8414591377315617`*^9}},
 CellLabel->
  "During evaluation of \
In[151]:=",ExpressionUUID->"a3bf28db-9db3-4fdc-814a-21fe0aa0f914"],

Cell[BoxData["0.15487949474369403`"], "Print",
 CellChangeTimes->{3.8414579929954042`*^9, 3.841458043154343*^9, 
  3.8414581410920057`*^9, 3.8414584086738353`*^9, 3.841458520720903*^9, 
  3.841458810302623*^9, 3.8414588420959034`*^9, 3.841458940334631*^9, 
  3.841459111242749*^9, 3.841459146678522*^9},
 CellLabel->
  "During evaluation of \
In[151]:=",ExpressionUUID->"7c20d512-9c2b-4b44-9bc1-1701356dd35c"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$6287#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
//fZ/wPKa0pi
          "]]}, Annotation[#, "Charting`Private`Tag$6287#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(s\\)]\\)(x)\"", TraditionalForm]},
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.999999918367347, 1.999999918367347}, {0, 0.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\[Alpha]=0\"", "\"\[Alpha]=0.5\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8414579947547283`*^9, 3.8414580434092784`*^9, 3.8414581412977695`*^9, 
   3.841458408783885*^9, 3.841458520886162*^9, 3.8414588105780854`*^9, 
   3.8414588424323883`*^9, 3.84145894064531*^9, {3.8414591201408677`*^9, 
   3.841459146814599*^9}},
 CellLabel->
  "Out[169]=",ExpressionUUID->"8a32428d-3e6c-43cb-80a4-c7df3497dc32"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ed0fuQH///+8/wE6/qb8
          "]]}, Annotation[#, "Charting`Private`Tag$6371#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$6371#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(U\\), \\(q\\)]\\)(x)\"", TraditionalForm]},
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.999999918367347, 1.999999918367347}, {0, 4}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\[Alpha]=0\"", "\"\[Alpha]=0.5\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8414579947547283`*^9, 3.8414580434092784`*^9, 3.8414581412977695`*^9, 
   3.841458408783885*^9, 3.841458520886162*^9, 3.8414588105780854`*^9, 
   3.8414588424323883`*^9, 3.84145894064531*^9, {3.8414591201408677`*^9, 
   3.841459146921058*^9}},
 CellLabel->
  "Out[170]=",ExpressionUUID->"4b4dd468-0967-4277-bc22-5496cc48ae84"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Adding additive and multiplicative noise to double well potential with \
perturbation\
\>", "Subsection",
 CellChangeTimes->{{3.8515261096133804`*^9, 
  3.851526138549776*^9}},ExpressionUUID->"f4979b63-1fa4-4825-ba1f-\
6b50c18a3c11"],

Cell["\<\
Potential 1 is the potential function used in the \
\[OpenCurlyDoubleQuote]Shaping the epigenetic landscape\
\[CloseCurlyDoubleQuote] paper with the perturbation
Potential 2 is the potential function used in the \
\[OpenCurlyDoubleQuote]Enhancing transport by shaping barriers\
\[CloseCurlyDoubleQuote] paper with the perturbation
I have commented out  different combinations of potentials and noise \
functions, and I have added whether they work or not. \
\>", "Text",
 CellChangeTimes->{{3.845453512054052*^9, 3.8454536367855186`*^9}, {
  3.8454536923738775`*^9, 3.8454537168693743`*^9}, {3.845455310851921*^9, 
  3.8454553299447093`*^9}, {3.8454554667122407`*^9, 3.8454554846347113`*^9}, {
  3.8515262770410805`*^9, 
  3.8515262891272154`*^9}},ExpressionUUID->"6be1358c-f728-408d-97b0-\
5c1068bb3134"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "potential", " ", "and", " ", "noise"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"U", ",", "f", ",", "g", ",", "Ps", ",", "Uq"}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Additive", " ", "noise", " ", "added", " ", "to", " ", "potential", " ", 
     "1", " ", "with", " ", 
     RowBox[{"perturbation", ":", " ", 
      RowBox[{"this", " ", "works"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"U", "[", "x_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "^", "4"}], "/", "4"}], "-", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "/", "2"}]}], ")"}], " ", "+", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "a"}], " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "b"}], " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "+", "d"}], ")"}], "^", "2"}]}], "]"}]}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"x_", ",", "\[Sigma]_"}], "]"}], ":=", "\[Sigma]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"IntegrationConstant", "[", "\[Sigma]_", "]"}], ":=", "0"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "50"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", "=", "0"}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Multiplicative", " ", "noise", " ", "1", " ", "added", " ", "to", " ", 
     "potential", " ", "1", " ", "with", " ", 
     RowBox[{"perturbation", ":", " ", 
      RowBox[{"does", " ", "NOT", " ", "work"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"U", "[", "x_", "]"}], ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "^", "4"}], "/", "4"}], "-", 
         RowBox[{
          RowBox[{"x", "^", "2"}], "/", "2"}]}], ")"}], " ", "+", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "a"}], " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "b"}], " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"x", "+", "d"}], ")"}], "^", "2"}]}], "]"}]}], ")"}]}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"x_", ",", "\[Sigma]_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"\[Sigma]", "/", "4"}], 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x", "4"], "-", 
         RowBox[{"4.0", 
          SuperscriptBox["x", "2"]}], "+", "8"}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"IntegrationConstant", "[", "\[Sigma]_", "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", 
         SuperscriptBox["\[Sigma]", "2"]}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ArcTan", "[", "1", "]"}], "+", 
          RowBox[{"3", "/", "2"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "\[Alpha]", " ", 
        RowBox[{"Log", "[", "8", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"a", "=", "0.3"}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", "50"}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", "0"}], ";"}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Multiplicative", " ", "noise", " ", "1", " ", "added", " ", "to", " ", 
     "potential", " ", "1", " ", "wihout", " ", 
     RowBox[{"perturbation", ":", " ", 
      RowBox[{"this", " ", "works"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"U", "[", "x_", "]"}], ":=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "^", "4"}], "/", "4"}], "-", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "/", "2"}]}], ")"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"x_", ",", "\[Sigma]_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"\[Sigma]", "/", "4"}], 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x", "4"], "-", 
         RowBox[{"4.0", 
          SuperscriptBox["x", "2"]}], "+", "8"}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"IntegrationConstant", "[", "\[Sigma]_", "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", 
         SuperscriptBox["\[Sigma]", "2"]}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ArcTan", "[", "1", "]"}], "+", 
          RowBox[{"3", "/", "2"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "\[Alpha]", " ", 
        RowBox[{"Log", "[", "8", "]"}]}]}]}], ";"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Multiplicative", " ", "noise", " ", "2", " ", "added", " ", "to", " ", 
      "potential", " ", "1"}], ":", " ", 
     RowBox[{"this", " ", "works"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"U", "[", "x_", "]"}], ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "^", "4"}], "/", "4"}], "-", 
         RowBox[{
          RowBox[{"x", "^", "2"}], "/", "2"}]}], ")"}], " ", "+", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "a"}], " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "b"}], " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"x", "+", "d"}], ")"}], "^", "2"}]}], "]"}]}], ")"}]}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"x_", ",", "\[Sigma]_"}], "]"}], ":=", 
      RowBox[{"\[Sigma]", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"x", "^", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"IntegrationConstant", "[", "\[Sigma]_", "]"}], ":=", "2"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"a", "=", "0.1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", "50"}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", "0"}], ";"}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Additive", " ", "noise", " ", "added", " ", "to", " ", "potential", " ", 
     "2", " ", "with", " ", 
     RowBox[{"perturbation", ":", " ", 
      RowBox[{"does", " ", "NOT", " ", "work"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"U", "[", "x_", "]"}], ":=", 
      RowBox[{"h", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"2", " ", 
             RowBox[{"x", "/", 
              RowBox[{"s", "[", "x", "]"}]}]}], ")"}], "2"]}], ")"}], "2"], 
       " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"a", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "b"}], " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"x", "+", "d"}], ")"}], "^", "2"}]}], "]"}]}]}], 
        ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "[", "x_", "]"}], ":=", 
      RowBox[{
       RowBox[{"c", " ", 
        RowBox[{"HeavisideTheta", "[", 
         RowBox[{"-", "x"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "-", "c"}], ")"}], " ", 
        RowBox[{"HeavisideTheta", "[", "x", "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"x_", ",", "\[Sigma]_"}], "]"}], ":=", "\[Sigma]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"IntegrationConstant", "[", "\[Sigma]_", "]"}], ":=", "0"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"a", "=", "0.3"}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", "200"}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", "0.2"}], ";"}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Additive", " ", "noise", " ", "added", " ", "to", " ", "potential", " ", 
     "2", " ", "without", " ", 
     RowBox[{"perturbation", ":", " ", 
      RowBox[{"does", " ", "NOT", " ", "work"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"U", "[", "x_", "]"}], ":=", 
      RowBox[{"h", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"2", " ", 
             RowBox[{"x", "/", 
              RowBox[{"s", "[", "x", "]"}]}]}], ")"}], "2"]}], ")"}], 
        "2"]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "[", "x_", "]"}], ":=", 
      RowBox[{
       RowBox[{"c", " ", 
        RowBox[{"HeavisideTheta", "[", 
         RowBox[{"-", "x"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "-", "c"}], ")"}], " ", 
        RowBox[{"HeavisideTheta", "[", "x", "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"x_", ",", "\[Sigma]_"}], "]"}], ":=", "\[Sigma]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"IntegrationConstant", "[", "\[Sigma]_", "]"}], ":=", "0"}], 
     ";"}], "\[IndentingNewLine]", " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Additive", " ", "noise", " ", "added", " ", "to", " ", "simplified", " ",
      "version", " ", "of", " ", "potential", " ", "2", " ", "without", " ", 
     RowBox[{"perturbation", ":", " ", 
      RowBox[{"this", " ", "works"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"U", "[", "x_", "]"}], ":=", 
      RowBox[{"h", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"2", " ", "x"}], ")"}], "2"]}], ")"}], "2"]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"x_", ",", "\[Sigma]_"}], "]"}], ":=", "\[Sigma]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"IntegrationConstant", "[", "\[Sigma]_", "]"}], ":=", "0"}], 
     ";"}], " ", "*)"}], "\[IndentingNewLine]", " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Ps", "[", 
      RowBox[{"x_", ",", "N_", ",", "\[Sigma]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"N", "/", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{"x", ",", "\[Sigma]"}], "]"}], "^", "2"}]}], " ", 
      RowBox[{"Exp", "[", 
       RowBox[{"2", " ", 
        RowBox[{"Int", "[", 
         RowBox[{"x", ",", "\[Sigma]"}], "]"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Uq", "[", 
      RowBox[{"x_", ",", "N_", ",", "\[Sigma]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"g", "[", 
          RowBox[{"x", ",", "\[Sigma]"}], "]"}], "^", "2"}], "/", "N"}], 
       "]"}], "-", 
      RowBox[{"2", 
       RowBox[{"Int", "[", 
        RowBox[{"x", ",", "\[Sigma]"}], "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Int", "[", 
      RowBox[{"x_", ",", "\[Sigma]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"f", "[", "x", "]"}], "+", 
           RowBox[{"\[Alpha]", " ", 
            RowBox[{"g", "[", 
             RowBox[{"x", ",", "\[Sigma]"}], "]"}], " ", 
            RowBox[{
             RowBox[{"g", "'"}], "[", 
             RowBox[{"x", ",", "\[Sigma]"}], "]"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"g", "[", 
            RowBox[{"x", ",", "\[Sigma]"}], "]"}], "^", "2"}], ")"}]}], ",", 
        "x"}], "]"}], "+", 
      RowBox[{"IntegrationConstant", "[", "\[Sigma]", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "x_", "]"}], ":=", 
     RowBox[{"-", 
      RowBox[{
       RowBox[{"U", "'"}], "[", "x", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]", "=", "0"}], ";", " ", 
    RowBox[{"(*", " ", "ito", " ", "*)"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Stepsize", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Probability", " ", "distribution", " ", "and", " ", "probabilistic", 
      " ", "landscape", " ", "for", " ", "\[Sigma]"}], "=", "0.2"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TrapezoidalRule", "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"v", "-", "u"}], ")"}], "*", "0.5", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Ps", "[", 
         RowBox[{"u", ",", "N", ",", "\[Sigma]"}], "]"}], "+", 
        RowBox[{"Ps", "[", 
         RowBox[{"v", ",", "N", ",", "\[Sigma]"}], "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Area1", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"TrapezoidalRule", "[", 
        RowBox[{"i", ",", 
         RowBox[{"i", "+", "Stepsize"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"-", "2"}], ",", "2", ",", "Stepsize"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nvalue", "=", 
     RowBox[{"NSolve", "[", 
      RowBox[{
       RowBox[{"Area1", "\[Equal]", "1"}], ",", "N"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Print", "[", "Nvalue", "]"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nstra\[Sigma]02", "=", 
     RowBox[{"N", "/.", 
      RowBox[{"Nvalue", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "Nstra\[Sigma]02", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Probability", " ", "distribution", " ", "and", " ", "probabilistic", 
      " ", "landscape", " ", "for", " ", "\[Sigma]"}], "=", "0.5"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TrapezoidalRule", "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"v", "-", "u"}], ")"}], "*", "0.5", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Ps", "[", 
         RowBox[{"u", ",", "N", ",", "\[Sigma]"}], "]"}], "+", 
        RowBox[{"Ps", "[", 
         RowBox[{"v", ",", "N", ",", "\[Sigma]"}], "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Area1", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"TrapezoidalRule", "[", 
        RowBox[{"i", ",", 
         RowBox[{"i", "+", "Stepsize"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"-", "2"}], ",", "2", ",", "Stepsize"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nvalue", "=", 
     RowBox[{"NSolve", "[", 
      RowBox[{
       RowBox[{"Area1", "\[Equal]", "1"}], ",", "N"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Print", "[", "Nvalue", "]"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nstra\[Sigma]05", "=", 
     RowBox[{"N", "/.", 
      RowBox[{"Nvalue", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "Nstra\[Sigma]05", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Probability", " ", "distribution", " ", "and", " ", "probabilistic", 
      " ", "landscape", " ", "for", " ", "\[Sigma]"}], "=", "0.5"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TrapezoidalRule", "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"v", "-", "u"}], ")"}], "*", "0.5", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Ps", "[", 
         RowBox[{"u", ",", "N", ",", "\[Sigma]"}], "]"}], "+", 
        RowBox[{"Ps", "[", 
         RowBox[{"v", ",", "N", ",", "\[Sigma]"}], "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Area1", "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"TrapezoidalRule", "[", 
        RowBox[{"i", ",", 
         RowBox[{"i", "+", "Stepsize"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"-", "2"}], ",", "2", ",", "Stepsize"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nvalue", "=", 
     RowBox[{"NSolve", "[", 
      RowBox[{
       RowBox[{"Area1", "\[Equal]", "1"}], ",", "N"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Print", "[", "Nvalue", "]"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nstra\[Sigma]1", "=", 
     RowBox[{"N", "/.", 
      RowBox[{"Nvalue", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "Nstra\[Sigma]1", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"U", "[", "x", "]"}], ",", 
       RowBox[{"g", "[", 
        RowBox[{"x", ",", "0.5"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<U(x)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "1.5"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Potential function\>\"", ",", " ", "\"\<Noise\>\""}], 
       "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Ps", "[", 
         RowBox[{"x", ",", "Nstra\[Sigma]02", ",", "0.2"}], "]"}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Ps", "[", 
         RowBox[{"x", ",", "Nstra\[Sigma]05", ",", "0.5"}], "]"}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Ps", "[", 
         RowBox[{"x", ",", "Nstra\[Sigma]1", ",", "1"}], "]"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<x\>\"", ",", "\"\<\!\(\*SubscriptBox[\(P\), \(s\)]\)(x)\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Sigma]=0.2\>\"", ",", "\"\<\[Sigma]=0.5\>\"", ",", 
        "\"\<\[Sigma]=1\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Uq", "[", 
         RowBox[{"x", ",", " ", "Nstra\[Sigma]02", ",", "0.2"}], "]"}], "]"}],
        ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Uq", "[", 
         RowBox[{"x", ",", " ", "Nstra\[Sigma]05", ",", "0.5"}], "]"}], "]"}],
        ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"Uq", "[", 
         RowBox[{"x", ",", " ", "Nstra\[Sigma]1", ",", "1"}], "]"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Sigma]=0.2\>\"", ",", "\"\<\[Sigma]=0.5\>\"", ",", 
        "\"\<\[Sigma]=1\>\""}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<x\>\"", ",", "\"\<\!\(\*SubscriptBox[\(U\), \(q\)]\)(x)\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", "15"}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.843048721796932*^9, 3.843048811529647*^9}, {
   3.843048959070261*^9, 3.843048961220512*^9}, {3.8430490123501916`*^9, 
   3.8430490748633847`*^9}, {3.8430493816867437`*^9, 3.843049481934209*^9}, {
   3.8430495125394754`*^9, 3.843049555231675*^9}, {3.8430498046015406`*^9, 
   3.843049810134755*^9}, {3.84305406667911*^9, 3.843054139209078*^9}, {
   3.8430551347907333`*^9, 3.8430551464731436`*^9}, {3.843055185776373*^9, 
   3.8430552036214275`*^9}, {3.84306127678403*^9, 3.8430613751126957`*^9}, 
   3.8430614526390047`*^9, {3.843061534500166*^9, 3.843061644539991*^9}, {
   3.843061709660263*^9, 3.843061740475904*^9}, {3.843062178367339*^9, 
   3.843062195590841*^9}, {3.843062261832857*^9, 3.8430622659587913`*^9}, {
   3.843062359087266*^9, 3.843062364917691*^9}, {3.8430629329178667`*^9, 
   3.843063004704525*^9}, {3.8430630572780075`*^9, 3.8430630857938004`*^9}, {
   3.8430631630843143`*^9, 3.8430632026864977`*^9}, {3.8430633280354404`*^9, 
   3.8430633841364937`*^9}, {3.843063422698432*^9, 3.843063438049673*^9}, {
   3.8430635074740973`*^9, 3.843063529578019*^9}, {3.843063772833369*^9, 
   3.843063784073327*^9}, {3.8430638372304983`*^9, 3.843063859802165*^9}, {
   3.8430640294607153`*^9, 3.8430640473868003`*^9}, {3.843064124960764*^9, 
   3.8430641575755816`*^9}, {3.843140498454243*^9, 3.8431405251913986`*^9}, {
   3.8431405713530436`*^9, 3.843140623137641*^9}, {3.8431406645902853`*^9, 
   3.8431406651976604`*^9}, {3.843140714590803*^9, 3.8431407179578037`*^9}, {
   3.843140872848489*^9, 3.8431409122083707`*^9}, {3.8431409570614758`*^9, 
   3.843140972312715*^9}, {3.843141401282506*^9, 3.8431414368750734`*^9}, {
   3.8431417176269007`*^9, 3.8431417378820868`*^9}, {3.843141789049528*^9, 
   3.8431417896929016`*^9}, {3.8431419770649166`*^9, 3.843142016915099*^9}, {
   3.8431431813449335`*^9, 3.843143184242197*^9}, {3.84314358622303*^9, 
   3.843143586416396*^9}, {3.8431437086042995`*^9, 3.843143709205037*^9}, {
   3.8431468561482673`*^9, 3.8431469181036882`*^9}, {3.843147052347464*^9, 
   3.8431470536078205`*^9}, {3.843147325497282*^9, 3.843147331892208*^9}, {
   3.8431473811773806`*^9, 3.843147410800373*^9}, {3.843148046907013*^9, 
   3.843148053354303*^9}, {3.8431965679459724`*^9, 3.8431965797973003`*^9}, {
   3.8433999896135507`*^9, 3.8433999962392445`*^9}, {3.8434001621248517`*^9, 
   3.8434002022563267`*^9}, {3.843400335718717*^9, 3.843400394172572*^9}, {
   3.8434004440358715`*^9, 3.843400444606344*^9}, {3.843400486798745*^9, 
   3.8434005736311083`*^9}, {3.8434008278201923`*^9, 
   3.8434008637176895`*^9}, {3.8434009136628895`*^9, 3.843400989682361*^9}, {
   3.8434010249200554`*^9, 3.843401029954728*^9}, {3.84340112770879*^9, 
   3.8434011317553144`*^9}, {3.8434011853728256`*^9, 
   3.8434012053251195`*^9}, {3.84340126644923*^9, 3.843401280732747*^9}, {
   3.84340143361271*^9, 3.8434014610600195`*^9}, 3.8434016459350834`*^9, {
   3.8434016914234056`*^9, 3.843401696403057*^9}, {3.8434018056191673`*^9, 
   3.8434018100535903`*^9}, {3.843401841028515*^9, 3.8434018486730814`*^9}, {
   3.843401881915861*^9, 3.843401912466992*^9}, {3.8434019445351114`*^9, 
   3.843401976870541*^9}, {3.8434020271122885`*^9, 3.843402042924737*^9}, {
   3.8434020912628183`*^9, 3.8434021140125513`*^9}, {3.843402191267525*^9, 
   3.8434022082259097`*^9}, {3.8434023008535233`*^9, 3.843402309793107*^9}, {
   3.843402488845359*^9, 3.8434025752037544`*^9}, {3.8434026103972893`*^9, 
   3.843402665130147*^9}, {3.8434030021988153`*^9, 3.843403035839032*^9}, {
   3.843403084333565*^9, 3.8434030973245077`*^9}, {3.8434031420781717`*^9, 
   3.843403150619295*^9}, {3.8434032303517604`*^9, 3.843403239628843*^9}, {
   3.843403501539333*^9, 3.843403512638443*^9}, {3.843403604484538*^9, 
   3.8434036059147487`*^9}, {3.843403661198036*^9, 3.843403670401213*^9}, {
   3.843404193587187*^9, 3.843404225167303*^9}, {3.843404590509097*^9, 
   3.843404599794519*^9}, 3.843408652450512*^9, {3.8434579939077682`*^9, 
   3.843458019429901*^9}, {3.8434582093718295`*^9, 3.8434582124130335`*^9}, {
   3.843459071112427*^9, 3.843459078334961*^9}, {3.84349760087752*^9, 
   3.8434976206781874`*^9}, {3.843497701771928*^9, 3.8434977030664268`*^9}, {
   3.8434977585913677`*^9, 3.8434977912187862`*^9}, {3.843497953321662*^9, 
   3.8434979537919135`*^9}, {3.843498008262472*^9, 3.843498014719183*^9}, {
   3.8434981332759743`*^9, 3.8434981947533393`*^9}, {3.843498698828354*^9, 
   3.843498715673745*^9}, {3.843498852111203*^9, 3.8434988967466774`*^9}, {
   3.843498946501889*^9, 3.8434989571853113`*^9}, {3.8434992974570413`*^9, 
   3.8434993365639954`*^9}, {3.8435000495099473`*^9, 3.843500064559704*^9}, {
   3.8435001615765038`*^9, 3.8435001717860365`*^9}, {3.843500223815426*^9, 
   3.843500224381898*^9}, {3.8435003179497623`*^9, 3.8435003182913866`*^9}, 
   3.8435003641644917`*^9, 3.8435005111728516`*^9, {3.843500541737461*^9, 
   3.843500543384716*^9}, {3.8435012852965736`*^9, 3.8435013059793005`*^9}, {
   3.84350143966605*^9, 3.8435014492574654`*^9}, {3.8435015341567574`*^9, 
   3.8435015345933485`*^9}, {3.8435015721240234`*^9, 
   3.8435016080656233`*^9}, {3.843501657100506*^9, 3.8435016692172766`*^9}, {
   3.843501851995649*^9, 3.843501897479109*^9}, {3.843502028083973*^9, 
   3.8435021086541815`*^9}, {3.843502283488124*^9, 3.8435022896759357`*^9}, 
   3.8435023381082325`*^9, {3.8435023682917843`*^9, 3.8435024125322123`*^9}, {
   3.8435024533383036`*^9, 3.8435024535548153`*^9}, {3.843502568947071*^9, 
   3.8435025990113087`*^9}, {3.84350263497139*^9, 3.843502636496994*^9}, {
   3.843502708627409*^9, 3.8435027091991725`*^9}, {3.8435034286220016`*^9, 
   3.843503430466628*^9}, {3.843530585305415*^9, 3.8435306007198944`*^9}, {
   3.8435307221039686`*^9, 3.8435307256870165`*^9}, {3.8435307727794924`*^9, 
   3.8435307864063735`*^9}, {3.8435308226929674`*^9, 
   3.8435308882195773`*^9}, {3.8435309305143275`*^9, 
   3.8435309594082565`*^9}, {3.84353113869593*^9, 3.8435311436108093`*^9}, {
   3.84353121302404*^9, 3.8435312136578393`*^9}, {3.8435312484457445`*^9, 
   3.8435312487690268`*^9}, {3.843531652962722*^9, 3.8435316532108183`*^9}, {
   3.8435316852245293`*^9, 3.843531685387892*^9}, {3.8435319610247183`*^9, 
   3.8435319610758467`*^9}, {3.8435320007198005`*^9, 3.843532000861723*^9}, {
   3.843532032774499*^9, 3.8435320333140383`*^9}, {3.8435322490587797`*^9, 
   3.843532266647601*^9}, {3.8435323707449784`*^9, 3.8435323723151836`*^9}, {
   3.8435324343601274`*^9, 3.84353246296342*^9}, 3.8435325169779997`*^9, 
   3.8435328016439643`*^9, {3.8435329072932415`*^9, 3.8435329125041366`*^9}, {
   3.84353297775378*^9, 3.8435329824116526`*^9}, 3.843533049323311*^9, {
   3.8435331587710943`*^9, 3.8435331636150193`*^9}, 3.8435332832567883`*^9, {
   3.843533371965775*^9, 3.843533391943922*^9}, {3.8435334965889673`*^9, 
   3.8435335153176317`*^9}, {3.8435337986591606`*^9, 
   3.8435338071506066`*^9}, {3.8435339065025268`*^9, 
   3.8435339086867437`*^9}, {3.8435339767178793`*^9, 
   3.8435340292384596`*^9}, {3.84353406453051*^9, 3.843534065002819*^9}, {
   3.843534527495163*^9, 3.8435345286277385`*^9}, {3.8438822184368343`*^9, 
   3.8438822188615103`*^9}, {3.84448115077291*^9, 3.8444811773392086`*^9}, {
   3.8444814138518443`*^9, 3.844481450978634*^9}, {3.8444814950393577`*^9, 
   3.8444815164222403`*^9}, {3.844481684152249*^9, 3.8444816867947545`*^9}, {
   3.844481926274392*^9, 3.8444819467102723`*^9}, {3.8444819901049094`*^9, 
   3.844482032726*^9}, {3.844482074171483*^9, 3.8444820750874534`*^9}, {
   3.8444821115646524`*^9, 3.844482142104204*^9}, {3.8444823966131845`*^9, 
   3.844482417305264*^9}, {3.8444824726094303`*^9, 3.8444824804285235`*^9}, {
   3.8444825147084365`*^9, 3.8444825275828485`*^9}, {3.8444826638051095`*^9, 
   3.844482681280535*^9}, {3.8444827264078846`*^9, 3.8444828114043097`*^9}, {
   3.8444828442265477`*^9, 3.84448284807395*^9}, {3.8444828981951094`*^9, 
   3.844482923655135*^9}, {3.8444829836021643`*^9, 3.8444830177674227`*^9}, {
   3.844483061879918*^9, 3.84448306797136*^9}, {3.8444831142131267`*^9, 
   3.844483114477133*^9}, {3.8444831494531393`*^9, 3.844483201497509*^9}, {
   3.844483285439658*^9, 3.844483291550645*^9}, {3.844483398899845*^9, 
   3.844483561877036*^9}, {3.84448362509299*^9, 3.8444836327539296`*^9}, {
   3.8444842590613413`*^9, 3.8444842871418333`*^9}, {3.844484347284728*^9, 
   3.844484348170931*^9}, {3.8444849731585417`*^9, 3.8444849911382556`*^9}, {
   3.8444853232099147`*^9, 3.8444853322369385`*^9}, {3.8448588477936087`*^9, 
   3.8448589167982035`*^9}, {3.844858956017318*^9, 3.8448592674680004`*^9}, {
   3.844859308307887*^9, 3.8448593685997105`*^9}, {3.844860069822585*^9, 
   3.844860100916226*^9}, {3.84486029432084*^9, 3.844860345710207*^9}, {
   3.8448605827228527`*^9, 3.844860710315491*^9}, {3.844860765032699*^9, 
   3.844860765427606*^9}, {3.8448607959908075`*^9, 3.8448608045245066`*^9}, {
   3.8448626587104397`*^9, 3.8448626785642443`*^9}, {3.844862711775959*^9, 
   3.844862727475216*^9}, {3.8448780160203705`*^9, 3.8448780303168135`*^9}, {
   3.8448793535662413`*^9, 3.844879360964369*^9}, {3.84535914223145*^9, 
   3.845359176881387*^9}, {3.845359208409219*^9, 3.8453592839089394`*^9}, {
   3.845359356094475*^9, 3.845359364574581*^9}, {3.8453594647930393`*^9, 
   3.8453594704632826`*^9}, 3.8453597374952936`*^9, {3.8453598281271067`*^9, 
   3.845359828218861*^9}, {3.8453605454821987`*^9, 3.845360548221759*^9}, {
   3.845360578921519*^9, 3.8453605819444537`*^9}, {3.8453608175352526`*^9, 
   3.8453608303045335`*^9}, {3.845361860604286*^9, 3.8453619048244004`*^9}, {
   3.8454405075561438`*^9, 3.8454405404498286`*^9}, 3.845440600707251*^9, {
   3.8454406450349445`*^9, 3.8454406476541157`*^9}, {3.845440782621955*^9, 
   3.845440782905284*^9}, {3.8454411202660713`*^9, 3.8454411496054325`*^9}, {
   3.845441212706193*^9, 3.8454412147015142`*^9}, {3.845441288474907*^9, 
   3.845441303976903*^9}, {3.84544138666074*^9, 3.8454413899848557`*^9}, {
   3.8454419304199696`*^9, 3.845441931116558*^9}, {3.8454419645147004`*^9, 
   3.84544196622281*^9}, {3.845451684610124*^9, 3.8454517276963387`*^9}, {
   3.8454518681733294`*^9, 3.8454519057399025`*^9}, {3.845451944405696*^9, 
   3.845452013363753*^9}, {3.8454520436598716`*^9, 3.8454520586124177`*^9}, {
   3.845452129467127*^9, 3.8454522279751797`*^9}, {3.8454523148473744`*^9, 
   3.845452362647931*^9}, {3.845452524641465*^9, 3.845452526902238*^9}, {
   3.845452588863244*^9, 3.8454525890182114`*^9}, {3.845452665327428*^9, 
   3.845452681592819*^9}, {3.845452727498255*^9, 3.845452884257818*^9}, {
   3.8454529253405066`*^9, 3.8454529655603485`*^9}, {3.8454530093443003`*^9, 
   3.845453080267774*^9}, {3.8454531264915347`*^9, 3.8454531589788837`*^9}, {
   3.8454533217036858`*^9, 3.8454533475318456`*^9}, {3.845453386256919*^9, 
   3.845453417205553*^9}, {3.845453681428142*^9, 3.845453687926771*^9}, {
   3.845453732701044*^9, 3.845453753318904*^9}, 3.845454065696344*^9, {
   3.8454541050329885`*^9, 3.845454109506027*^9}, {3.8454544152257814`*^9, 
   3.8454544163009696`*^9}, {3.845454518734926*^9, 3.8454545205741787`*^9}, {
   3.84545455720296*^9, 3.845454631473445*^9}, {3.845454673209027*^9, 
   3.845454717018831*^9}, {3.845454776930116*^9, 3.8454548808446803`*^9}, {
   3.845454919058786*^9, 3.8454549322139406`*^9}, {3.845455024533165*^9, 
   3.8454550825374193`*^9}, {3.8454551706993637`*^9, 3.845455187002659*^9}, {
   3.8454553029360676`*^9, 3.8454553044260693`*^9}, {3.8454553562876415`*^9, 
   3.845455359405318*^9}, {3.8454555055614347`*^9, 3.845455558028158*^9}, {
   3.846066133172062*^9, 3.84606614304245*^9}, {3.846066236206811*^9, 
   3.846066236329666*^9}, {3.8460663249866343`*^9, 3.8460663521702213`*^9}, {
   3.8471641232942405`*^9, 3.847164134178413*^9}, {3.8471646283283615`*^9, 
   3.8471646392045383`*^9}, {3.847164718614648*^9, 3.847164731214058*^9}, {
   3.847164778857955*^9, 3.847164779211435*^9}, {3.8515261668630066`*^9, 
   3.85152618295197*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"86e3bc32-ae74-4024-878c-1ad7b2496cc2"],

Cell[CellGroupData[{

Cell[BoxData["2.9244226334379124`*^-7"], "Print",
 CellChangeTimes->{3.8471647971277113`*^9, 3.851526210930357*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"9cedf296-e9b5-475e-9ac6-fe16958f7185"],

Cell[BoxData["0.023348875150448`"], "Print",
 CellChangeTimes->{3.8471647971277113`*^9, 3.85152621095334*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"b4798776-65d1-49be-bb10-25de1b51dd7c"],

Cell[BoxData["0.23710074509843088`"], "Print",
 CellChangeTimes->{3.8471647971277113`*^9, 3.8515262109572716`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"d3bc82a5-b159-46f2-932c-9f9eb2e21990"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
5sXQTfT//9/9f34eR80=
          "]]}, Annotation[#, "Charting`Private`Tag$3363#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQrWcv9ur////7GcDggX1Q+9nVxvEIfvn5ltz0ff/g
/CtXuF8dTPwL58seyBcxl/kD52/NPsLKf/cXnJ/QY/jhZtNPOP/HpOqO/fY/
4PzFfPckZzz8BufP8TIsutz5Fc5vykms0PT8AudXM68qL3r7Cc5PbDivcm3F
Rzh/6t6nM+ZkfYDzd93X4Fmj9A7OVxZwcAqZ9xrO36TVkfXo8Qs4//7RjQpm
Zs/g/Kc6U432b3sM5wvWrTTTY3wI5+uYvddZ+vkOnN/s8vbCzorrcL5oyLoJ
keKXEPZ9O8p/QuUUnL/09tPely374PzYQJktt5OXwPk7uaqvHipdbA/jmz5i
lGuM2A/nK3/Y/dPq0Ek433PxzbN+EZfgfFdfIeavW6/D+f3x1xsMtt+B84/7
yfIGCD2E898qitZdmvUYzi8t0U7sF3sG51+/IxCUduIFnJ9QafOc3ec1nH9Y
27zrMOs7OF+Nc8+LJR4f4HzZPdmurB0f4XyGX0wrix59gvO/B+6NO6r6Bc6/
bRIvrdryFc4vCBcQVLrzDc6XnPIkgkX2B5y/LnrB8s8VP+H8cNt6jxN7f8H5
G+Nylaz+/Ibzf3A5M+8M/QvnB120NpOd8Q/Od+DQnMDn8x/Oh+YXOB8AzIAY
Yg==
          "]]}, Annotation[#, "Charting`Private`Tag$3363#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"U(x)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.999999918367347, 1.999999918367347}, {-0.5, 1.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Potential function\"", "\"Noise\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.847164799487398*^9, 3.8515262118861084`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"de1f20a4-9fde-495a-a411-608241eed881"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Lgl11Yd+3w9bJXR067Oe8iRhA1dqf8fzdcL8nqwPx91JWPS0LuQ2xRaB7jAL
SF8jIXVZZs8TdzKisLF7u4AzCdVDEyeoEvcS1bxbrxx0IKHberZFCjcl0eq9
wl66CyQsuepZYTdOTbxV8zxmy5KEk0r2GWp09MTwxVWpBRMSfi6ZbfB5zkj8
wGVZMaZPwlwVtcVGHRZi2Ylv57p0SOjHqcJtFcJGHHDhWqzVJCFf/LUkOZaD
RFKkTzACCYnuq6xcUxzE3zwlUydVSGgf43Vw+iIPsSOFSq9BgYSPbx1clZLi
I5bLnMk0kyYh94aVPss1AWJO4TOWfnESfrzsyzpHEiK+1+y86ShEwgPfdlhz
ekWJEQ08HdOHSKjTf/ijP98R4n1Le6WbnCS8Jc2R398qRXQdSY3dYCNhQp56
x6S/LNH66t9Nf0YSzvxmS2QckieeXpWzoaUlYdYTkUMKT44SVfy8SiLId/vb
4eUpQpQyUYzupyDH9hpWRvsEELZUiezR5EFvSWu4ON60v/6KGpHqkM6kyNIa
JqVNenPEnCAup4brZvxdw4zL7crq9FrEUdm2T4qTa7h3Q+XhfL02seU7J9OP
kTU8OfL4TssfXWKxls0Nzf419A+NG/tyWZ+Y2ZjUWtu5hiqfm30bJIyIb85O
KZq0rO3OozzCfQcTYtiodExP3Rru38MteGnIjOhzzWPD7tcafjvKG9X70ZLo
slZo/adkDe0HGZ0FG88RLf3J0K1oDc/dwL4IUxuiNv1JflLeGv459YquMdGO
ePT54wf3s9fwmJXuiaAeB6IQb/M41ac1fCsfVfjA7CKRLe3gqfCUNQx7DdtJ
PJeJe+Wt0w8krOHx6tvmSUpXifNFCQyv49aQOFb6WTrnOnHw5G9XoRdryOt2
o8Ov9gaxoUmi+WPEGvIsOrzfXrtJLLJyl5d/vIbBLp9mk51uEz+O5T8vDFzD
Vt6ncsh9hxjrurWm7reGfvtdSiwF7hKDSSesqr3X0Cgg5KVVwH2iZ0BwkaHH
GlJ9uEXW8N6feJGh4VDX9TWEVJuEe98fEE1fsPnbuKzhC6uZb8dZgogafGdH
JxzXcK7i9dmU9GCiXPobLVebNZR6zehF+/QxkU9hLHXl7Bqa/2D8cb0ynMj0
U5zunukaHplXcOqReEbc1r5+lcJgDYe5g6POiEcRZ5pzGx7rrGGgTefq9Pnn
xN5zGzJsmmv4lO2d7Numl8SacYiKJa6h2A/bhpFHscSC64Er/MprePQ5mXRn
6Gti6nqNRZr8Grrde92Z6vaO+OIBc6GM1BoqlNKHLOi8Jz7cZ85TILaGG+eZ
07fNkog3X8b5guDu+fZN+K6/SiHa8w8PVf63hsYC+bSPudOIhh9FNPQ51nA+
dc52YugjERSvJrez7p5fWuZy23wGUQqzqc/vW8NcvoApO/FsIo/O2uUx6jX8
kDZPeZk6h0jfqlp3Ze8aOp7xZpo/+JW4YR0gtbS5ikd5zl1qss4nTk78ivBe
W8WV2fxos4FvxE63fUt7Flex+KcEpXZCEbFyw9gsZGYVWSxlny5+RGLuw5h8
5t+ryCbrPhIXUEJMZBzgjBlexbAz9ay6VmXEyHNArdy3ilN9snbSFhXEgA/v
lrs7VpE7zEM6J/AX0X1lz4h38yoGiSybOU1VE+1PODRy161i9l52SpXQOqLx
0/KiospVrMu+VfjMpZF4ok84/XzJKvrE8o29O9VMlBN/9HL7+yrSvBcs0t/b
ShS4Pfnwbd4qylcwTuF4G5G1TMddLXsVfVsdGT+udhD3Mn+0Gf64ipxzJ3wP
KHcTF60Z9AJSVjF4Z5F4NruXOJJ2TUUwYRXbplhcjjgOEFtWG0TL41bx37SK
n9HHIWKphswBpxerqOcpzMmnPUJ83784l/J4FXVTYmOiF8eJkYdN+7WDVnFf
jNnoOM0kMcDza82k3ypeoKgYEDeYIrqXHywI8VnFS3e/SF2qniHas3glH769
ip+5+u4t+8wRjS90R9a67eqH97Og4gLxxEcVv6tXds8j6ShrUMMikV9ryyrD
dhX3nODgF3RdJTJHXjhlcG4V/3v0hJbCh0QkG0TFebNVLIoJVqT4ukGcP8Iv
+MxwFSmtKdOKebeIQ14BzHKnV3Gr4YY3F+4QmypGt1q0VlES/NJfn94Dxaxa
0zfVVjFeOeeQXsdeePeJuvKr4ipeDz1UpW1EBRHrzjnmMqvYe5L4a+QkDfid
rHm3dngVZypiRUud6MAt6kh4jPAqrhZ9fkSfzQC2Q2E+ynyrmEfdFMUjwQSG
krPOPVyr+HbqAmj/ZQY1bwNznwOraFdwo43HlhV497PK/qDbzZctU5b07gAw
2t08dIFyd/1wPXvQTXbY/txGv7OzgkfrmuQrXDhhdkNx/e3GCp479eLhhRBu
GNB+OaG2soIlPKQ80Zb/oCGa1Do8t4J26pp9rEJ88HP4bEnA1AoWVXXlanvy
wxsfnvjywRW0Zak8cPKaEIRX3Qtx6lnBG563nJrYRMD3wOBtqvYVTJ9j0DzQ
Iwqu9mqOqY0rKLGX84FGqThcyEwwOlWzgtf4j1z51HAE9Df3wp/y3fhRqc8q
9kgBUcdRIhRX8Jco2B2QloH/RkWo63JX8JnA70raRjlgkAlevpq5gpd7Sfub
NBRg8+6f4X3pK+j81/+1dqsizFTrNmYkreC7ue8vJO8fg76Dn4oM3q7gYuXa
rKWOMtQ57Euff7WCrEo64d/lj0NRluvLZ9Er+HeFPclBjQDxurLurSErePpV
PyFtTA2E6HVrmh7u1oMlrWOB8QR8rLUXaLi/goUTRywOn9EAuTAf71rvFbSR
Nv7l/FoTCs9Et1R5rOCRc5YizeQn4cS+z4cr3XbrfXx5+7mfNtTUVwSUXVlB
bY/GHdJ+HejWX5P7abdb/2Orr+ZCzoAtE/Pj79YruB0U2m9xTR8mG8VGCyxW
cEbl622KY4ZAMrSKytFbwZUGi4M9F43Bj+XmdNapFbzSKMNEH2MC1C2PNTI0
VnC6NOnPqV5TOGjyY+mD8gpq3eRzqoizgDdsHadTFFaw9YAk5T7usyDcNpuY
KL2CS3R/9G9lWYGCGZ/pG+EVpO6tuXBM4AIUHVD+FMe3glQnH877ktmCRocR
xSvuFeSQvSl9fssWjC0e5EaxrOCD6EsOagIO0MMez/CMYQVdl3vsvpx2BLuu
XMdw6hVU+FgydifQCdzOTuwP2VpG6YV7F5UknYHEuXM1iLSMbvZjpr3xl8Gv
h73iwdIyniSX5pPguwJPz+l4+P5Zxv0NFPbhTq5wkMe+3mdsGcObPfiq97vB
mz5v4TuDyyg3cyw5eu8NyDj/qf1m+zLOtIfWZJLfhKOHKiRvNC3jKXbdUl6O
W/BjoD/QtXYZRVrGVWNVPKDOhuno5ZJlTFZKqhL/5AmmfGLhF4uWcdyNqBW6
6QW9Q2oTDvnLeJOOyyrsvDdM2bm/uPB5GekFucZOm94Dd4HHs+c+LGPkVY2f
D6Z9YX0k8eTZxGV89sieW/y0H9A4tq+avFrGIqZcm9X9ARAhNKtvFL2M0bSa
q3J0D4B9nCpV/+ky5qj07J+kewgiF5UsdAKXUZZ3398nMkGQIWKUedJvGU+k
PtBzM38ER39fptb0WUYqc4P4jJBg0HKOyyfeWMaXbqF2OlyPoU4sl0n16jLS
LFzkzfUKA9M/dZeULy2j55k3ri8nnoCjyza7wvllZH9z/HnQnQgIuGrnJa6z
jBLWWR35c1EwEH4hvlBjGVekAr7rbESDSva54tPEZUwUPzgwwvwCFlfMaFzl
lzF/hyXlr0MM6HOYSOxILuPskvxN7YRXkK5iaBghtoyHlp3rvGZiwe6+bsyX
/5bxu3Uet2HGayhK0C7S4FhGjZ9tP5aE3wJHueZQG+sytlp6/vfV/B000YDY
GvUyXiHq7VteTQC1SPmC44tLGNadf0vmfTLE58r01c0sYbaMENNwUgqQOiTJ
Lvxewmvy2RS52amQxS12yq9vCYcPkGiWp9KAgSh8laVzCSuiVPS32D+Cs61A
xPvmJYzzpTtlZ/gJeJN5usorl9CWdKD67lgGeP/i3DQrWcLfbvqiV/myoOPP
Qb7f35dwrHBWcbotC8KlWJxps5fQuG/rQ6DRF9jOpyTpxS2hetjwje7XX8Gq
Zy/P4PNd/RwuYdUHeZC3uQNuEUtooWgad8otH1zVNx5FBu7qpbk0Mdp/gxqH
tY+Cfkv4Q/hxPt+lQhAJWm7M9V7CBkiOD7v1HfprZtk7ry+hpOLz2wJpP0Dp
7/RxZ5clPOghLpXU9BOimf7YrDsuodYnzw8vyYrhjOloKrfVEuKm7GNqKIGi
/s5jtppL+I/Zl69xpQw4yNrPLRB3/3/JnJs+qxxuCbTcD1BewjWTaw03r1eA
xKW6X0lSS1hX+1mIa7sS4ueLLf5wLOGLK48Waq1rgMT608ebbQknHkjJ+J+o
BVPF72/pGXfzWSh6uiJZBwzeX39Lki8hb94LhXMHG8CHPN3T/e8i3uz44X2W
vRlcX12gsp1cxKyRw/9lxTSDvTTbc73RReyOPq+Sz9MCuufufhHrXsRfMUm+
vyVagSNH/+9A+SI+KTerkXVtBwYd8rt1uIheM8Yb1yk7YGcgn66wcBE715Qm
b7/tgAk6frHnWYtIT7O2f6y3E3Ltl+xPxy+iq0GE/anbPfCBlLqg9HIRGU9z
jPQK9kJcuLWfSOQi8tw1cTrW1gsBhRWv9wQvojH25hEI/WDEGtOVf3PXfmcw
x84xBLMlqvpCpxcxcDt2b5ruKIxYLPSxnFxEceoPKpl5o9D+N/nKjtoisp8e
950WHIMiTqaQnqO7+wXCShf2jMPjG8NlEQKLuEpvUfeydgLE+IOUt9YXUJrn
vd6jp1Ng59co1PFhAY36FY/HGiyAefdbYn/iAoZc/rriErEAunJulmNvFrDU
8m+SbvMCKIwxhy1GL+DYeQsnPpNFoDllvMTov4C2wdEMgeZLkMHUXqJ9dgFv
6XCr77NYgUTn5F590wWsX687z/ZiBWJKPFbMDBawZPoEeU3bCvjfPCjuqLWA
ih/5vsgYrYJpp0WEn+wCHtKJRhWtNfj3pufCN9oFFKhMZWI6sA7za+lexRQL
+Mbp72PjM+swZugT+WtnHp8mVHZMBqxDw16eyvaVeVxwVeYl/V2H9xfPSy4O
z+P8mOWHfd834CVKaq/3zaN6y1Vjk5kNCOPYtiXrmke6NIarpTz/wKPmTTRj
wzyuO3DO0/r8g1NSQ/8OF+7Gd8yiR4lNIDzKOiD3dR53QpSsmsw3QW7IT1o5
ax7/dTEN/r6/CdyR/A7aKfNYVd3KztW4CczTC3f1E+ZR6r2DreTKJlBolr4w
i5/H5aBMWiWuLZhdsa9xiJxHH6agfSJ2WzCqLz/m8mQeV0d8yckfbEFXKvn2
jeB57IR/z2oSt6D0bJKsn+88Jt8UOsw4sgX5X26dfnRnHosJ38Ye7mzBJ3ot
p/Bb86hVox/by70Nz3+Mx8S7zOPeL60jvEbbcMEr1veY0zzusXqLnFe3QUze
wLHFZh5vr/MG5gVuw8Jfct1rVvP4MXBp7/LrbSj8UCBNY7Zbz1hu1abcbXjg
cO1AosE8frUXuqRTsw1nDgn8I+jOI1Uecfb8wDYMRD2uvAnzyNU28d1k7w6k
6qt9YlSZR4Ey7W451t3ZRLvyLE1hHptbVcnS+HZAuTzNU1N6Hon3tuK/Su7A
3vsXzg+Kz+Nc9z99S+UdqFVm0/AWmkdrpw+TERo7EL38S+wA7zzObIpftzmz
s/u+u8uYxbmrb0XHVW6yA6Iussu6++dx+GinMZ7dgXmhie5xxnlkOFeQa3Rh
B74NxqIf7TxWV27Q37XbgYBYg2RuinlkVX9mBg478DKd5uC1rTkUCgr9Gb9r
H+ZzH36/OIeXre8lPrffgaLnvZ+6fs+hf+fU0yO2O6BPr+XF2D+H1CwvCbbW
OzDkl6Gh2TKH5EldUYoWO+C+ys7k/WsOx5QGUz4b7gDFVf+ezKI5nLi+kFdz
agdeDE8lj2fPoarve+mnsAPiFqY3uFPnMLRhJ2VLYVev7oeqUfwc0vzL6+MQ
39U7IUrz6Nkc3r+t8G2Ue1cvP6K1KGgO+VW/n7Hbt6snufFm0WcOI/s9GqK3
toEi0cFF7MYcEnX84/xntuEFR73ihYtzmPh+QfFIzzZ8J39XV204h485eMLL
srdB/w5tzI7WHC5Kf9n5FrcNQ7PuDorH5/AL9emkuw934/VobbwTnsOPCpwm
nsa78QwyKzq45jCJ8whTwbHdfqrgeMbAPIefLhbbdOz2n17WtKjXxix+iHpp
/nNoC14EPTMzaNy1zXiJZee3QGxzgy+wfBYnltfueKpsQeENx5nCb7O4J2h7
RObgFgxaH3sgkjSLLBNSEVU1m7v92p+15TWLxn48bELim1A4KMbwSWAWNVWH
T9/BDbiruudzLMcsVopLpVtHbgDhVbdeCOMszl2hZs913IBi49CnFzf+YhLL
AGcL9Qb8qphm5W/5iwyXKTwNTq1D28cMzhf+f9HvCFmOS94azHoqiPoNzWBp
QOu95xeXIauNocq1YwZre+ZFGmWW4YbsuPP5uhl09HsWQPNvCZannqerFMxg
n11JcfDTJfh3fk1y5ekMvtIOXOX7tjsvNQsVXGAGu6ZeTz1iWQBBZrUTpm+m
MXYlSn6ubRrCZYa9XaKm0dG6nqL16vTu+zsgxy94Gi+R/2fmQzkNdc/KhT67
T+OmaEqvmPIU3GLToabSnkY3j/+6z6ZPQuVB47r8uSmM1f/6Lz5vHGSOLVE0
jE3hoX3Bz8B6HGItoglj3VMYLf7ifvPecbge05HBXD6F9N8z+qqMx4CD69yz
yzFTaD9W5ym0PQIu/zmac6tP4bMzczSHHgxBG4HyqezRKfR9cuoOu9IQEC+k
/NI+MoUzbOcXmPoGge3tpNKtA1MY122fEPNtAIr4rnHX//mDMUI3zyQ87gMR
dUbT0YE/6NFkvT5C0QcRdplh661/kOvEHAW1Xy84vV/YEv75By+SLtv+9ekB
RqHbQ76Rf3Dfr77CvyFd4KXJzvn80a6f3/jfFksXjDgWGH28+we/rZpH9sZ1
Qn7yRmnnxT/YJHqacTG3A2xF7yfLHP+DdNevT0putsGXw8EuI6OTGLDnYU9a
bzPwNtt+O9I9iWV8nN+j/JohzFOZxqNhEl28Jq+TiTaDU/lUMvW3SeyS36Ni
7NUEHBf0hiXCJ1HoVEBytWUDPKQQkbn9YBL138yqTnyrh4X0bV/02l3/X/Pb
yv/qoWYtk8fYYRLL+2U5sv/Wwr1nrJaeSpPIK/lvGz5Xw9Sx6ZRiyUksSvW1
CBesBvOBshVawUm0bkuusI6vApkjHlHx+ybx/o2UvZbPf8FIeWdDychvnKuJ
+tmbWAGnSPFaDE9+Y9zv0Ki6I6Xw9Y1HtFnAb1Qz+fZeprIEBLT0R994/sYJ
2nehEfYlu7fIjp+s/W+ssEUroYRiyDhiX2R+7DfWlbuyBV7+CdwtKvTvJH6j
8qDjQYuiHxDsxWb1h/83Tvurtyaz/gC7ivI1H4bfeEva865v9XfYbyMqnzA8
gTyz5k8fXfgG/pRkAVMdE7jMdNstrbYAZj92NcnXTWBCT21T+/EC+EUKca3M
m0AJG5MqduF88I6cSZt+PIH1RUxm9ZxfYbAim+/o0QmcZB548scvG+6arGsq
SUyg5unVu294s4FjWO2yisAEfk4e0DxTnAWGm43ZRMYJrDtBFuRKnQXFcrMn
tCfG0e6e3ZEci89gXax4SadvHOXpXt4q/vIJSHr3Hp9uGcd9/J/Uj7J8ApnL
DG0GP8exzOylPndXOrx7e9jJ8sU4dq2N3WUP+wCqku4hVmHjeP3zyqMcsg/Q
Vfjts3XAOC4HaAwSvFKBuePUqq3r7v5npHdj11PAn+HSo8snxzF5xWqVdD8J
7O8kpnmvjuFaWWXrKHsCbFNN19+dGcMvNEdfSn59B7HRcou+I2NoG3r1d6zp
O2jJLFF50DCGucrb1Jfl34LGxGDt45QxjHZhHvPyjIehm6LzT+LHMKpEd99y
cxzc3XN9f0TkGFptWsuxyMRBLs+2dbTvGDqPG70bX30FQiY8s/HmYygpXKy4
9uklFA85sL49M4bdJ+eW7wu8BGvXj0cTTozhfcEDGdxxLyA6ROV+stQYHqTs
faP7/DlQFFsyZ1CNYQyxU6f+YxS803unkLU5iqcjL3rIKUWBau9vyy+Lo+iR
c9JV+lck3Fq9nZA3MIpXl6djCmaewbjEcznMG8W7PJpeT0wj4LBv8uzkx1Hc
nveKMOh6Cq6NX9NZE0bx8vMYyUSGp0C60SFw8fEoTgTGKkk+fAJ0+exs+2xH
MdlaOePVx1AwoBFrPGq2u/9tYEQ4WShEn1V6bKs7ioKb5s9/ng2B/zYtyXMV
RjHTTCj0MkcwyKjHLlnRjmKlmPiYankgeESmZz7cHkHBoKd+lkqBUDhaeCVj
aQRVjuS7zmc+BI2g3tE9AyPIsEpKg7QHYF7L0/bhywg+ThwX4i31h1geyYiW
1BGUON5q2G/gD4PXCGc240dQ5Pl8gdeQHzgzXyg3eDSCh/T2spDR+YGP2dvc
1XMjqHHcMmyKdBeKUzLd+IxGMO9V+o17xLtAQUIJ3ZMjGLlF9rY02AfCY4eS
XsuMoDV+H/172BveDfI/16QcwTGdzJ+57z1hXEbOyHVjGH+LHfMuofOEwwEn
9sXMDeNHO9aZ5Nu3IUfIIXC6exhNqjifR5/1gMrLSR6RGcNIrtvvfl/nJtB/
z5UtShzGNF0/tqJ6dzBkqPg7HjOMjUH8Ujxm7tCdMe6k/GAY6w/++7R69QbM
LImYD1kMo4THKZ6te9dBRusYK53eMFqUpZp557qCxwvtBvkTw3hywpH/4Pw1
2FZyPvlIYhgPmFT3C9++Ciy+aUel9gxjrauJlXLhZQjKE6tiXhtCwkacNQX/
ZdiYTT27NDOEjkYPSO6PnWHEJuVuQdcQKkh18I66XIIv6omlJ7KGkKvZ5Ei5
kROIeAuYCqcM4U8aFsL5VkeI/ZIwTh0/hOEvDw2tWjhCgOA7mvpHQzjCpMs2
etkBjClf61vYDOHWbRPJbxl2UEngGVI2G0Knd1Jp107agcrtuBs8p4dwWv56
WdyQLQj8fhU9fHRo9731OEmMxxaWql70XGEcQnI3g9wJ6/Nwac/Bq/oUQ9iV
JD9QnGUNeTcP/7NbHkTPp2yKmTTWEGQmqj5TO4hnjY9QOpVbgSgnfz2ZzyB6
fZcbe+1sCcyhvPMVFwex4GBF+70eCyBt/Mf22HgQJ44WdH0zsICqPq6zBw4P
4j33Yo5lDXNwfrd/XLx7AM+oXXmhb2QKhixsNHPlu/b68aeTvSagFMByJDdr
AJXck5tOXjYBWkfGG8TgAXzRrvieIcwY0kVptoyP7dojJhsbc4YQGUPFxyE4
gN8/W+QvhBuCNy2lRj/jAFJMBhRIyxiC7vSekEsT/RiRLdIdtagP0xn/9t99
3o+PhC8/o9E5A228G8fU/fsxyefk9/sfTkNRBMmK6lo/nukiS86nPw1h7ivv
IjT70X/NRoWxXwckjs5JJC/14VKvoPXyB224KHX//rf+PpzzvzfFxqkNb0WY
Wup/9SGe6fnTEnYSWNmlPVfj+rCwi6Ov0VcL1tZcS7Q1+/BTqpfqmVANkJnf
ZrOW6sO33Zv2f/ZrgMtk+EU3jj40+Fqeefv9CejryqB/NdOLI/mOr/dXqkPp
t1mzqehe7DVq+npeUg02s30/bPv24v4runfnYwEU0xn/sV7uxTqnUMepQSJ8
iJV6d5zQizy163RZngR44uM6FTbegyYuhhUne1Wg8ua2akJjD6Ln+ThbogqQ
XQ1/+vVbDwZuvhaySlYGd+sMhYEnPXj4pF3gI18lsCTM+kof7cGR3xEgde4o
RCr6Nmvw9aDGvoehiT2KUCvJKGRJ14N6R5L04LwiEA9JVfsNdON/xSPFMVcU
QHDnGltLUDfSDDUZ5KXLgfXaltOEWzdyHamyJqrLwYu5JwUbVt34cq2S36JH
FmiGPp8XlO7GRN2WBRKbLMwW/0291dmFt0+Tn404KQ2i3+5tBJd0oXtf5nOV
V1Jgm71P7/XHLnzq78q6f14SWhMkFyvud+Eedx2VqTQJKAi4psou1oXn2lND
bE4fhkXvrfAjrF0ou3p4vLBIHI7cfDIMm50YVYqv/GXF4Y3D5yDnpk4kX7zc
viEkBg80/zZ98+rEblezBRtZESg9NWOg4NCJPGrVGYs/hIFMb7ohQ68TP7Rq
f1HSE4a7Zn/qEgU6cUc63T3+phDcvjhe9aSuAw/wPXGmHxCAXJcxbZr8DvS6
Gl1xz1cAFl1HKwMSOlA/bSRLnF8ArnsOl3ve7kA6eUdv0lV+cA7uL7bj60DZ
Cs1Mhv/4ICWsD/roOrA07cmLX3G8MBbR+9N8pR1DvpQzCu7hBbtX3UWna9pR
e+rbldCO/8Aqvb1A8VY7um1EK3ekcUNMRtuxrAvtWJDt/jVZhBs6vrTmHdZp
x7CqH2/9U7jA5HtzLu+hdhRmF69iz+SEM3X1WbRVbaiR35U8PswOoU110g+/
tOGRcWVPggc7VLXVZmzHt+E1tXRmXnp20Oqv/rR0Y9dfzLetRTwIxNmKD/3c
bcgk6TKVWLwf7i6Wi1pStSG59hmnqov7oXC1LKVlvhXh6oV0Bqb9cGynJOlX
RSveHHT8XeHEBjLMP99lX2/F8eA204rDrOC6/wevhFUrsqkk0GQNscAnjqI3
KZqtWDt0s94xhgXE+Qvj4zhb8Wzs8CTVPhYQkMuLCSxrwT2vFvYq0DGD7dGv
7GQZLdhhL/XvdywTvFXJfeEd04I0k+tq7kJMwKPxJfr6tRa8qfHm1WU1Rjhg
mhFxlr0Fo9O5j5nHMsAXkceFWuQtyCeuoClIZADD9UtjsnPN2PQ+4+CxMXoI
fcOvRPerGYUakoMZjtHD9mT0YOHtZqS79++j2yotxH2/QZtq34yB06oTNz/S
glK4vnyUfjPul2oj97KnBXd5mkdXRJpRhfXYHqcOGpi45yPF09GErKuPmhnb
qeGBoaUlTWkTpmjICJi+ogY+QcWA5c9N6I7xlE421GBVNdteF9iEHS35/q3z
VLAWW7tTcKMJZwdGskWKqCD62gfx5PNNGKJnnCgTQgUNrPb37ik2obPV1+fm
YlRwZZyYepm/Cbl+/mVz2aAEmgLuZrN9TRh3bEZPsIESAgvTdaxrGtEpUjfU
y5sSim0cXyu8b0THVI25fSaUsEFxaIHBuxHvzCW3H5ekBFeDZzE/xBvxq9bF
cPMJCviwrDvzfE8j1lyrySRWUMDIKwo11+4GnC5+ufA1mQLMxzx/HwppQJ1e
ycOnr1BARIjs8TXbBowhz79y0ZACaqSmwxuVGvBgcoYj/TEKgDsXjvpN1mO2
4sPfczQU4H2II9SyuB5/6B5vklomh9yy5n6ZmHpsGFOWWR0ih1nnx7K0bvV4
utfD6WQjOYgxagUOa9ejC8fSAT4kB/uc7a5vvPXonygi+zCLHOItCyQi1+qQ
Ss594WYiOXRs3fBzaazDFfZv/fMvyYE58UjbidQ6/OTNVLv5hBx0T42Lct+v
w82chwOvAsnh4d83PkvmdTg3QPu0xpccfkZaNtZK1WFppEfqszvkQDrGKphE
VYfP+pJPLXqQg1x/7e27A7XoGF0yPXeTHK4GBNaY5tVi99FYx/BdO0UUDkmG
12K7l/RY8y1yGK4j3aC8WIsRXWb/fnqSA4/7l4p+Qi2+9fF/bXWXHMzZr3Lm
HajF8fw8wfQAcogoEr4W/rcG478kGOSEkkON3WDxxYoaHA3v0L8bTQ4U1K/2
w+saZMk5/pP+HTkQPxk7s3vUYE7h28/On8nBy4ihaO5MDe75djcxtogcvqxW
MFUJ1eBp36l3afXkEJ7+vpS4Xo0EvndH9UbI4cqF+x5f66vxNi8P87F1cjjF
ai0m8b4aeXOrr95kpQChSqXe97er8cwheQMmKQog8z4Qznm6GsWygh5ynKGA
fslFtQjeasy/4/Pp9VUKePH8Y8q9qirkTfidYPWVAtx1gs8ux1eh0zg1R24/
BRhsOTJcuVGF4ds/xupodvvX6ZC7JVcVZgNlROglShjj+CfUOPsLu3M2uM7G
UUJJXWenVtkvDP3w4YpKCyV4KzwjyF/9hUn7zhk/16EC88lr82lqv3Dybfm2
eigVyMfrJvId+IXO0loFlxqoYIacgpbxZyXK1AebRtlRQ1X+0PeHkZU43x5l
15lFDclXfrj+u1iJ7byRc8wUNHCh9XbbJFMl3lNltVzMowGVRyaPbMYqcHWO
5uL4QVpgPy6j0lFQga5aun6OPrTQ9P7P2zK7Cqwqp6jINqaDT+aVxipHK9DI
UftmTwUdhNAlUmbTVeBso5yNJpEeTrhbX3mTU45V716SpQEDHBJRPnQguBwl
DtWLMFczwL/uA82PrctR1Ewp7pnlPshVbzx6h7Ic3TovGHeFMkLEysc/c91l
eHjFevSQFBNcSwuOv5hRhj//G4gM6GICEZYTe00tyrC3z010JIEZ9lYc+lpz
pAzZdbeGXu9lgUGvf5fUycrQKWX+o/8lFogZyq2XSitF+prES9eIrECXJfqK
9l8J9l6ZfjQnvB8mHCjO+DWWoOaxCbmNT/uhjH14ezWxBM14p/bmKR+Au/dj
HcfOlKAQ2TxBwukgWMp7sp/jL0ES9fVyOwp2UPxtUtO8Uow7qaVFxHR2mNXf
J4NvivEK1cTFbTpOqNk7NaJ4sxgVHn3OdK3khNS8yueftIvxca54ckIIFxSr
kq3JDyP+etQoGSjGA8m940/+PPyJ/pJReurNvNBz9+Db1/I/8Vh+1dghOz5g
PKSdZTTyA4eX3tgKD/DBbdsPLd/gB+ZR8h69NMEP6Xu6R6/NFmHn4IeExRsC
MPCedoX/dRFet107l7JXEE6Ou7CHbnzHJ3s/NEopCIF3UJwYMe07/plt++9s
uxBkiNYpL1p8x3l54XLzu8LA7iJpbfW1EK/7/4y/2ycCk7Nz7w67fcN1zgdt
plPiwBPB92Xg0De87EohTfp5GAxljcoi6wuQvPXfvdbYI1Bw88v4xuECNI/w
SR9yloSZ/aOrGd35mFT1j8v5nBTw5bHROATnoyLFmm6LmTSEkG4drh3Pw9zN
MBHPbBn4+Sr5+P3oPHRKlGdcVZGFRZWOM/IaeWis9pXzS5UsWN07dj3u3Vek
o3HfEFiQg8N7N3KunMvFR/e5Kp09FeFC4uEKXrpcdCj3H7UQ2n0/ap7raC3I
weDt/JWh9qOwEVREOn4wB1tCw3TrTipBLf19AkNzNlLc/zdaa3Mcug7ThJ99
koGdM6I/7GXVQe3a5aySqc+4+uF14vl0dfiQWdMifuoz2uXTW9AJn4A7Ck/Y
N/Z+Qqub9TTMvBrARWRNiPVKw8X7C4I3BLTgvBFPbq9DEvp0ZzLd19TZ5cMV
ZY/yRCxuSqSUqdCBuy8akVE4EQMiG933aOlCfG9ArfpEAhqtf+2VUD8NubUt
FQbNb/Bpwvz3B8J60MYc1BwQ+Rpb6ztO873SgyUz5f6vJvF4ePDyPQ46fZAb
ervM3fEK2Vtb0xRG9cFI2ITM4GUMWkQrECd0DcDNhYohwPIlZnBbH2DKNIDM
5auCkz3R2Di4/nNF0RAalPmkueOjUFxTyZXL3hBmfVtV9M9H4rnClDLmMEPY
Vx500v/QM3Sldj5bnGMIlqy3kpzxKTLOpXWwdBvCy/ie7w3qT3CF6Q3t3D9D
6BBRb1UoD0Wek/5kGjxGsD87dSr2ZDBabQbybygbgclxxr17qgMRBT3V95oZ
QWTFLc5Lpx/gInG6QPeaETQZ9MrU1/vhG7phz/IAIziU+yDi4ru7GFOTwG7/
3AjiqgxRLtkTb/1XNcWebAQc/f/Nbqe5Y42zHn1fthEcGW1XfnH+CnZff3Ax
5bsRiDC4vZS6ZIfzLqOVbqVG4Ncm1sZdpoeza297j1YagQRTvwulpAIwu00T
VnftjoWAt8wkS1gPnryZUW4E8waii9fdL0Lya1iwRSPwiTpZc0XBDZ74WRxg
yTeCbd87cW+lPeCJmqJo+cfd+C6frrYe9gaxajoD/9dGQG4+SKAWuQ9TmX5P
jMKMoIwv5NFr5gDwrK7N2r3s4OELAbdj4Q9h6XiitqWdEZxkKLJspn8EXGnS
kWnaRkAdYKZ+JSQE6D4z3dA4YgRVa7PilNRhwK39zPgYgxGEXgtmffswHKiq
ThyKmTKElIWIezz+ETAZRsbrXWkIly4dvpi3HQltXFH6nJ6GcErA0+oBIRo4
pbkkKM8Yglh/mb7h3efwvUzMufGQIUwZnz82tf4STh9Rqq+/awBXiRE0h1bi
gTjz2o/YrAd6632bU/Jv4Jf/wzeTF/RAKld8Id/9LXzOvP+TfuoMkKKHZ8RI
7yAkVIE5ef00fKPzaS/1SISnpQH0LhS68E7yQGumQBKk76c2V7ijA0GGmU3x
jUmwKUdhx/P3FJi+GK29LZ4CP+y8H51p1YZ5/jOlh/s/QJGrft3oWy3o1JxA
9tA0YO2+T2GzXwt+XvL7QXEsHRRj3AOqQzTh8efcgoGIj/BIpzBf0EsDRJT/
y4zUzADW0EVh40vqwGCd/+n+Qga0KbH4Fv9WgyVfo/SrbzLh1TkdGw0XNbAd
KTUWvJsFXGdFQqqniSAltqa31Z4NKf7UH+RNjsN75fK6mxJfgF8pJvDRHRU4
cPrZ6amALxAc+P32VpIybF47otMpnQN76wvzveiVoDrHRjM7JBecL/8epWJX
BNUKiTLRoVzgOxdaP3JRAbI61tXfHP0KLOkVmf3f5eHFehQ8Hv0KZv6O8O+W
HNDR2/3co5IHZC+XHbe7ZOEejxTBKyIPbmVStQ2ry4IjVKk4EfIh+czetyR+
GegyfP6tNyofLlwaTiWTk4bT9vZKxlP54J32+aOAuBTIBW4qwssC0FG1iuiR
lYCdGhlZzoVvcKgmnd47VQzc+7Yyn2oXgkVnH1lYlyhM/K2RonpTCCv79OeZ
WEShjtlJYkn3O2ixRtG+eCkMagJyHy8nfIcWCum/EuNCkCO/Iz609h2WmKID
bJSFINb8lWh9UhFoeUv6VC4LAKPzxRSNf0VgGb5vNeqcAPjfkRcuNPoBDyTw
nnTVLo/G1wukbv+AOw/rVRm+8IHiyJ5D/pYI9c5ah64E/QdShRYLMmkIbI9N
bql85QGRyM/lQ+sI1/gv/vs8zQ30CZ8U3+kVg8W8upG3KxfQPLHgJXkUw3xz
+7xJISdQ3NlLa/imGIhtjxxaGThh09Cyb2e2GOzFEra6ytmBpEpeacFeAj/U
FQ7PirPDslhGZiaUwBSGHfkVfRBmyCge2ESUQNyfJ1kr3gegPytTHGVLgUzt
WgXpARv0xFuxsVuVgqIt17k2FjboCKbccg0oBb+P2XvJklihwfZc06HWUqDO
X25Jb2OBmjNUhbf/lQLPVKfooDsLVCplJzYIloFDDFNb/X4W+MlM7el7qwzk
c5TVTByYoXAz27Yjvgwoslky0piYIW/SWleqogwC+7Y9b/oyQUbxl/8GDpTD
2zy+MyIGjPDW7UI5Ib8cernONPsqMEC8NW3G88Fy+KxbZ9pfSA8xp3Jf/qWu
gKeqKhHsJ+khgo/uymvLCjhAP7Tu6UIHYQxfTVf8KiD62UiNPjkdBJNsiHpp
FeDQN+Zt/44W/Jq+smytV0AKrvLmTNDA3SLbf6YClWAhk8f2+SkNeH2gH/+k
WwkH+wqqzqvSgJufXYF1XCVEUG14XH1HDVevMrzPLasEzbF/ByMtqMHZMv8x
w0wlyAfR5GyxUIOdzD6bItVfMExM5dSIoIILPAWn9jv9goqrI4V/TajAisZB
7uqTXxDlMDV3n4sKjIcKKHkGfgHTHbZB6ixK0K9zmLtJVQXCEddMO3wpQbeA
sbtWqgpKiA6lBENKOBHh+MnnfhX0lpSERW5QAPEu04vW1Cpo2rJ3tWmlABXn
wvtHmqog1INJ82EGBRw1dbr8gFQF6qEsXxYfU4CcGrNJL181vCNNM7/e5Ukp
ie+q8jrVkD08dPG2HgUc5rgo8vhGNSwU/7Rzl6UAEQoW5tFX1SBBvmAYyE4B
gvPf11VKq6HwXzNv0g453K3XeLj8txoM7+whUU7u8mB6LWMGZw3ckhk9kddC
DjLBJq8uadVAf52mSNouT4Y69Qry36gBT8pt/9YMchg74ZDRE18DPLeO/zm8
y1cEvmml6KoaqDM4FJ8cRQ4vttzL9JZrQPLHZ3+VEHKY79nQo+arBdvAgwLD
frt8WRDQVXy6Fu7xHk145k0OSc/pHLw9ayHwgOs3zdvksO0e+Vc+sRbYp4ry
lnZ50cKQy+tvQy30Iad7zK6dJfl+b+pGLTDyMetJ7vImHf3hJ7YidSBr+Ury
sxc5OE5ms3MZ10HKXllvtv/zaoXy+9Z7dZB+SeCg9S7PciSWSDxJq4MQX4YL
D8LJwd1PJ/9kex1sXI8VCnpFDnXnm9XJ9tSDaJRrpl0KOQgfP1v3TaIellYJ
uWxfycGXY9j8pmU9JL7jMo+tIIeuFedhiYf1IIVTAsudu/zbOn9lIrMe6MXp
WfhmyCEsy2v1bW89WD/lvvffXgqYeELmf5a6AWrHF0VnOClA7UowPZt8AwxE
FiqEyVNA7CnmF3UXGkCUSVp0W58CloRj+IJCG4DlM8XIiV1+PEPO9xHyGsDe
9Hryud3+SBlKVVwfbgACY90+3U8UYBWXr3tVuRG+b3pTZC1RQK4XtAs7NYL/
caZwCS5KYDT/ZTMY0QiKAjrZwSd2+ZG585bxZCMEtQj7/42hhH2emTuUdE2g
S6kytlVJCYVOS+UjvE3QUjJ5ZmuVEvZr+BjEn27avX+ddfusqaBEFvffsWsC
McVh9cpIKnDlI+8x89xdbyBIkVtDBVVboY5MiU1QUCFrkaNGDT4FsXcCNpqA
ViqStK1FA2KpA0Qb5mawP8JcUBpGA23PBShURZphMUFjsKydBqRupoevGDVD
g3NhboIrLYxIFiY6pzXDG57rER1FdPCUZ9tZC5sh5LyBavhBelClPyEl0N4M
og+X9Vrd6eHFZHVBL1kLrD7g+KYgzwA6id31+pYtkFkWHZLbtg/mAzMuVlxr
AcnLPWVCJxghxvnBzvEHLbDUsnL5+hdGmJSUlBXP2PXnD3HXxzFBcIFfNDlF
K+xXdtj4UM0MMnFmkt6craAl1aT/moEFuu4drpyXagUeH55PBCMWENNoW+s/
2wqPLXYMUwZZoKpe9FxBZutuHy0e4mNlA7eszSWpilZY0WSa83FgA46o5rDk
nt14wk3iLXlsu/PK52ckZdsu59gYxTrsB5rRBv5r59pAw0XwxXDHAciqSCwc
dWsDtogjc+bKu3z5wcvEKqgNvD8HFIm+OQgfrgkEame3gQz3aBTrdXbQJnlM
8lO3AwOLNcN7aU6Y7dH1j+Fph5WGS96BKZzw4gcvF5NcO6wvn6NQ5eOCiYDq
05vW7btcl7jtxMMNQfv+y+z40g46Jtwjb5V378v5BW29qnY4r9Dyir76P+ho
qRwq62+HwMeiWf3nDoFIjBtrNk0HdDw6cpAmjBcqBco9Hl/ogIvJwibXGPjB
lfIV495bHdCWJW3w154fDk5eS/UK6QBtwjKVz3d+uPiZvdsptwNuVcyWLroL
AJXSFVU1uk5wJf+lWLcpCBlcau15vJ0QcScwRcZJCMy39rtKKnbC2k64OGuT
EKSU/nzLZdsJjqGaqo8/C4OWHiv5ytdOmPS4NysUIgrhdrQL69WdEPf+e1r6
tih0eZANbvd3wr5j4e+bbouBy5vZQhqqLviy+LXl+HVxCJ+rcecx74K/9+0S
rQKOQCd5qS2/SxdQN/CofmSUAD6Ob/oivl1wW3InWPCNBOSopR6WSemCoMun
eDorJaHr2YMRjdUuuO6u3POdTwb4U7ybTtF1wypvqULMLRlwKbzxU+9QN9AK
ysVZ1cjA5ohNrMXJbhjjGXqOPrLAr6BqfOVFN7itGyRZr8mByyl5Nbf0bjhz
Tm702zl5yLU+LOXxsxv6Jc4s25bKw8lADrr7E93wuE/avfyFArh0LJdEHu2B
hM68HJ/zRyFnajrzpW4PzGo3sxfv8uzm9sjr+As9MFrY5v7L8BiEizbfSQnq
gbTofX/tDZQgx+uzbGFHD3w1+9uFbiqwGZbEi1M9kC3zjothz3E4mRC3r3y7
B45fo3LLiN7l3+qQP/UivUBQMCvTrlSFTa6LCcO3e6H1kPT8YTMALenzTydC
e0H1y7Kk+h41CNcwvTf9pheGw01PLJxVA/6rJ86uVPbCnN1SVASLOpz8cYiF
lr0PmJ4Ilh2POwFPmw/s7DvSBxXef/S8yDWga5zhLyv0AR0lIUfYVQNcGP9V
8VzqA9UCpXam05rw1KbTTya/D3b08hSGhE5C0IwqTNT1wW1544fcn0+C7533
W3EjfeAgP3WxRUkbXKOueVMz9sOle4yWLOdOgf4v8lsDjv0gS826ElavCydN
L8tFe/eDbWJc5dlbp4E43DCvE9EPsXl31Nx4z4DUv1fXvn7vB/rgi1mzAXrA
KC1zKYx1AAZJ3e9OqhsCVdFz4RNiAzD39yfZ/VRD2D71b3SNMABc5xJ1zjEb
wax9pa3D5QE4feels/aUETS8sLZSKR6A0APOhTvFJlApWMox3z4ATRmt/BeJ
pvAzS7QzeXoAEoTEWPahKWTULJqwsA9CAOM9Mo8aMwjfDtabvDYIr8KOfFFm
sISgx7P0bx4MQq3gEJtkiuXuXDKtMXk1CHKEkk5+zbPgKserjeWD4HH7ptPd
MCsQzbHiq903BG7u6o4cxuch8c6TnWSOIXDRgwUFpgvAq1Y84Cc4BENUSWxq
zReAvV749VHlITitPrxkImcL1L/nOd87DoHADQmmMxN28OCz4Prd60OgoZG0
8r+arjSc6i/qmlNECaUSFSVJJXP3/lahaBKSRMkQDYYUIUUIKTI0CBkylFBS
JHPIlPpXqAzJPBOXO99wX+/zvO/H85zn7LPW2vvs4dPxt7IH18Oi7YRvD65Z
57aUNNmDyVMWuzS6B1t5/GJSPjlgePXtFddKe+DCubrIt9cRDr3FM8fqeiBN
PyNn7O6E7syJJtWmHrzRn275w3cOrepm0QNDPTgZfe3Fw13nUW8su9REoheV
K/xKDeouQlK1V/rK2l7QKY9iBS46w3bpM/mHm3qRV9xDrVruAs5nFfU23V78
fvJhOs7VFSoHSNa2Dr14IKv87ZOKO3yUeByDXHvh2ReVLhLtjtpFNW4Z3r0I
k5Geek93h03doaCR8F7Mzz+ihTdcRrS+dZZ7QS8KXJi97fc80LlBLv9+xcL9
QbEGikKe2MLXX1bQ0AvrS6tyTgV6orry4ndWZy9ytto/bQ24CjrZlxkg2Ica
0RvhYs+9oSdL8KaL9+EDH192vZYPImd5RWpl+lB/hUMI/+cDpdI76xar9mHN
i1NqXny+sNKO3xdj0QeenONdfk9u4PnK00fzbfvQuTZDdOSQ30KfI3/y58U+
fH8sV/yAxx8R7164yNzsg7VybJ209018UCt6kJrZhyqX4OvdRwIhKnEj6eOb
PpiHVu69XxQIy2lkDpb2wTPUvOaHYhBmXteXbPnehzE5QZ/9wregsK219w2r
D5Zy//EmTwbDXfTJeAtfP3Ko1S33LoWgfNyGThftX8h/VmdjqCGwyB4S1l3f
j2/LSorXCt5G2GbG9uoD/dgnN6d00uQOfgiV6Awc60dILm0fe/wO1g/56QvZ
9IMnfebhgfC7KMkQPHHwysJ+85IVpj/D8Xe9lH9zQj8c3fiVLsdHQvt66uWq
jH6ImIz0GJlGIejHNse83H5c6r3onysUDenb+w9HVvdDJX25wJFP0SAmvFcf
HOvHkxWJS5ddvI+wfQJiOrR+FIQZqxm13UdzcjSv0nw/OLU6jwUOPICTadaI
oMQA0gWkF+upPURUYUdhlc4ANCtzdjopxqJD/Fx2nv4ANhqpbDmeFQuFC9Sk
lCMDiOk65IIdj1G0RjTEz24Al9oEO/cbxqEngHxM584A4sJs69hPEqDc8Wm/
0oMBaDB3usfrPIHnLgvdlUkDMJWci6noeALhIbf19LwBlOk9uz6wOQk7Dz2d
ymsbwIl7E1WVUym4kaHSn9I3AAV/o86fx5+ibq7oV+TEADy4hT/+vHsKq7ym
cheeQfzrfhNiciMVQVL8EUpKg7jNDbrE2ZiOL25RN1eqDYLnr4xU2YN0SDes
8RAiDSLelVY+LpiBbF91q4Gjg2jivRpbN52Blm5Hpafegzj2SGTP95HnWKcz
syYqcBDPU0SvOblm4vx9f3H/8EGEV5iKtdAyMWvwmGGdMojEhzP+50SzoJDd
ULOyfhBn9rstW2Gbg6ueW+2ipIcW3pfkW7djeZBeMlVmsX4IuozH50fe56Eo
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
          "]]}, Annotation[#, "Charting`Private`Tag$3631#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RxUR9XWm8L88K/x/ntV/AXdep9E=
          "]]}, Annotation[#, "Charting`Private`Tag$3631#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$3631#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(s\\)]\\)(x)\"", TraditionalForm]},
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.999999918367347, 1.999999918367347}, {0, 2}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\[Sigma]=0.2\"", "\"\[Sigma]=0.5\"", "\"\[Sigma]=1\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.847164799487398*^9, 3.8515262125822363`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"17a3ed95-dcdc-4f94-8a90-243eb975d88c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$3751#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw1enk01d/3/q1UkqkSGTJlSohQUdqvipKIJFOSFG8hISIpMpSEJCRJolCE
JCEc8zxP95pnyXAH473X9H19fmv97h/uetY5Zz/77PO8zuvZ6xKzvmdos5lA
IIzjf/73TS6Z0VSqX0eE//dRwDyaA+7+V7yOLvNt+X7+jzzW0bFzqvTmGrpP
ZBzxxaSxp7d/FadZrCH9PIlpS1lpTGHB8k2UyRpKLyq5pssjjQXtyT55R28N
+RZ9078yKYVpGJq+4lZbQwGKe8a4X0thyc2fVW5wryG/yLYWrXFJzLNOw2e1
eBXds3H0uhcjge0vucdzTGgVqT9o1H4pI4417FZ1U+dbRRX0w68u8IpjXjbM
do3dq6jcgyuFh0Uc62ILfKPJuopMvg0cbR0Uw8Kvxu42XFhB30zEtEffimFb
piu47zasICcPXWTLJob92yvAkeS9guIa+rBXNBHsl0PFVq5+JnI0YRpkzwti
x0WdlJKJTDQVh17/ahPECjr4rmu0MVFZ3Rf2jh+CWImGQ45DNRP16O3ysXYW
xOq4dt+q+cFE31ximOVkAWzo542Sp8+YqOLxqQdhVH6MbZXptXCYiRpIpobT
2/dhViFK1G4/BuoxCnEU9OfBvHIinjU+ZqCZpuryy/Y8WFTfvFCpJwMp/HdA
4cNlHqxOLvdCqhM+/3XL3vuiPJhyo3rSA3MGYi0NkBBAe7BtnJrGe44w0JOM
xGFdwh4s/ZVxoe4wHR2ncV3eHLELq/r92xDroyPNHYWRNY92YcOD+/4pE+lI
dKnzT6LNLoxXsXevYCMdWTzvC4tQ24X5tNy49y+PjjjTbpy5McKNGe66I/4s
nI50MjtzPx/jxugRj4IQ0JFklsGMxjAH9leodOqcOh2Fbiro1M/lwLqSt+k1
qdCRS+fBotCXHNjPgte7+g/S0ePtCgdDj3JgTiMpscw9dLTjm83M2zB2bFSp
I111chkNp+aM15zbiTW1yLWmhS8jtaWgyeUuVqzQ3FVZ+eUyGneXn7P4wYql
jf2OKghcRl/eWwtNv2TFguhnzGu9llHg4GFPv9Os2FlRs9GJ28tI8sGVrtiM
7VjevcBFMbVltMlyJNAyfBuWxDnAHzO8hMS8+sKiXFiwiGuwXa1vCQUmmF15
eZkF80tNWOjuWkKdQWEcyUosmPWZW82CDUvIZUiSW2duCyb+YDLgY+4S4o85
z6bjvgVL7J+jJL9cQt/joYLPbzOWkL696pfqEuptNx4wzyVg4Qy7n8aKS8j9
7HJAdSwB8z1Xl7Asu4TgZ2OEsQ8BsxoKeaQmuoTuS75506tNwER4disVsS0h
2Zn42bWCDYh/JBRXMbiITrVwPVYWWIc4HSXX9heLqMcsR0+GbQUkdurUtQQs
ovgs4eOuA0xIq7cWb/JZRA++8mfPZzOhQDeyrcZ9EQkL0jvjLJjQfWn5SPHN
RXSm3PW/gGwG8F4pmk9VW0TMQU+BUDs6vLp2wf3JvwVUJ6If+nV1EXiFrBsf
jS0g5lTZy1TiIsT3eUk+HFxA0cLhSr3Zi5BxPb3zfucC+pYsTO+5swgNN7iO
3ildQArim/ae7lkA1tudS1feLSCd6OLKkIp58HO86XnwwgIaYUxp6RXTYCDM
Mq7g7AIqsHweT4mjgfqPayUXTy0gAZ6LJ+oe0WBu8Sqrk/IC8nrO/VVanQY3
fXRisvcvoPj18wo++VTAIpTzTszNIzkZwdCNAArE5Sj2NczMo74/9tjBCxSg
d8kTLP/Oo8gXweXFHBTIEpTR9u3DMX2cQy6GDCJfhEgVVfMorlwpaHv2LKz/
3krXez+PTi5c3PBlTIN5z2ahwah5FNK/UKlZMQ25qxvgHI7zeVzLu/dqGpxO
M59HBM4jXZI0kyE1Df11ZD7ivXnEnvNximg+BYX9xGNWmvMop030xcPOSXi0
5ZuH6+wcWo06rGHKMwFO7yy3WU3OIe32S3wHyeNgfXhPlN7oHFKUDFy/WDMO
Ote8s2W659DYbkGO54/HYd/PS7MDFXMoiC20r356DHKs560vxs2hyJsPWCyJ
o5BKT6Edf4vPP9ZfoJI7Cu/DLHylIuYQ94e5SbOoUfArqPywKWgOCXXN1oQZ
jcLl3TGk3/fnUDpl+nZc1wiQS09ekrg4h7I8BZP3/huGERNa365zcyikO9o4
v2EYOme/OGxgOJ9ALz0laxgK+ble9BydQ9ScW8o2D4fhpctwebj4HBo6bGVn
xjkMMmLP1NYYNDT2+4wmXWsIhH6r10wt0BDG0siipDAEXHoUYxKFhtjNirAf
vEOw5Gnq9nOchqgR6fGcrYNQ0SKbeaeVhqy05iK3iwzCTd9mia5UGjIdbdy+
v7MfjLs/nupPoqGaWp5l9sx+0DnibDoWT0N5g0/KfV70g8oYd8hcJD6e/fD6
DPQDq7bhPOdTnF/Sy7cruw/WEsQ5eL1pKFza70xbeB/MMeak9nvQEMGHO0/v
Xh/0pr0xP3SXhlgldh8qk++DDK7O0vNmNNQSckglOqsXkuy+9F4ywsdnRaIC
InohptR98ao+nn+A9HOKWy88vc978LYWDWkrmbxSO9ELRkSTcF8lGvIlNui+
aeyBlfgey/wdNCSzLa94244eoC5/8yxhweO/OJXyaq4bxgweRVRvUFHQ6Xu0
sL5uaNosVNW5SEXhg4PilB/dkGh7XX5umIpqLHK1D1l3w1skf57RR0WkB09C
LPS7IWTfuhWBREVZA0yJTRrd4F4XH8nZREUlrLnNifzdoK0wtCJbgGNrgpsG
iQQaz7P2HvmFr19yrFivIcGRId/Dalk4f2bpLcUCEghGiN06n0xFigPXOUc/
kIB7muZ96RMVme4PNrsVTgIWzbLoq3E43mN339CfBORF67pbEXh+IxqRj+xJ
MHpJecw+lIoIRRu9OZYkIKVsWXcJoqJU/e1u166QoMzss5LvE3x9Qy4fRYME
v7PdLj5/iK8nc9j0KpMgfaeWTZgbFXmq73imLEuCqKLxmDh7KpqcCqyW3EcC
S8/YJ8dsqIj+YstZDi4SyCjr3267gccX5f/rso0EtNktOnfNqUjmifyJK+tE
KEjNO8x6Fc9Hurkqa4kI/rfu7k3SpyLtqzm7gilE0BUWX9HQoSIrekHSwCQR
Bt68rLoPeH3G7YuW+4iQcglL51TH48VGX/1DJILzjsXXX1Wo6Pjbyav0NiKo
VXz10DyM189k6/mMJiJs9rG8PniQirh35v/oqyNCvdqes14SVCT6dlnYv5oI
kQvVMntF8PON7uP7VEEEy0xvzix+KvI1S5M8WkYEaXulBR0efD/jTa2nS4hA
lZjoHufE97vY/aW8mAj5g7HIdweOmc8O/Skigl+s/hdBFpxfIG9GGsdvv7Hy
3l2joMnDHvd34FhW1HU4cY6C+uoXL9zAcWFUbzrpLwX5qoQyZfB4l3ZqeXL2
U9Btm2IuW0SEId+Ms5ptFBTAdYSHt5QIrkt8XF7VFIS9y4s4Xk4EFsenPZmF
FOQorMPbWEmE6OGpL+M/KEjTeZtsew0RDpoYuQim4ON7Vc10GnC+hqKTl+Mo
iH5B6/CRFpzvjDTr89cUZLfReCy4A+f7Hd5e+IyCEvpC1y9343zyzPi5R/h8
DQeuFwM4X9ItexkXCpJTdVtSGMP59jWqWtri8V8MwNkpIvzZktBQa0BBNVS3
Q7+W8fgPd8RsaFFwvbZP7NrA45Ndb6meoKCG7qWjvbg+WHq0mAmSFDRESK39
wUeCaP3Myi4BCtJV/CJVLIrrqXLfa3ZunO/heT1VXH96WdPSnkwyCknnUrA+
hc9/9vqqfjMZuX1wrPjqgM9fZYoGVpCRd7L6woYHCQpcbs8U5JMRNjRgWRRA
gkGLY/5Sn8koZlJF1PHj//Tan7XmSUaanJGrId34/NRz3spOZES380rj/kfC
9Zh1/s4tMgqwvcpNp5PAZYf/QIceGckw7U9S8ee5YFCGPV2cjI5vMZh6aNUN
3ic3fY/dR0bOAtuLG126QeNdt94LTjLKuRBt5e7fDSWGwa9smbNo4Xr6t+KU
bqiunN4t1jaL8himAYcXuqEjLYM/+uksquEK1DgZ1wPRrM8LAjxmUUn8foGk
7B4wsblx7f7dWeQWR1Exre2BHmHuDwZm+Pgf1cq05R4Yfu0iulNpFrGyv8sl
m/QC2UNF2ndoBnmrLLi8leqDrA72GqeuGWSwW/Nw/uk+cFEat7veMINirmvn
HbjeBwtTUd/U82YQy5OpjtbIPli5viy/+GoGJVwKbw/ajt/nmgUq9jCDrD5u
EuNj9sMBbuyMUfw0aijoe5LNOgRhisNe9m+mkcGJq2lrgkNAN/D76Rs0jYRz
g2zvHh6ChtcVEt9dp1FEl8XvfOMhcNtzYfu289NIanGKjZAyBFW8hg2/KVNo
KPLqxt5Lw2C//7ax4OkptGpMC93IGYFs2SD7kdFJVHCYZaGlZxxEWq3yD3VP
Il4r+2GlxXEI8VBjdW+aRNTnu7d+45oAm4qpL9vzJ1HObZOTg5oTsM9Sb1gu
bBLFfDry0jRrAh6/3m3qcXwSOTG8Z2+8/Ava9Dgt9tC/KI51a8crg38wWPlD
9OjRCXTK1JhxgHMWxuWijqDcUUSPYMhwn56DXU++HlXYNIx0eNjnFu8sgdxR
ityX+T60r7vjqrU8E2wVfHzy+/vQW3pV5gENJnyU4mprrO5DbC9V9gzqMmE3
32GPpfd96I1NeN5ZRyYsLzuVntfsQ/Ut6rVl35hQlk++OhXZi6zXYpSCpVbA
VIP85PDRHvTN701/3b5ViFB90npWtAdlPd1Y+i69CvXynBKmbD2o/srBtaCj
q3BKWKHWd6AbEWT/+UoZrcKBjbt72p51I7v0XwprYatALplNcSOSUHHJhOm2
LWvgrznbku9JRH4HHmT0jq5BmfaMvsotItpwU7XQp60BQW+6KUOPiF5cNBbK
W18D76v/GpLEiYhbb+SCHf86PLAdrwlt6EJZJdv/g0vrYBfUX3JTFMfOrALJ
v9ZBt6Exa0dNB5q484jE6rUBwS0NhwOyO1Dbw5YrtYEbUNNRn7Ee14FGJp8E
e77eAK3+2vR5lw50qPTxlsTUDThFrkztF+xAdLeh3H1dG6DIXZzw4147yjwR
PfGFl4A58RSJyJm3o22zjPFJQQKWvq8wPlmzHddzQoioGAE7KFYQ956/HYk8
mttwPETAxI/kxgSWt6Go86lRbkDA9hplhJvxtSEW5X0/d9oQsGyplwVaW9rQ
5SmUcuQOATNg/DemRGlFmkN8T3XvErDgeLHjbNWtqOe81yZTdwK2Phk5WPCg
FSmKRU5WBxCw939cdqRYt6LNOfvzfIII2PGwS8pvLrWiY9H3o2VCCJirMutz
B6lWpGvuEKj7hoBNPH6kINTVgp6RpA51JRAwfwNTU9ayFvTq8Vl3rs8ETPSA
qt/C9xbEUfm06lgKATOvIXc2BLagNHXCXaPvBKxpt/Xjx6otqAcJyuXmETCH
8VMpd8RakNplPV6rPwSMNU+w9SpHC6KOJ3csFRGwwIJvFyzqmhEHMfbrvzK8
fvqvY4oONiPxAtUPffUELHVBZyZqUzNKDpPfO95IwEbesWBO3U3I8Es1B6mZ
gBmPefwVftGEVnbEG3i34/3XC6UTy1ZNaOO37Gb5TgJWpzAd1ny8CSU0cWyp
7iJg8NDyqO9kI7pybBD96iZgXsL7gk1LGtGBioMjO3oJWE55a79iTCMKOPJO
9FwfASPbvVTa4dyI/szbKNj3EzAZTq3A4fON6H7YcLH7AAGz/rlOyhdpRFnl
foF2gwQszjRPLmK5AXFvm1M9M0TAutZcfO2bG1DXGd6AzcMEjDvpUMeZlAa0
eVVM4iuOdbTHpQV9GlBZdkKd6ggBC5iNfzRv3IDOfQqQS8VxcYRpc71CA2Ip
V9nYwDH92O4Dn7c1IFPZ9/STowTsSH/9A++BeiSfqNxsiWNHv8A6o9x65B0r
oG6D42RpEJYPq0e8lkI0fRwPN9BdttrWI7nwinRhHAu5Zlf2a9SjGcpdqVY8
vjGfI3/u3np028pw3384Di+UvBs2W4fyjrzXGMLzrbs5WGJbWYc+ZLkYnsQx
y/Z3PPChDjHHuHge4fs9lW5ox+deh8wSWrE4vB6el9kLKbp1KD9XK+YjXq/s
pUquGok6pOUGvQF4PcO+JZadYtSij+40NkW83g6WPu6/GmuR65ddF373EDDt
3RYycom1KC7pj44Afl4SVcd7Ex/guONItSmRgBG89obxX6xFxZQ1D1f8vPvl
57BwkVq0Xr2Z/z9cD9FRacmPa2rQoeQO6aEmXO8XgswW4mqQZqqWwO0GAqa/
dpvdwaUGlcu4bCurxfVpI+xqKlCDmosSF9gqCNjYvhWJZnI1UpDLjlgsIWCl
DUSiVnk1ypWrsc7H9eul8lpD2bEand9vv1iP9//Gk3epXzF8/A3DSeAnAVOO
00kS3VuN9qQ1B53OJGAzW1h2cBZXIZP1UBV+/Pmp+T30JyCiCp0t3BxXm0jA
vjgUOa3YVqGVX5z6hvEEzLL9QcckVxW6U8HqMhNJwNSfX3l+Y6wSkc0DiGuv
CBjfCUX1rrxKRDrx1/NvMAFrSfz3sfxmJVq34Q8760vAzrhaOMT/rEAj8bbr
ovj9ISylJrw3qALdkju3b8magK107219aVGBrJtSlT5b4Po/3Xz04dYKFKZ2
WiZEn4BJ7Tqz2cikHMkUvSt5rUzA2LKk3+1YKUVRu+0aH/zbgIlbLLq+zaXo
s+fb1mekDSjnG15fSipF10dfaxhVb4C3T+ztMd1S5JnF33To8waQL3EoovgS
JFoQu5tqvgFfesdD/wUUowgDu+7txevQ48378YNyMVIUtj8w820dOIXPZ10e
KUI7c18Qv73F73er1LZ8KEJyF0PeFzmvw7lxe75g5h+kXiqjZiO2DpNkSoKs
cz7qsQ+TOvlkDWQ3M386XMtB3HdtLO2UV8EySbZShC0HZbw6LSkggr+/NK91
tef9RFxlxJ1jbKvAfFZIP8H7E7mdaN9cO7IC9Tt9NNhbf6Btd1k19kauAEmW
NcwsNAN5DbDPfFpnAnb3Tlbp1Hfk1FGS1DfDhNTMuraD2t/RjCsDDHuZ8FAl
lI+5OR0VPNR3X8pjgsCp3Z9iPb8ig8QfxGseTPDzvV++uSsVPfjE1pn8HxOm
yzrG7ZVTUfZ/5aUnTZlQeP6t7AlyMmJ+iKUaqDPh+mWhnN5bnxGWdzlCbzMT
ZuYX1dwrklCw1z7f24sM8I5uRpySSej+9XDu1kkGxPX61Z+e+ISY3QckfrQw
QO6JxeXec5+QfaJbpHQlA/6IHiW6pSSgmX1mTxn5DMipb6vUb41HCoE/Tvz6
zIAO7metfhEf0GDITNKnWAbMX1Xr/3UlDhUINheRwxl4v/hxQbDrHaLlt5Rm
PmHAZckrBP23MUguIHlG8gEDnO23sfuZvkXnvKR0NjkxIHPB8cBkTyRK9B2P
nbZkQJOa6GHBuDfIjl3UadWEAeQn7eqXrkcguf2Jyg8uM4Cj4tm5p8KvUd5y
8R+ziwww3e322Q69QudSu2pTtBjwNq7nT9PpUMR2RYnnJsaALqnT7SoVwUiG
3Hf22QkG8PxImYo9F4Q2OYUu8B1jwJUTnJs31QaiY44+ObzKDIiodOP/76I/
Onz5Oov/YQa06PcqNjb6Iu7t0ibX5RggnOMfbpvgjUpOCu1OPsiA9zUG6MgX
DxRw6mvIdWkG7OvfT17/6ooc7xhzB0gy4NBop1r0dQdE1Cgg8UswQIrd+a3C
fzdRJY/THpEDDPDtkOkQLNdD615bh96I4+fB1W+/VV4FdFRYDTxx3EXz+8hN
NwWjSbJtA46p+tJz91xtQdxLXCAcX//ozbk6BxVn0GRbNyjH468/efj+42F3
OJLUPmYjhce3T3dsl/WCb2HzCR4yDNhiPKixXcoHOA1zz9BlGVAu+uL5B24/
4NV/8fCvPAMCosWdj4UFQNLW9QlNJQacYy80bd35HNzneoW5VRmw3e/qaYcX
L+DkNtUUbTUG1CyTD27dHgJemd70WQ0GBN8N2v0xIAyOuHx6vHGGAcm08MdC
T8MhbkMm0lubAf/9J2ubux4Bu25Lfs01YoC2uIe5v0YktBjni7peY4BMf/kl
A+8oaPh5TCjamgFThtePTTHeQnb5SRYe/Bmq4/h26PfxdzDuo8Li6MWAtJol
kQCPWDgba5Qp488Ax1PhrMKLcaBU9TG1PooBeoy+1SnleJDbqvMt8yMDFHIO
0n67fgSL/ufF818ZQI8cnpGhJ8COjyE73iIG5LM96ixzTwKWwHCQoDAgQX5v
e6b4Zwg7sLJ9dZUBzwwyW+KaP0PJSfPAYzuZYBQ9Wv/gYDJYV6f6t8owgSqm
WybbnwqsugpgbMcEKbX9mRGaGWBj4uifvMQEdovf6T60DAioTHHO2rEC808u
f3OMzwRLFgtxhtAKWI2UGR7wzoLCYus3JzVXQEFmWW+t8wdMSBzecTZqBWp/
3tD88SIHTrHtWiXAKpyslCuXHsqBgNh3pUW4n87qYpyOP/oLBI6x6L2yX4Vo
xht4OfoLLFMOn7GNXoXbUKNuo/Eb7NR0sPfkVdioU1Tip+VDQFsNgRy/Bqoj
m4SfmiKI9GirYqWsg0KBCU3xK4LUvYKRdzdtgFTE94ohBgKFPI5/yXs2YOen
dNUEvRIIb3q3JeLYBqwamPZtkEuA/QthXPrxBtBPbqky4SsFs6aw95xhG7Ag
k5GZCaVw+WmER0n8BswQWPxvhJeCzs0dcU/RBvRnZR5ESmVQ5bnt8Y31DeiJ
M9/DZ14GfXsj/Mq24f4paOuak18ZuJgF6x7jxP2l1bUW4fYysJw18qsUwv0R
93aPJ27l0AY5Vg7HCVjB6g+rrrhyoP/wEdmK++ncSQsdhcpyqNzo8XiiRcAy
SrL3D+ytgIWO9F1chgTso7NlhcbvCvjg6RObiL8f4yx2ZEQNVsAY6Xye8j0C
FqOd83Z2eyXcj/Lfk+SG+yFRNocPppVgnVUvIuRDwELYfxkt+laCswXhqyTu
t4PoN07pfa2EfZu7RTheEDDfll+71hiVEHx7JMM9goB5F1qtGIlXQYvArsKl
aNwfpe4cT9epAt65woSr7wmYs+/NPIv3VeCakrmRnkTAbipy3Cg8WQ17vNMV
y7NxPyCUp81jUw3sva/XlXG/Yc5664hjaDWQ7Dbt8c8nYIZDeVuFBqrBVEvr
SSEiYJcablHub6uBaB/ePSm4v9bJ4+yuV6iBwJ+a9s6VuD8Iv53+yKcGFEZ5
lz/W4f7Nmyu6PaUGNmyxJ9twv61uV+BzqKUGdpR/s9fF/fZRI5s7/vQaSMuO
nnJpxf0nxn2lV7QWPOWNFDxwv6Ug9+ek8oVaOERXsLPA/ZjsPluply61wHfx
WoMY7tcOUP8w1MtqoUo7fFYP93fejWcDFmZrIesjubEV999d3+o5M/jrIEF2
v5kS7g8Vg668+0+rDnyjn/c54v4x2Kb3gJhLHfCmxKYE4P5y7MytjJ64Oshs
Td35EPefGqLTxyNr6uDsweZrOrg/jV5zLddbqAORTz0zdBxTe5h620XrgfFN
fm/gyP/q4UcquVgP21WT5Sg4/hzFdsvLox7usweEHMP98bprxKxyUj1cSNV/
9T9/bWIg4DnbVA81VqXht3GcJZ+4OYVZD6m8X2cv4Jhtp2yolVQD1Ot1beHC
8e3JH3wChg1wv5hwJOd/fr5SLbH9cQP8u/GDqIbjfUmlcqFfG+AK5dDVBDw/
V98Lv891NsDeRdOdk/h+Gq63niZsagSei1nXduFY8oRZQ75cIxRJSqQK4ft/
sm/Y+L5pIxR8Yr/ChteHtGg3LBfQCFXEPagH99NH2qkOE5mNIOQprh+G1zck
y3PpY28jBJF1bSXx+k+EEp6abW8Cae7S/xJIBAxzCNq5R7kJgq7k5G7g/dK8
ZIzos+AmaLf8XuuIn6/uFtE0yG2C981pVx7h5588lKLKGG4C9Xlm7j1cH+bv
f+s4qjVDnmt5xE68f8vxhE5Jm2YQaKM0/awhYJzG1TcGw5thq99vh7NVuJ/m
JroZTjbDwn/XLgiUEjCes4/04y62gItP6JYfv/BxJcTz8GYLJD9zyI3H9e8k
uqXnqkcL2B7+XfQA99M1a8G3uZJa4CWvlurfVAL2KC/2oR+zBYR42ILaY/F+
LWXg1A3uVvB2aEja/5aAdUSJs5yUagVHT5N2I7zfVbj/LWzxciskiKcUvHyJ
95fyBUl2X1tBJ00hSOIRAbuQ1N14ybQNKh8022qZ4PoJzLCtvNsGi11aDe/x
+yPGzn/jhH8bqK2reI3pEbBJeXmlgxltsKTf/UVPE78P8nwjt7C0w79XDoWB
ini+jdLX8jLbwZPjt2MRfr+dp7tPim3vhNW8IwxlE9wf9+g8jRHqhFeKDVHq
FzcgukhEgOtIJ7wXaTRSAtxv+9VeXLXohJjv/qpUqQ14xrE/syu7EyxsHXcV
LK5DlXiF+0vLLohR+3kmI3wdtPR2b1n8RQSn8bM3rhWtQdjNHTRGLRF0eUPv
ZmetAcmdMLjeT4SE3Q0vCZ/XwD6eXMC6jQSrRR9M/YLx+ZQ6VyFjEjT/OVgo
bILPf+0/cnaJBLezjZ814u8T+66F0oijPdB3wv/m832r8OoG0Vfxdx/kumxE
VeP+tfrSfg6D3cPwn8qP8636SzArtvdJW+woHHUsWK9xmAN3t0M3X/FOwMJC
2M57d2aBl41SaCw2ge9TmXRRZxbyPmbvE5abgHO7xrVUD83Cap1aS/rpCQhL
Y09RmJ0BPzFtqHOcAJI31zJymYGwptv7t5ZPQENca7nv42lIlonv9rr3F7we
VzXGJ/wDYh+3oW3NJBg8u+acJjwBOi9tSG5tk6B7sLa/cusEFKoVWPr3TYL4
iTvJCzPjkBB9yyGBOglCwhb9r/6Mg51BbkDPvn/gJsgzV2I2Dszya78v3fkH
XfuU7BRix0AoLVnoGNsUxPiOS4DcKISZrSRq8UyBwRCjRZ53FAisBgeNhKcg
4Up6lCphFMZuM1RdjkyBZ1sAy+uOEfgurKufZj4Fzp3ehY+ejMCpCNpTkbQp
CPnPc+oMcRisHp78u113GjQziunfPwyB7O2aTrLxNBzP5Pnk/WII5i8ZVXTe
nIZvwbQkJ/cheCbh+CnJYxrUY7hfFOkNQXrz+2uQNA0NhqIB7IQhYEiuND9g
TkPOww9H1YkDUMb9vPj61hm4bVA2cv/nAISs7P6uyT0DRlMnOpmvBkC0VTZ4
t9QMWGRLH5u7MADnvM01My7PQDpUf4go7YeItvy88dQZyLoquriM+sCiSCul
4ecM8ExFnj/+qQ8kU1ujfhbPQBCwvm/w64O8x/9cn3bMQIXyKcbcuT4YkOGX
30+YhZO71IPPtPeCrI/nJyOTWZBBHZjeag8s3GEJP2E9C5G0eIFNoz1QZBT+
RPzuLOi2uXVz1fWAgWzqNarfLHy2olTAux540EncG5IxC3FJgxGLJ3qg/NCx
4PKtZBBieoYLvukGy8NGSTQuMmCvSh/SfbuBfsSlUESADLcbcstl73WDnHoa
+ZECGfKKsmbDdbshUlvkiooJGdJXtzXe3dkNCronHa1v4vF2rc1urJCgRt8s
MNwBx8Nj5lMzJFgzfvN7xocMorv9wmubSWBrs13oSyoZZq58zP/zjgSEOxKq
7dlk8P04/1wglASxjqcvbSoiQ5+nRVSHLwma7j/yvd6K8+++8u/aHRLYecS8
e9lLhgDBA+SDliTY/OhXdv44GUrOhGQYXSHBMT/K2F4mGcbesQ6VniJBWyD7
+lkWClBrzbi3qpLA8cVBPldOChTuK/FKPkSChPBbF5rEKRB5OPHxVgESqEf6
Wq/KUSAu06SrfBcJOt5+eCR7jAKmxVH/hneQgPUj8fuzixRI53lYemqFCImJ
C1U5VynA03Dl/JMFIpxM3jU0coMCJJoYmwiZCF1fFRjc9hQw+NtgLzZJBOfv
F3eDGwU6Aq7XBY4Qge2H3aG7TyiQw7/6Qhe/hz7nBGq+D6KApiOV7QGJCKfy
Eq/XRlCgJP9TxuYOInT/QQ+W4yjgnBvdNddMBDfU90oyBc8/1H3sXAMROMsZ
qVd+UMBieIv6Rg0RUqt4y57+oQChXkpNqIoIZ+qUezMr8fx7Rs7GlxOhr9Fg
ob+ZAkF8FoWBpUR40HqXg70Hz2ejk6UdEYG7M1hKfQzPP+inz7NiInwjpYAd
Geff7/EqoYgIWn0VptF0CsgllkWL4ZhKoR633kSFcGcT+v9+byty8dF6uI0K
CWa8fOY4Dp7nMAzfSQWrLxtXd+PxTNzjLFO4qUDarbxPGeeTWJZ1KN5LBTqR
UlJYQgSaZ75HpwAVsj5F/swsI0Ix83zAjAgVqG8+XmGvJMJL767wLZJUSL2Q
wdJeTQTT9dsfBGSpkNfxWJalngiSvvNflQ7j8YqmZBKaiDC3yS9XW4UK2ltp
t1LaiID8uctvqFHBUywdBIhECNn6sfnBKTw/gokoo5cIUjsKJz9rU8GAe6vf
6gS+vlrBPlEP50+N/rtpFs/n2afpj4ZUsHur+sl5ngjGLM/JsRZUcH7YHvJy
EwnEyxn3Ym5SgVvw2OPjuH7ITx1pUbZ4PZxcThng+grcuLwQ7ozz6dz/USpO
AoPiCvcwdzw/ziBxITkSCD0+tvzSiwpBKxyjI7h+c5hCzGcBVDANOd+Wq0OC
scW/G94xVFBcryD7PSRBVo75U68POGadvqHzjATe9xs3eybi+XnLHnj6hgQ8
tOyt99Px/fK4HjiVSYKzM4933inB+RgTXwn488qZRg2xrcTjNzdf0FslQc+d
W5y36/D9FhVrsXN0g+tf7V03OvB8QxpJI4e7IXFkD9/VSZzv1vCBNa9ucPr0
LMZwFj+PpZvX/oZ1g7oVg99gDo9XzE84n9QNbf0DQhdXqVBSQxG0a+yGTd1f
xU9z0yC1iOh0UroHGt4KfT61lwasDpNDfad6IMb4leRJARrUdH4hLRr3gGKH
m8wxCRpo01/8jQjqAatmUJA/ToOgMVanAFoPyIVlZ8pq4PHuVy7Ps/cCXVdS
SeYMjnMnpQZleuFVHZvKAV0a0JPststa90JxZacavxUNSjiaO+N6emF/oYPW
1iAaWNV+PKQ/2gc8/EymUygNsLiE1vQd/cD+ICiLFIHnd6bnXpJiP6we/iKY
/oEGdhK2H6/79kNP0gDN8CeOY7KEeKQHIPrl5fiEAXz97Q+Jq68HIWxy8Arb
GB4/z9pUumwQArWcdrj9w/PRv3pmfm4Q3DaC3c4v0GB16uOt44eGwPB+hQ55
xxxo6/yMDooYAs5rx5ZPqM7h/snNNMN5GLblVaZ/UZ8DZ1r5j5nQYVjjMbLm
wuag4uVZok/aMMw0OTeO6Mzhfn1f9Je/w1B35lvSC6s5sMp3NFy6NQLPZfcb
EF/OQVaLrd+kI/5+Zm7+6joyB4USspW00nGwGu2e9/k7BzmPVX1j/45DSUPW
qdCZOeBplIiJ5JjA723LjpQlfP3JG+WPzSdgQ7Ngo49tHjrq7lyUpU/A+isX
4/PK8yDXJuoufHYSViWHtggFzIOQ8uwUK/80WHD9vnTwBT7OvkdG78I0FNJD
3x0Nm4cGg1yWqYfT4F1/4vDlmHn4LFkdpNA3DSvOb82fpc8Di0yK6r/PM8D8
c+kHtWMe0nPExMzOk2H5cpFlpeQCLH06e2gU16Vfd2b/qUMLkBwmH3NxBw04
byZa5CkuQFtqiOfMQRpIOT83TzuxAGE1/xRIDjQwCrts/PryAnhNyvy8NkeD
rLpxveuPF+BBXJimKr6vO2c5NRY7FkBASIPtnO0iLNQRCp16FiDX9toga9gi
+BrOq08OLoDsAnPvjtxFiLlJOt47tQDBiZh22bYlqPJJVCklLMKSabWUUNoS
iBcelQuVW4SycaP9rzeWoVflhqBkwCKor6Z9iSMxwZahyhX4YhEUrnzr9tq+
gj+H7FvGcR516rTIu6MrwHK+YOrzu0UQCObzjY5aAQWzvQUSmYtgXnOhN8Z4
FXwf15tK9CxC17+1JwNjayBVdSz6gOISFJnxV5W+w/u3YM5gf9UlSNv0xtIU
7zfU9ccfj6ovwZVmpvcuvL/RJ0XYJGktQTn7g7hp1k2Y59SsyoFrS1B68uqH
016bsHrOz+3iz5bgsd0b52e3NmPOJty7xPuWYOvPzPTNl1kw69TDsZLDS9C6
/F32nxMLdpVx6cDBiSV4mK00SwlhwdTfh6oqUnFfTLT3t6xlwbYOspmfYlmG
ylt9TaVnt2KxtluTzOWWQaMlGWWe2oZVuDNV3ngvg4tReEGCHiuWW8VfHP10
GdY6L7dm3WPFvvKpnY99tgyNStkGo69ZsbB8D7NP4cuwv6CuKbOLFTNbW3ic
+XkZ3qm+yJy8uQMjB1Cq6huW4YJNu/a/J2wYf+SYKct+OqyNFtUmtLNjx/1F
eN3E6WAW3GlmtcaOGbuat49K0+HCxMiijjQHFmHQold+hA42V1vTPz3iwNg5
Cs/4adPhRUPRGxMpTmw98I0cwY0OjVeTNRn+XNiYxxnCah0dqp4zY80Vd2EZ
1xJS5j0ZEOM8uz/SkAdTIR5gbnvCAHvni7YODjzYH8MUXQF/BphPca2aBPBg
NRcyaFgoA6JPDB91yeXBRo8Vngj7xADdws8rnwX3Yvt4SM0ydQwIe73TVGBq
L+bXwEW/LsiE23m67k/f8mEmGj7aNUVMmEy7Yu98VBDrW5zgKitjQk29boK+
kSBmnXGJ+KeaCdHX/+RquQpijiLCtpmtTBj4+zHtQYYg5repyD96nAneH7wr
ZqSFsIxKZvFtjhUQl+RXPCKyH2O59EB10/UVaOusVbMVEcF+WN4VV19dgSOb
bb7q5Yhh1r+o+xM2rQLnUa26qmoxjIfdjX/b9lWw5C3uutQrhj3I9+Ju27UK
KdGXGl5uFsfUeYLW70ivwlGzTYP5l8WxstrEnneGq+C65aH+zJw41qFCimCk
roLQZnMWEiaB0dnObsm/ugZ7ZBS4T7JLY4atJ47uj1mHqOtpNzYvy2FsJ3aW
Fn5Yh09/Q4ff75HHSj/3XLRIWocXF/4JX1CUxxQ9H958n7EO+rkL0wN35DFO
kd8h/JXrsE2ML5PeL48VHBFziq5fh////+P/B+GGy9o=
          "]]}, Annotation[#, "Charting`Private`Tag$3751#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
//1eH/7/7/X/D8klTU8=
          "]]}, Annotation[#, "Charting`Private`Tag$3751#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(U\\), \\(q\\)]\\)(x)\"", TraditionalForm]},
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.999999918367347, 1.999999918367347}, {-1.5, 15}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\[Sigma]=0.2\"", "\"\[Sigma]=0.5\"", "\"\[Sigma]=1\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.847164799487398*^9, 3.8515262133041835`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"4b6932a0-8052-4f57-8132-c91c88c71647"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"LinkSnooper",
WindowSize->{1141.2, 573.6},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"4ecaca2c-97f0-4bd9-b6e3-4d6b4929fa35"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 180, 3, 54, "Subsection",ExpressionUUID->"2959adb3-1f03-483b-b5c6-3c762b7587ec"],
Cell[CellGroupData[{
Cell[785, 29, 169, 3, 45, "Subsubsection",ExpressionUUID->"10887ab3-a272-4641-8058-66653892678f"],
Cell[957, 34, 238, 6, 35, "Text",ExpressionUUID->"d6cf6e07-d299-46fa-bf81-8f913c5da593"],
Cell[CellGroupData[{
Cell[1220, 44, 14008, 359, 761, "Input",ExpressionUUID->"f18a3429-f261-430e-b634-c8f5715b46db"],
Cell[CellGroupData[{
Cell[15253, 407, 818, 13, 23, "Print",ExpressionUUID->"f942b74e-0fe4-4b82-833a-a5c5f2734ab9"],
Cell[16074, 422, 815, 13, 21, "Print",ExpressionUUID->"6afa4036-e324-480e-bca4-e423ac7cd25d"],
Cell[16892, 437, 818, 13, 21, "Print",ExpressionUUID->"639911ee-97ea-46d0-83bd-cd3b06a24514"]
}, Open  ]],
Cell[17725, 453, 85180, 1473, 266, "Output",ExpressionUUID->"515b3dc8-ee50-4d74-bb86-9c83deb944c0"],
Cell[102908, 1928, 55013, 978, 262, "Output",ExpressionUUID->"70a51a45-8b5c-4916-bd80-86bea749beb0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[157970, 2912, 226, 4, 45, "Subsubsection",ExpressionUUID->"5c6d62d7-40cc-4808-8827-da4105899e72"],
Cell[158199, 2918, 235, 6, 58, "Text",ExpressionUUID->"a58ff05d-bb46-49e5-993a-3d814a9fed3d"],
Cell[CellGroupData[{
Cell[158459, 2928, 15905, 434, 804, "Input",ExpressionUUID->"f8e937b5-f3a1-4d7d-a15a-f5a4b7729300"],
Cell[CellGroupData[{
Cell[174389, 3366, 735, 12, 23, "Print",ExpressionUUID->"8faf153d-6d69-4f82-85b8-76cd0ec34e44"],
Cell[175127, 3380, 749, 13, 21, "Print",ExpressionUUID->"119a4f7f-1cde-4dcd-abfd-cba971ddb726"],
Cell[175879, 3395, 735, 12, 23, "Print",ExpressionUUID->"3bfb4dbc-5194-408b-b25e-7e52a626284f"],
Cell[176617, 3409, 734, 12, 21, "Print",ExpressionUUID->"acb476d0-b07a-4437-9234-21a42f40ab96"]
}, Open  ]],
Cell[177366, 3424, 81266, 1419, 266, "Output",ExpressionUUID->"87a64955-48d3-407c-82eb-a114c8736f71"],
Cell[258635, 4845, 53838, 967, 259, "Output",ExpressionUUID->"c270a902-13da-43fb-ab1b-484d4b99e9c3"]
}, Open  ]],
Cell[312488, 5815, 155, 3, 28, "Input",ExpressionUUID->"69b25ab0-aa07-4d91-81ba-02da8a0dc148"],
Cell[312646, 5820, 153, 3, 28, "Input",ExpressionUUID->"30bbaf6e-cdb9-43bf-8dd5-b0aad86dbbea"],
Cell[312802, 5825, 227, 6, 58, "Text",ExpressionUUID->"a2c4ed5c-f327-4a32-be62-73dfc9cc03c6"],
Cell[CellGroupData[{
Cell[313054, 5835, 14521, 368, 760, "Input",ExpressionUUID->"16b777a9-91b4-449e-9167-1359f3d07a33"],
Cell[CellGroupData[{
Cell[327600, 6207, 435, 7, 21, "Print",ExpressionUUID->"e840ed69-fe37-471e-85ad-420d94e805fa"],
Cell[328038, 6216, 430, 7, 21, "Print",ExpressionUUID->"e8715099-4996-4715-a6dd-f505e924a6d2"],
Cell[328471, 6225, 431, 7, 21, "Print",ExpressionUUID->"fba4df88-78c7-4e54-9018-046f4799529a"]
}, Open  ]],
Cell[328917, 6235, 58807, 1042, 266, "Output",ExpressionUUID->"5ec11fa0-9d09-4404-8fe7-aae9f4d9f6f2"],
Cell[387727, 7279, 43475, 789, 255, "Output",ExpressionUUID->"41bb748d-1471-4de7-8c31-fd5888bfabf7"]
}, Open  ]],
Cell[431217, 8071, 161, 3, 35, "Text",ExpressionUUID->"88a15dcc-84ee-4968-8f27-d253345b0113"],
Cell[CellGroupData[{
Cell[431403, 8078, 8500, 259, 565, "Input",ExpressionUUID->"2cbd6224-de2b-4b41-9c96-dfd00e2a728d"],
Cell[CellGroupData[{
Cell[439928, 8341, 419, 8, 21, "Print",ExpressionUUID->"a3bf28db-9db3-4fdc-814a-21fe0aa0f914"],
Cell[440350, 8351, 409, 7, 21, "Print",ExpressionUUID->"7c20d512-9c2b-4b44-9bc1-1701356dd35c"]
}, Open  ]],
Cell[440774, 8361, 33531, 612, 266, "Output",ExpressionUUID->"8a32428d-3e6c-43cb-80a4-c7df3497dc32"],
Cell[474308, 8975, 32203, 590, 269, "Output",ExpressionUUID->"4b4dd468-0967-4277-bc22-5496cc48ae84"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[506572, 9572, 243, 6, 54, "Subsection",ExpressionUUID->"f4979b63-1fa4-4825-ba1f-6b50c18a3c11"],
Cell[506818, 9580, 815, 15, 81, "Text",ExpressionUUID->"6be1358c-f728-408d-97b0-5c1068bb3134"],
Cell[CellGroupData[{
Cell[507658, 9599, 33364, 766, 2113, "Input",ExpressionUUID->"86e3bc32-ae74-4024-878c-1ad7b2496cc2"],
Cell[CellGroupData[{
Cell[541047, 10369, 219, 4, 23, "Print",ExpressionUUID->"9cedf296-e9b5-475e-9ac6-fe16958f7185"],
Cell[541269, 10375, 213, 4, 21, "Print",ExpressionUUID->"b4798776-65d1-49be-bb10-25de1b51dd7c"],
Cell[541485, 10381, 218, 4, 21, "Print",ExpressionUUID->"d3bc82a5-b159-46f2-932c-9f9eb2e21990"]
}, Open  ]],
Cell[541718, 10388, 28236, 523, 257, "Output",ExpressionUUID->"de1f20a4-9fde-495a-a411-608241eed881"],
Cell[569957, 10913, 90678, 1563, 266, "Output",ExpressionUUID->"17a3ed95-dcdc-4f94-8a90-243eb975d88c"],
Cell[660638, 12478, 60919, 1076, 255, "Output",ExpressionUUID->"4b6932a0-8052-4f57-8132-c91c88c71647"]
}, Open  ]]
}, Open  ]]
}
]
*)

